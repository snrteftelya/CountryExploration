2025-04-24 04:00:10 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 91524 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-24 04:00:10 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-24 04:00:11 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-24 04:00:11 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23 ms. Found 3 JPA repository interfaces.
2025-04-24 04:00:11 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-24 04:00:11 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-24 04:00:11 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-24 04:00:11 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-24 04:00:11 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-24 04:00:11 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 752 ms
2025-04-24 04:00:11 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-24 04:00:11 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-24 04:00:11 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-24 04:00:11 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-24 04:00:11 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-24 04:00:11 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5d3b6585
2025-04-24 04:00:11 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-24 04:00:12 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-24 04:00:12 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-24 04:00:12 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-24 04:00:12 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-24 04:00:13 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-24 04:00:13 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-24 04:00:13 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.278 seconds (process running for 3.642)
2025-04-24 04:00:16 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-24 04:00:16 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-24 04:00:16 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-24 04:00:16 | INFO  | o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 257 ms
2025-04-24 04:00:41 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=24.04.2025,application.log
2025-04-24 04:00:41 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 04:00:41 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 04:00:41 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-04-24 04:01:09 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=24.04.2025,application.log
2025-04-24 04:01:09 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 04:01:09 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 04:01:09 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 2
2025-04-24 04:01:41 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=23.04.2025,application.log
2025-04-24 04:01:41 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 04:01:41 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 04:01:41 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 3
2025-04-24 04:01:44 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=23.04.2025,application.log
2025-04-24 04:01:44 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 04:01:44 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 04:01:44 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 4
2025-04-24 04:01:45 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=23.04.2025,application.log
2025-04-24 04:01:45 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 04:01:45 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 04:01:45 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 5
2025-04-24 04:01:46 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=23.04.2025,application.log
2025-04-24 04:01:46 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 04:01:46 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 04:01:46 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 6
2025-04-24 04:01:47 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=23.04.2025,application.log
2025-04-24 04:01:47 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 04:01:47 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 04:01:47 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 7
2025-04-24 04:01:47 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=23.04.2025,application.log
2025-04-24 04:01:47 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 04:01:47 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 04:01:47 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 8
2025-04-24 04:01:48 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=23.04.2025,application.log
2025-04-24 04:01:48 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 04:01:48 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 04:01:48 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 9
2025-04-24 04:36:29 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=33m47s875ms).
2025-04-24 05:59:50 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h23m20s502ms).
2025-04-24 07:04:47 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h4m57s529ms).
2025-04-24 08:22:46 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h17m58s339ms).
2025-04-24 09:38:44 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h15m58s629ms).
2025-04-24 10:40:30 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h1m45s916ms).
2025-04-24 11:01:59 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=21m29s200ms).
2025-04-24 11:12:51 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=10m51s80ms).
2025-04-24 11:18:48 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountries()), args=
2025-04-24 11:18:49 | INFO  | org.example.service.CountryService - 🔄 Fetched 1 countries from DB and cached
2025-04-24 11:18:49 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-04-24 11:18:49 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-04-24 11:18:49 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 10
2025-04-24 11:19:10 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long)), args=1
2025-04-24 11:19:10 | WARN  | o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 42883
2025-04-24 11:19:10 | ERROR | o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: function lower(bytea) does not exist
  Подсказка: No function matches the given name and argument types. You might need to add explicit type casts.
  Позиция: 126
2025-04-24 11:19:10 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long)), exception: JDBC exception executing SQL [select c1_0.id,c1_0.area,c1_0.country_id,c1_0.name,c1_0.population from city c1_0 where (? is null or lower(c1_0.name) like lower(('%'||?||'%')) escape '') and (? is null or c1_0.country_id=?)] [ERROR: function lower(bytea) does not exist
  Подсказка: No function matches the given name and argument types. You might need to add explicit type casts.
  Позиция: 126] [n/a]; SQL [n/a]
2025-04-24 11:19:10 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long))
2025-04-24 11:19:10 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 11
2025-04-24 11:19:23 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long)), args=Berlin,1
2025-04-24 11:19:23 | INFO  | org.example.service.CityService - Putting to cache: name=Berlin&countryId=1 -> 1
2025-04-24 11:19:23 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long))
2025-04-24 11:19:23 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long))
2025-04-24 11:19:23 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 12
2025-04-24 11:19:28 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long)), args=1
2025-04-24 11:19:28 | WARN  | o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 42883
2025-04-24 11:19:28 | ERROR | o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: function lower(bytea) does not exist
  Подсказка: No function matches the given name and argument types. You might need to add explicit type casts.
  Позиция: 126
2025-04-24 11:19:28 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long)), exception: JDBC exception executing SQL [select c1_0.id,c1_0.area,c1_0.country_id,c1_0.name,c1_0.population from city c1_0 where (? is null or lower(c1_0.name) like lower(('%'||?||'%')) escape '') and (? is null or c1_0.country_id=?)] [ERROR: function lower(bytea) does not exist
  Подсказка: No function matches the given name and argument types. You might need to add explicit type casts.
  Позиция: 126] [n/a]; SQL [n/a]
2025-04-24 11:19:28 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long))
2025-04-24 11:19:28 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 13
2025-04-24 11:26:01 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=2025-04-24,application.log
2025-04-24 11:26:01 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:26:01 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:26:01 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 14
2025-04-24 11:26:17 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=2025-04-23,application.log
2025-04-24 11:26:17 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:26:17 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:26:17 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 15
2025-04-24 11:27:05 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=2025-04-23,application.log
2025-04-24 11:27:05 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:05 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:05 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 16
2025-04-24 11:27:11 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=2025-04-23,application.log
2025-04-24 11:27:11 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:11 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:11 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 17
2025-04-24 11:27:11 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=2025-04-23,application.log
2025-04-24 11:27:11 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:11 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:11 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 18
2025-04-24 11:27:12 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=2025-04-23,application.log
2025-04-24 11:27:12 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:12 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:12 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 19
2025-04-24 11:27:12 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=2025-04-23,application.log
2025-04-24 11:27:12 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:12 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:12 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 20
2025-04-24 11:27:12 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=2025-04-23,application.log
2025-04-24 11:27:12 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:12 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:12 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 21
2025-04-24 11:27:12 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=2025-04-23,application.log
2025-04-24 11:27:12 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:12 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:12 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 22
2025-04-24 11:27:13 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=2025-04-23,application.log
2025-04-24 11:27:13 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:13 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:13 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 23
2025-04-24 11:27:13 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=2025-04-23,application.log
2025-04-24 11:27:13 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:13 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:13 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 24
2025-04-24 11:27:13 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=2025-04-23,application.log
2025-04-24 11:27:13 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:13 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:13 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 25
2025-04-24 11:27:13 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=2025-04-23,application.log
2025-04-24 11:27:13 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:13 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:13 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 26
2025-04-24 11:27:13 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=2025-04-23,application.log
2025-04-24 11:27:13 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:13 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:13 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 27
2025-04-24 11:27:14 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=2025-04-23,application.log
2025-04-24 11:27:14 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:14 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:14 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 28
2025-04-24 11:27:14 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=2025-04-23,application.log
2025-04-24 11:27:14 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:14 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:14 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 29
2025-04-24 11:27:14 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=2025-04-23,application.log
2025-04-24 11:27:14 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:14 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:14 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 30
2025-04-24 11:27:14 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=2025-04-23,application.log
2025-04-24 11:27:14 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:14 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:14 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 31
2025-04-24 11:27:14 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=2025-04-23,application.log
2025-04-24 11:27:14 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:14 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:14 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 32
2025-04-24 11:27:15 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=2025-04-23,application.log
2025-04-24 11:27:15 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:15 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:15 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 33
2025-04-24 11:27:15 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=2025-04-23,application.log
2025-04-24 11:27:15 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:15 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:15 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 34
2025-04-24 11:27:20 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=2025-04-21,application.log
2025-04-24 11:27:20 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:20 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:20 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 35
2025-04-24 11:27:27 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=2025-04-21,application.log
2025-04-24 11:27:27 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:27 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:27 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 36
2025-04-24 11:27:27 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=2025-04-21,application.log
2025-04-24 11:27:27 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:27 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:27 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 37
2025-04-24 11:27:27 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=2025-04-21,application.log
2025-04-24 11:27:27 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:27 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:27 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 38
2025-04-24 11:27:27 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=2025-04-21,application.log
2025-04-24 11:27:27 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:27 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:27 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 39
2025-04-24 11:27:28 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=2025-04-21,application.log
2025-04-24 11:27:28 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:28 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:28 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 40
2025-04-24 11:27:28 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=2025-04-21,application.log
2025-04-24 11:27:28 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:28 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:28 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 41
2025-04-24 11:27:28 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=2025-04-21,application.log
2025-04-24 11:27:28 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:28 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:28 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 42
2025-04-24 11:27:28 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=2025-04-21,application.log
2025-04-24 11:27:28 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:28 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:28 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 43
2025-04-24 11:27:28 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=2025-04-21,application.log
2025-04-24 11:27:28 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:28 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:28 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 44
2025-04-24 11:27:28 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=2025-04-21,application.log
2025-04-24 11:27:28 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:28 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:28 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 45
2025-04-24 11:27:29 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=2025-04-21,application.log
2025-04-24 11:27:29 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:29 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:29 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 46
2025-04-24 11:27:29 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=2025-04-21,application.log
2025-04-24 11:27:29 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:29 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:29 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 47
2025-04-24 11:27:29 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=2025-04-21,application.log
2025-04-24 11:27:29 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:29 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:29 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 48
2025-04-24 11:27:29 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=2025-04-21,application.log
2025-04-24 11:27:29 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:29 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:29 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 49
2025-04-24 11:27:29 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String)), args=2025-04-21,application.log
2025-04-24 11:27:29 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:29 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogController.getLogsByDate(String,String))
2025-04-24 11:27:29 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 50
2025-04-24 11:28:50 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Retrograde clock change detected (housekeeper delta=29s506ms), soft-evicting connections from pool.
2025-04-24 11:33:23 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-24 11:33:23 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-24 11:33:23 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-24 11:33:23 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-24 11:33:26 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 92145 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-24 11:33:26 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-24 11:33:26 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-24 11:33:26 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 3 JPA repository interfaces.
2025-04-24 11:33:26 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-24 11:33:26 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-24 11:33:26 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-24 11:33:26 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-24 11:33:26 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-24 11:33:26 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 737 ms
2025-04-24 11:33:27 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-24 11:33:27 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-24 11:33:27 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-24 11:33:27 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-24 11:33:27 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-24 11:33:27 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7b3c2ae0
2025-04-24 11:33:27 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-24 11:33:27 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-24 11:33:27 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-24 11:33:27 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-24 11:33:28 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-24 11:33:29 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-24 11:33:29 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-24 11:33:29 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.293 seconds (process running for 3.683)
2025-04-24 11:33:47 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-24 11:33:47 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-24 11:33:47 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-24 11:33:47 | WARN  | o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Failure in @ExceptionHandler org.example.exception.ExceptionManager#globalExceptionHandler(Exception, WebRequest)
org.springframework.web.HttpMediaTypeNotAcceptableException: No acceptable representation
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:256)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:432)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-24 11:33:51 | WARN  | o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Failure in @ExceptionHandler org.example.exception.ExceptionManager#globalExceptionHandler(Exception, WebRequest)
org.springframework.web.HttpMediaTypeNotAcceptableException: No acceptable representation
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:256)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:432)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-24 11:33:54 | WARN  | o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Failure in @ExceptionHandler org.example.exception.ExceptionManager#globalExceptionHandler(Exception, WebRequest)
org.springframework.web.HttpMediaTypeNotAcceptableException: No acceptable representation
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:256)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:432)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-24 11:35:21 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-24 11:35:21 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-24 11:35:21 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-24 11:35:21 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-24 11:35:24 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 92196 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-24 11:35:24 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-24 11:35:24 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-24 11:35:24 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 3 JPA repository interfaces.
2025-04-24 11:35:24 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-24 11:35:24 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-24 11:35:24 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-24 11:35:24 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-24 11:35:24 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-24 11:35:24 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 724 ms
2025-04-24 11:35:24 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-24 11:35:25 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-24 11:35:25 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-24 11:35:25 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-24 11:35:25 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-24 11:35:25 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@545604a9
2025-04-24 11:35:25 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-24 11:35:25 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-24 11:35:25 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-24 11:35:25 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-24 11:35:25 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-24 11:35:27 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-24 11:35:27 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-24 11:35:27 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.192 seconds (process running for 3.586)
2025-04-24 11:35:27 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-24 11:35:27 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-24 11:35:27 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-24 11:35:27 | WARN  | o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Failure in @ExceptionHandler org.example.exception.ExceptionManager#globalExceptionHandler(Exception, WebRequest)
org.springframework.web.HttpMediaTypeNotAcceptableException: No acceptable representation
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:256)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:432)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-24 11:35:32 | WARN  | o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Failure in @ExceptionHandler org.example.exception.ExceptionManager#globalExceptionHandler(Exception, WebRequest)
org.springframework.web.HttpMediaTypeNotAcceptableException: No acceptable representation
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:256)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:432)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-22 11:38:28 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-22 11:38:28 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-24 11:38:28 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-24 11:38:28 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-24 11:41:25 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 92343 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-24 11:41:25 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-24 11:41:26 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-24 11:41:26 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 3 JPA repository interfaces.
2025-04-24 11:41:26 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-24 11:41:26 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-24 11:41:26 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-24 11:41:26 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-24 11:41:26 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-24 11:41:26 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 680 ms
2025-04-24 11:41:26 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-24 11:41:26 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-24 11:41:26 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-24 11:41:26 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-24 11:41:26 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-24 11:41:26 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@716ae973
2025-04-24 11:41:26 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-24 11:41:27 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-24 11:41:27 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-24 11:41:27 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-24 11:41:27 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-24 11:41:28 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-24 11:41:28 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-24 11:41:28 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.116 seconds (process running for 3.464)
2025-04-24 11:41:32 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-24 11:41:32 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-24 11:41:32 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-04-24 11:41:33 | INFO  | o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 251 ms
2025-04-24 11:41:53 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(String org.example.controller.LogsController.getCurrentLogs()), args=
2025-04-24 11:41:53 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(String org.example.controller.LogsController.getCurrentLogs())
2025-04-24 11:41:53 | INFO  | o.example.aspect.CountrySearchAspect - After execution(String org.example.controller.LogsController.getCurrentLogs())
2025-04-24 11:41:53 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-04-24 11:58:22 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m55s800ms).
2025-04-24 12:14:48 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m55s679ms).
2025-04-24 12:22:16 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=7m28s105ms).
2025-04-24 12:23:55 | WARN  | o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Failure in @ExceptionHandler org.example.exception.ExceptionManager#globalExceptionHandler(Exception, WebRequest)
org.springframework.web.HttpMediaTypeNotAcceptableException: No acceptable representation
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:256)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:432)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-24 12:23:55 | ERROR | o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalStateException: No target Validator set] with root cause
java.lang.IllegalStateException: No target Validator set
	at org.springframework.util.Assert.state(Assert.java:76)
	at org.springframework.validation.beanvalidation.SpringValidatorAdapter.forExecutables(SpringValidatorAdapter.java:403)
	at org.springframework.validation.beanvalidation.MethodValidationAdapter.invokeValidatorForArguments(MethodValidationAdapter.java:258)
	at org.springframework.validation.beanvalidation.MethodValidationAdapter.validateArguments(MethodValidationAdapter.java:241)
	at org.springframework.web.method.annotation.HandlerMethodValidator.validateArguments(HandlerMethodValidator.java:115)
	at org.springframework.web.method.annotation.HandlerMethodValidator.applyArgumentValidation(HandlerMethodValidator.java:83)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:185)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-24 12:23:58 | WARN  | o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Failure in @ExceptionHandler org.example.exception.ExceptionManager#globalExceptionHandler(Exception, WebRequest)
org.springframework.web.HttpMediaTypeNotAcceptableException: No acceptable representation
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:256)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:432)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-24 12:23:58 | ERROR | o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalStateException: No target Validator set] with root cause
java.lang.IllegalStateException: No target Validator set
	at org.springframework.util.Assert.state(Assert.java:76)
	at org.springframework.validation.beanvalidation.SpringValidatorAdapter.forExecutables(SpringValidatorAdapter.java:403)
	at org.springframework.validation.beanvalidation.MethodValidationAdapter.invokeValidatorForArguments(MethodValidationAdapter.java:258)
	at org.springframework.validation.beanvalidation.MethodValidationAdapter.validateArguments(MethodValidationAdapter.java:241)
	at org.springframework.web.method.annotation.HandlerMethodValidator.validateArguments(HandlerMethodValidator.java:115)
	at org.springframework.web.method.annotation.HandlerMethodValidator.applyArgumentValidation(HandlerMethodValidator.java:83)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:185)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-24 12:23:59 | WARN  | o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Failure in @ExceptionHandler org.example.exception.ExceptionManager#globalExceptionHandler(Exception, WebRequest)
org.springframework.web.HttpMediaTypeNotAcceptableException: No acceptable representation
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:256)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:432)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-24 12:23:59 | ERROR | o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalStateException: No target Validator set] with root cause
java.lang.IllegalStateException: No target Validator set
	at org.springframework.util.Assert.state(Assert.java:76)
	at org.springframework.validation.beanvalidation.SpringValidatorAdapter.forExecutables(SpringValidatorAdapter.java:403)
	at org.springframework.validation.beanvalidation.MethodValidationAdapter.invokeValidatorForArguments(MethodValidationAdapter.java:258)
	at org.springframework.validation.beanvalidation.MethodValidationAdapter.validateArguments(MethodValidationAdapter.java:241)
	at org.springframework.web.method.annotation.HandlerMethodValidator.validateArguments(HandlerMethodValidator.java:115)
	at org.springframework.web.method.annotation.HandlerMethodValidator.applyArgumentValidation(HandlerMethodValidator.java:83)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:185)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-24 12:24:27 | WARN  | o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Failure in @ExceptionHandler org.example.exception.ExceptionManager#globalExceptionHandler(Exception, WebRequest)
org.springframework.web.HttpMediaTypeNotAcceptableException: No acceptable representation
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:256)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:432)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-24 12:24:27 | ERROR | o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalStateException: No target Validator set] with root cause
java.lang.IllegalStateException: No target Validator set
	at org.springframework.util.Assert.state(Assert.java:76)
	at org.springframework.validation.beanvalidation.SpringValidatorAdapter.forExecutables(SpringValidatorAdapter.java:403)
	at org.springframework.validation.beanvalidation.MethodValidationAdapter.invokeValidatorForArguments(MethodValidationAdapter.java:258)
	at org.springframework.validation.beanvalidation.MethodValidationAdapter.validateArguments(MethodValidationAdapter.java:241)
	at org.springframework.web.method.annotation.HandlerMethodValidator.validateArguments(HandlerMethodValidator.java:115)
	at org.springframework.web.method.annotation.HandlerMethodValidator.applyArgumentValidation(HandlerMethodValidator.java:83)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:185)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-24 12:25:10 | WARN  | o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Failure in @ExceptionHandler org.example.exception.ExceptionManager#globalExceptionHandler(Exception, WebRequest)
org.springframework.web.HttpMediaTypeNotAcceptableException: No acceptable representation
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:256)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:432)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-24 12:25:10 | ERROR | o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalStateException: No target Validator set] with root cause
java.lang.IllegalStateException: No target Validator set
	at org.springframework.util.Assert.state(Assert.java:76)
	at org.springframework.validation.beanvalidation.SpringValidatorAdapter.forExecutables(SpringValidatorAdapter.java:403)
	at org.springframework.validation.beanvalidation.MethodValidationAdapter.invokeValidatorForArguments(MethodValidationAdapter.java:258)
	at org.springframework.validation.beanvalidation.MethodValidationAdapter.validateArguments(MethodValidationAdapter.java:241)
	at org.springframework.web.method.annotation.HandlerMethodValidator.validateArguments(HandlerMethodValidator.java:115)
	at org.springframework.web.method.annotation.HandlerMethodValidator.applyArgumentValidation(HandlerMethodValidator.java:83)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:185)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-24 12:25:10 | WARN  | o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Failure in @ExceptionHandler org.example.exception.ExceptionManager#globalExceptionHandler(Exception, WebRequest)
org.springframework.web.HttpMediaTypeNotAcceptableException: No acceptable representation
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:256)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:432)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-24 12:25:10 | ERROR | o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalStateException: No target Validator set] with root cause
java.lang.IllegalStateException: No target Validator set
	at org.springframework.util.Assert.state(Assert.java:76)
	at org.springframework.validation.beanvalidation.SpringValidatorAdapter.forExecutables(SpringValidatorAdapter.java:403)
	at org.springframework.validation.beanvalidation.MethodValidationAdapter.invokeValidatorForArguments(MethodValidationAdapter.java:258)
	at org.springframework.validation.beanvalidation.MethodValidationAdapter.validateArguments(MethodValidationAdapter.java:241)
	at org.springframework.web.method.annotation.HandlerMethodValidator.validateArguments(HandlerMethodValidator.java:115)
	at org.springframework.web.method.annotation.HandlerMethodValidator.applyArgumentValidation(HandlerMethodValidator.java:83)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:185)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-24 12:27:02 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-24 12:27:02 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-24 12:27:02 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-24 12:27:02 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-24 12:27:04 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 92542 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-24 12:27:04 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-24 12:27:04 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-24 12:27:04 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 3 JPA repository interfaces.
2025-04-24 12:27:04 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-24 12:27:04 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-24 12:27:04 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-24 12:27:04 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-24 12:27:04 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-24 12:27:04 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 685 ms
2025-04-24 12:27:04 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-24 12:27:04 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-24 12:27:04 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-24 12:27:05 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-24 12:27:05 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-24 12:27:05 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@655909e2
2025-04-24 12:27:05 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-24 12:27:05 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-24 12:27:05 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-24 12:27:05 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-24 12:27:05 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-24 12:27:07 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-24 12:27:07 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-24 12:27:07 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.078 seconds (process running for 3.455)
2025-04-24 12:27:11 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-24 12:27:11 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-24 12:27:11 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-24 12:27:11 | WARN  | o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Failure in @ExceptionHandler org.example.exception.ExceptionManager#globalExceptionHandler(Exception, WebRequest)
org.springframework.web.HttpMediaTypeNotAcceptableException: No acceptable representation
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:256)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:432)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-24 12:27:11 | ERROR | o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalStateException: No target Validator set] with root cause
java.lang.IllegalStateException: No target Validator set
	at org.springframework.util.Assert.state(Assert.java:76)
	at org.springframework.validation.beanvalidation.SpringValidatorAdapter.forExecutables(SpringValidatorAdapter.java:403)
	at org.springframework.validation.beanvalidation.MethodValidationAdapter.invokeValidatorForArguments(MethodValidationAdapter.java:258)
	at org.springframework.validation.beanvalidation.MethodValidationAdapter.validateArguments(MethodValidationAdapter.java:241)
	at org.springframework.web.method.annotation.HandlerMethodValidator.validateArguments(HandlerMethodValidator.java:115)
	at org.springframework.web.method.annotation.HandlerMethodValidator.applyArgumentValidation(HandlerMethodValidator.java:83)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:185)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-24 12:41:50 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-24 12:41:50 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-24 12:41:50 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-24 12:41:50 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-24 12:41:52 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 92722 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-24 12:41:52 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-24 12:41:53 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-24 12:41:53 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 25 ms. Found 3 JPA repository interfaces.
2025-04-24 12:41:53 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-24 12:41:53 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-24 12:41:53 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-24 12:41:53 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-24 12:41:53 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-24 12:41:53 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 680 ms
2025-04-24 12:41:53 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-24 12:41:53 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-24 12:41:53 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-24 12:41:53 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-24 12:41:53 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-24 12:41:53 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5d3b6585
2025-04-24 12:41:54 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-24 12:41:54 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-24 12:41:54 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-24 12:41:54 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-24 12:41:54 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-24 12:41:55 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-24 12:41:55 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-24 12:41:55 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.073 seconds (process running for 3.431)
2025-04-24 12:42:04 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-24 12:42:04 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-24 12:42:04 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-04-24 12:42:04 | WARN  | o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Failure in @ExceptionHandler org.example.exception.ExceptionManager#globalExceptionHandler(Exception, WebRequest)
org.springframework.web.HttpMediaTypeNotAcceptableException: No acceptable representation
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:256)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:432)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-24 12:42:09 | WARN  | o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Failure in @ExceptionHandler org.example.exception.ExceptionManager#globalExceptionHandler(Exception, WebRequest)
org.springframework.web.HttpMediaTypeNotAcceptableException: No acceptable representation
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:256)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:432)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-24 12:42:14 | WARN  | o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Failure in @ExceptionHandler org.example.exception.ExceptionManager#globalExceptionHandler(Exception, WebRequest)
org.springframework.web.HttpMediaTypeNotAcceptableException: No acceptable representation
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:256)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:432)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-24 12:42:22 | WARN  | o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Failure in @ExceptionHandler org.example.exception.ExceptionManager#globalExceptionHandler(Exception, WebRequest)
org.springframework.web.HttpMediaTypeNotAcceptableException: No acceptable representation
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:256)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:432)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-24 12:48:03 | WARN  | o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Failure in @ExceptionHandler org.example.exception.ExceptionManager#globalExceptionHandler(Exception, WebRequest)
org.springframework.web.HttpMediaTypeNotAcceptableException: No acceptable representation
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:256)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:432)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-24 12:48:11 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-24 12:48:11 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-24 12:48:11 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-24 12:48:11 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-24 12:48:13 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 92810 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-24 12:48:13 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-24 12:48:13 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-24 12:48:13 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21 ms. Found 3 JPA repository interfaces.
2025-04-24 12:48:13 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-24 12:48:13 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-24 12:48:13 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-24 12:48:13 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-24 12:48:13 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-24 12:48:13 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 710 ms
2025-04-24 12:48:14 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-24 12:48:14 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-24 12:48:14 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-24 12:48:14 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-24 12:48:14 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-24 12:48:14 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@655909e2
2025-04-24 12:48:14 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-24 12:48:14 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-24 12:48:14 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-24 12:48:14 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-24 12:48:15 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-24 12:48:16 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-24 12:48:16 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-24 12:48:16 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.199 seconds (process running for 3.521)
2025-04-24 12:48:17 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-24 12:48:17 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-24 12:48:17 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-24 12:48:17 | WARN  | o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Failure in @ExceptionHandler org.example.exception.ExceptionManager#globalExceptionHandler(Exception, WebRequest)
org.springframework.web.HttpMediaTypeNotAcceptableException: No acceptable representation
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:256)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:432)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-24 12:48:17 | WARN  | o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Failure in @ExceptionHandler org.example.exception.ExceptionManager#globalExceptionHandler(Exception, WebRequest)
org.springframework.web.HttpMediaTypeNotAcceptableException: No acceptable representation
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:256)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:432)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-24 12:48:18 | WARN  | o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Failure in @ExceptionHandler org.example.exception.ExceptionManager#globalExceptionHandler(Exception, WebRequest)
org.springframework.web.HttpMediaTypeNotAcceptableException: No acceptable representation
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:256)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:432)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-24 12:48:44 | INFO  | o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 242 ms
2025-04-24 12:48:49 | WARN  | o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Failure in @ExceptionHandler org.example.exception.ExceptionManager#globalExceptionHandler(Exception, WebRequest)
org.springframework.web.HttpMediaTypeNotAcceptableException: No acceptable representation
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:256)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:432)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-24 12:48:49 | ERROR | o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalStateException: No target Validator set] with root cause
java.lang.IllegalStateException: No target Validator set
	at org.springframework.util.Assert.state(Assert.java:76)
	at org.springframework.validation.beanvalidation.SpringValidatorAdapter.forExecutables(SpringValidatorAdapter.java:403)
	at org.springframework.validation.beanvalidation.MethodValidationAdapter.invokeValidatorForArguments(MethodValidationAdapter.java:258)
	at org.springframework.validation.beanvalidation.MethodValidationAdapter.validateArguments(MethodValidationAdapter.java:241)
	at org.springframework.web.method.annotation.HandlerMethodValidator.validateArguments(HandlerMethodValidator.java:115)
	at org.springframework.web.method.annotation.HandlerMethodValidator.applyArgumentValidation(HandlerMethodValidator.java:83)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:185)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-24 12:52:22 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-24 12:52:22 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-24 12:52:22 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-24 12:52:22 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-24 12:52:24 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 92895 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-24 12:52:24 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-24 12:52:25 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-24 12:52:25 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 3 JPA repository interfaces.
2025-04-24 12:52:25 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-24 12:52:25 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-24 12:52:25 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-24 12:52:25 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-24 12:52:25 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-24 12:52:25 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 692 ms
2025-04-24 12:52:25 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-24 12:52:25 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-24 12:52:25 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-24 12:52:25 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-24 12:52:25 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-24 12:52:25 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@41059616
2025-04-24 12:52:25 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-24 12:52:26 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-24 12:52:26 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-24 12:52:26 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-24 12:52:26 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-24 12:52:27 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-24 12:52:27 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-24 12:52:27 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.163 seconds (process running for 3.488)
2025-04-24 12:52:29 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-24 12:52:29 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-24 12:52:29 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-04-24 12:52:29 | WARN  | o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Failure in @ExceptionHandler org.example.exception.ExceptionManager#globalExceptionHandler(Exception, WebRequest)
org.springframework.web.HttpMediaTypeNotAcceptableException: No acceptable representation
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:256)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:432)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-24 12:52:29 | ERROR | o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalStateException: No target Validator set] with root cause
java.lang.IllegalStateException: No target Validator set
	at org.springframework.util.Assert.state(Assert.java:76)
	at org.springframework.validation.beanvalidation.SpringValidatorAdapter.forExecutables(SpringValidatorAdapter.java:403)
	at org.springframework.validation.beanvalidation.MethodValidationAdapter.invokeValidatorForArguments(MethodValidationAdapter.java:258)
	at org.springframework.validation.beanvalidation.MethodValidationAdapter.validateArguments(MethodValidationAdapter.java:241)
	at org.springframework.web.method.annotation.HandlerMethodValidator.validateArguments(HandlerMethodValidator.java:115)
	at org.springframework.web.method.annotation.HandlerMethodValidator.applyArgumentValidation(HandlerMethodValidator.java:83)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:185)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-24 12:52:32 | WARN  | o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Failure in @ExceptionHandler org.example.exception.ExceptionManager#globalExceptionHandler(Exception, WebRequest)
org.springframework.web.HttpMediaTypeNotAcceptableException: No acceptable representation
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:256)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:432)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-24 12:52:32 | ERROR | o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalStateException: No target Validator set] with root cause
java.lang.IllegalStateException: No target Validator set
	at org.springframework.util.Assert.state(Assert.java:76)
	at org.springframework.validation.beanvalidation.SpringValidatorAdapter.forExecutables(SpringValidatorAdapter.java:403)
	at org.springframework.validation.beanvalidation.MethodValidationAdapter.invokeValidatorForArguments(MethodValidationAdapter.java:258)
	at org.springframework.validation.beanvalidation.MethodValidationAdapter.validateArguments(MethodValidationAdapter.java:241)
	at org.springframework.web.method.annotation.HandlerMethodValidator.validateArguments(HandlerMethodValidator.java:115)
	at org.springframework.web.method.annotation.HandlerMethodValidator.applyArgumentValidation(HandlerMethodValidator.java:83)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:185)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat    .util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-24 12:55:04 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-20 12:55:04 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-24 12:55:04 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-24 12:55:04 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-24 12:55:08 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-04-24 12:55:08 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 92950 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-24 12:55:08 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-24 12:55:08 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-24 12:55:08 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21 ms. Found 3 JPA repository interfaces.
2025-04-24 12:55:08 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-24 12:55:08 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-24 12:55:08 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-24 12:55:08 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-24 12:55:08 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-24 12:55:08 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 741 ms
2025-04-24 12:55:08 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-24 12:55:08 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-24 12:55:08 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-24 12:55:09 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-24 12:55:09 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-24 12:55:09 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7079f8f0
2025-04-24 12:55:09 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-24 12:55:09 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-24 12:55:09 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-24 12:55:09 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-24 12:55:09 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-24 12:55:11 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-24 12:55:11 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-24 12:55:11 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.265 seconds (process running for 3.607)
2025-04-24 12:55:13 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-24 12:55:13 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-24 12:55:13 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-24 12:55:13 | INFO  | o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 230 ms
2025-04-24 12:55:20 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogsController.downloadLogs(String)), args=2025-04-24
2025-04-24 12:55:20 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogsController.downloadLogs(String))
2025-04-24 12:55:20 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogsController.downloadLogs(String))
2025-04-24 12:55:20 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-04-24 12:55:35 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogsController.downloadLogs(String)), args=2025-04-22
2025-04-24 12:55:35 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogsController.downloadLogs(String))
2025-04-24 12:55:35 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogsController.downloadLogs(String))
2025-04-24 12:55:35 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 2
2025-04-24 13:03:26 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-24 13:03:26 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-24 13:03:26 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-24 13:03:26 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-24 13:03:28 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-04-24 13:03:28 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 93113 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-24 13:03:28 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-24 13:03:28 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-24 13:03:28 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22 ms. Found 3 JPA repository interfaces.
2025-04-24 13:03:29 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-24 13:03:29 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-24 13:03:29 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-24 13:03:29 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-24 13:03:29 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-24 13:03:29 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 790 ms
2025-04-24 13:03:29 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-24 13:03:29 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-24 13:03:29 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-24 13:03:29 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-24 13:03:29 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-24 13:03:29 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@403f7aa2
2025-04-24 13:03:29 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-24 13:03:29 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-24 13:03:30 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-24 13:03:30 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-24 13:03:30 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-24 13:03:31 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-24 13:03:31 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-24 13:03:31 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.448 seconds (process running for 3.801)
2025-04-24 13:03:32 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-24 13:03:32 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-24 13:03:32 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-24 13:03:32 | INFO  | o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 242 ms
2025-04-24 13:05:16 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-24 13:05:16 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-24 13:05:16 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-24 13:05:16 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-24 13:05:18 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-04-24 13:05:18 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 93149 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-24 13:05:18 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-24 13:05:18 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-24 13:05:18 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23 ms. Found 3 JPA repository interfaces.
2025-04-24 13:05:18 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-24 13:05:18 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-24 13:05:18 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-24 13:05:18 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-24 13:05:18 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-24 13:05:18 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 743 ms
2025-04-24 13:05:19 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-24 13:05:19 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-24 13:05:19 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-24 13:05:19 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-24 13:05:19 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-24 13:05:19 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6abe62bb
2025-04-24 13:05:19 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-24 13:05:19 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-24 13:05:19 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-24 13:05:19 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-24 13:05:20 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-24 13:05:21 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-24 13:05:21 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-24 13:05:21 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.388 seconds (process running for 3.712)
2025-04-24 13:05:21 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-24 13:05:21 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-24 13:05:21 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-24 13:05:22 | INFO  | o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 239 ms
2025-04-24 13:05:31 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String)), args=2025-04-24,*/*
2025-04-24 13:05:31 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String))
2025-04-24 13:05:31 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String))
2025-04-24 13:05:31 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-04-24 13:08:11 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-24 13:08:11 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-24 13:08:11 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-24 13:08:11 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-24 13:08:13 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-04-24 13:08:13 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 93286 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-24 13:08:13 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-24 13:08:13 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-24 13:08:13 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 3 JPA repository interfaces.
2025-04-24 13:08:14 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-24 13:08:14 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-24 13:08:14 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-24 13:08:14 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-24 13:08:14 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-24 13:08:14 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 734 ms
2025-04-24 13:08:14 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-24 13:08:14 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-24 13:08:14 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-24 13:08:14 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-24 13:08:14 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-24 13:08:14 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1c0e4262
2025-04-24 13:08:14 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-24 13:08:15 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-24 13:08:15 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-24 13:08:15 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-24 13:08:15 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-24 13:08:16 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-24 13:08:16 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-24 13:08:16 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.291 seconds (process running for 3.669)
2025-04-24 13:08:17 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-24 13:08:17 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-24 13:08:17 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-24 13:08:17 | INFO  | o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 251 ms
2025-04-24 13:08:21 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String)), args=2025-04-24,*/*
2025-04-24 13:08:21 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String))
2025-04-24 13:08:21 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String))
2025-04-24 13:08:21 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-04-24 13:08:36 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String)), args=2025-04-22,*/*
2025-04-24 13:08:36 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String))
2025-04-24 13:08:36 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String))
2025-04-24 13:08:36 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 2
2025-04-24 13:12:36 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String)), args=2025-04-20,*/*
2025-04-24 13:12:36 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String))
2025-04-24 13:12:36 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String))
2025-04-24 13:12:36 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 3
2025-04-24 13:14:58 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-24 13:14:58 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-24 13:14:58 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-24 13:14:58 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-24 13:15:01 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-04-24 13:15:01 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 93420 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-24 13:15:01 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-24 13:15:01 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-24 13:15:01 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 26 ms. Found 3 JPA repository interfaces.
2025-04-24 13:15:02 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-24 13:15:02 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-24 13:15:02 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-24 13:15:02 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-24 13:15:02 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-24 13:15:02 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 850 ms
2025-04-24 13:15:02 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-24 13:15:02 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-24 13:15:02 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-24 13:15:02 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-24 13:15:02 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-24 13:15:02 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@545604a9
2025-04-24 13:15:02 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-24 13:15:03 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-24 13:15:03 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-24 13:15:03 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-24 13:15:03 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-24 13:15:04 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-24 13:15:04 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-24 13:15:04 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.51 seconds (process running for 3.834)
2025-04-24 13:15:07 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-24 13:15:07 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-24 13:15:07 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-24 13:15:07 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String)), args=2025-04-20,*/*
2025-04-24 13:15:07 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String))
2025-04-24 13:15:07 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String))
2025-04-24 13:15:07 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-04-24 13:15:13 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String)), args=2025-04-20,*/*
2025-04-24 13:15:13 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String))
2025-04-24 13:15:13 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String))
2025-04-24 13:15:13 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 2
2025-04-24 13:15:18 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String)), args=2025-04-22,*/*
2025-04-24 13:15:18 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String))
2025-04-24 13:15:18 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String))
2025-04-24 13:15:18 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 3
2025-04-24 13:15:53 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String)), args=2025-04-22,*/*
2025-04-24 13:15:53 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String))
2025-04-24 13:15:53 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String))
2025-04-24 13:15:53 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 4
2025-04-24 13:16:07 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long)), args=1
2025-04-24 13:16:07 | WARN  | o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 42883
2025-04-24 13:16:07 | ERROR | o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: function lower(bytea) does not exist
  Подсказка: No function matches the given name and argument types. You might need to add explicit type casts.
  Позиция: 126
2025-04-24 13:16:07 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long)), exception: JDBC exception executing SQL [select c1_0.id,c1_0.area,c1_0.country_id,c1_0.name,c1_0.population from city c1_0 where (? is null or lower(c1_0.name) like lower(('%'||?||'%')) escape '') and (? is null or c1_0.country_id=?)] [ERROR: function lower(bytea) does not exist
  Подсказка: No function matches the given name and argument types. You might need to add explicit type casts.
  Позиция: 126] [n/a]; SQL [n/a]
2025-04-24 13:16:07 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long))
2025-04-24 13:16:07 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 5
2025-04-24 13:19:32 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-24 13:19:32 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-24 13:19:32 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-24 13:19:32 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-24 13:19:34 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-04-24 13:19:34 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 93499 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-24 13:19:34 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-24 13:19:34 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-24 13:19:34 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 3 JPA repository interfaces.
2025-04-24 13:19:35 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-24 13:19:35 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-24 13:19:35 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-24 13:19:35 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-24 13:19:35 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-24 13:19:35 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 713 ms
2025-04-24 13:19:35 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-24 13:19:35 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-24 13:19:35 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-24 13:19:35 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-24 13:19:35 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-24 13:19:35 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4aeaff64
2025-04-24 13:19:35 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-24 13:19:35 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-24 13:19:36 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-24 13:19:36 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-24 13:19:36 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-24 13:19:37 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-24 13:19:37 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-24 13:19:37 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.231 seconds (process running for 3.56)
2025-04-24 13:19:40 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-24 13:19:40 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-24 13:19:40 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-04-24 13:19:40 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long)), args=1
2025-04-24 13:19:40 | WARN  | o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 42883
2025-04-24 13:19:40 | ERROR | o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: function lower(bytea) does not exist
  Подсказка: No function matches the given name and argument types. You might need to add explicit type casts.
  Позиция: 126
2025-04-24 13:19:40 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long)), exception: JDBC exception executing SQL [select c1_0.id,c1_0.area,c1_0.country_id,c1_0.name,c1_0.population from city c1_0 where (? is null or lower(c1_0.name) like lower(('%'||?||'%')) escape '') and (? is null or c1_0.country_id=?)] [ERROR: function lower(bytea) does not exist
  Подсказка: No function matches the given name and argument types. You might need to add explicit type casts.
  Позиция: 126] [n/a]; SQL [n/a]
2025-04-24 13:19:40 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long))
2025-04-24 13:19:40 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-04-24 13:19:43 | INFO  | o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 237 ms
2025-04-24 13:19:48 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long)), args=1
2025-04-24 13:19:48 | WARN  | o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 42883
2025-04-24 13:19:48 | ERROR | o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: function lower(bytea) does not exist
  Подсказка: No function matches the given name and argument types. You might need to add explicit type casts.
  Позиция: 126
2025-04-24 13:19:48 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long)), exception: JDBC exception executing SQL [select c1_0.id,c1_0.area,c1_0.country_id,c1_0.name,c1_0.population from city c1_0 where (? is null or lower(c1_0.name) like lower(('%'||?||'%')) escape '') and (? is null or c1_0.country_id=?)] [ERROR: function lower(bytea) does not exist
  Подсказка: No function matches the given name and argument types. You might need to add explicit type casts.
  Позиция: 126] [n/a]; SQL [n/a]
2025-04-24 13:19:48 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long))
2025-04-24 13:19:48 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 2
2025-04-24 13:25:34 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long)), args=Минск
2025-04-24 13:25:34 | INFO  | org.example.service.CityService - Putting to cache: name=Минск&countryId=null -> 0
2025-04-24 13:25:34 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long))
2025-04-24 13:25:34 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long))
2025-04-24 13:25:34 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 3
2025-04-24 13:25:35 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long)), args=Минск
2025-04-24 13:25:35 | INFO  | org.example.service.CityService - Getting from cache: name=Минск&countryId=null
2025-04-24 13:25:35 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long))
2025-04-24 13:25:35 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long))
2025-04-24 13:25:35 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 4
2025-04-24 13:25:45 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long)), args=Berlin
2025-04-24 13:25:45 | INFO  | org.example.service.CityService - Putting to cache: name=Berlin&countryId=null -> 1
2025-04-24 13:25:45 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long))
2025-04-24 13:25:45 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long))
2025-04-24 13:25:45 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 5
2025-04-24 13:25:58 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long)), args=1
2025-04-24 13:25:58 | WARN  | o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 42883
2025-04-24 13:25:58 | ERROR | o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: function lower(bytea) does not exist
  Подсказка: No function matches the given name and argument types. You might need to add explicit type casts.
  Позиция: 126
2025-04-24 13:25:58 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long)), exception: JDBC exception executing SQL [select c1_0.id,c1_0.area,c1_0.country_id,c1_0.name,c1_0.population from city c1_0 where (? is null or lower(c1_0.name) like lower(('%'||?||'%')) escape '') and (? is null or c1_0.country_id=?)] [ERROR: function lower(bytea) does not exist
  Подсказка: No function matches the given name and argument types. You might need to add explicit type casts.
  Позиция: 126] [n/a]; SQL [n/a]
2025-04-24 13:25:58 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long))
2025-04-24 13:25:58 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 6
2025-04-24 13:26:12 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long)), args=
2025-04-24 13:26:12 | WARN  | o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 42883
2025-04-24 13:26:12 | ERROR | o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: function lower(bytea) does not exist
  Подсказка: No function matches the given name and argument types. You might need to add explicit type casts.
  Позиция: 126
2025-04-24 13:26:12 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long)), exception: JDBC exception executing SQL [select c1_0.id,c1_0.area,c1_0.country_id,c1_0.name,c1_0.population from city c1_0 where (? is null or lower(c1_0.name) like lower(('%'||?||'%')) escape '') and (? is null or c1_0.country_id=?)] [ERROR: function lower(bytea) does not exist
  Подсказка: No function matches the given name and argument types. You might need to add explicit type casts.
  Позиция: 126] [n/a]; SQL [n/a]
2025-04-24 13:26:12 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long))
2025-04-24 13:26:12 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 7
2025-04-24 13:27:56 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long)), args=
2025-04-24 13:27:56 | WARN  | o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 42883
2025-04-24 13:27:56 | ERROR | o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: function lower(bytea) does not exist
  Подсказка: No function matches the given name and argument types. You might need to add explicit type casts.
  Позиция: 126
2025-04-24 13:27:56 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long)), exception: JDBC exception executing SQL [select c1_0.id,c1_0.area,c1_0.country_id,c1_0.name,c1_0.population from city c1_0 where (? is null or lower(c1_0.name) like lower(('%'||?||'%')) escape '') and (? is null or c1_0.country_id=?)] [ERROR: function lower(bytea) does not exist
  Подсказка: No function matches the given name and argument types. You might need to add explicit type casts.
  Позиция: 126] [n/a]; SQL [n/a]
2025-04-24 13:27:56 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long))
2025-04-24 13:27:56 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 8
2025-04-24 13:43:02 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m56s976ms).
2025-04-24 13:43:05 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long)), args=Berlin
2025-04-24 13:43:05 | INFO  | org.example.service.CityService - Putting to cache: name=Berlin&countryId=null -> 1
2025-04-24 13:43:05 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long))
2025-04-24 13:43:05 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long))
2025-04-24 13:43:05 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 9
2025-04-24 14:02:03 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=16m236ms).
2025-04-24 14:19:28 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m55s74ms).
2025-04-24 14:35:33 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m35s559ms).
2025-04-24 14:51:29 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m55s482ms).
2025-04-24 15:07:55 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m56s469ms).
2025-04-24 15:23:50 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s958ms).
2025-04-24 15:40:15 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s969ms).
2025-04-24 16:02:59 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=22m44s21ms).
2025-04-24 16:19:24 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s982ms).
2025-04-24 16:35:19 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s943ms).
2025-04-24 16:48:46 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=12m56s689ms).
2025-04-24 17:04:41 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s965ms).
2025-04-24 17:21:06 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m55s611ms).
2025-04-24 17:37:02 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m55s688ms).
2025-04-24 17:49:23 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=12m20s733ms).
2025-04-24 18:18:47 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=28m53s786ms).
2025-04-24 18:34:48 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m31s401ms).
2025-04-24 18:50:17 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m29s234ms).
2025-04-24 19:42:25 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=52m7s883ms).
2025-04-24 19:51:18 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=8m52s682ms).
2025-04-24 20:37:53 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=46m35s67ms).
2025-04-24 21:26:47 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=48m54s239ms).
2025-04-24 22:14:21 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=31m33s274ms).
2025-04-24 23:13:14 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=58m53s142ms).
2025-04-24 23:33:31 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=20m17s267ms).
2025-04-25 00:14:26 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s991ms).
2025-04-25 00:30:21 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s941ms).
2025-04-25 00:46:16 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s978ms).
2025-04-25 01:02:42 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m56s75ms).
2025-04-25 01:18:38 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m55s697ms).
2025-04-25 01:34:34 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m55s688ms).
2025-04-25 01:50:59 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m55s61ms).
2025-04-25 02:15:01 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=24m2s63ms).
2025-04-25 02:31:26 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s950ms).
2025-04-25 02:47:21 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m55s700ms).
2025-04-25 03:00:54 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=13m2s322ms).
2025-04-25 03:16:49 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s937ms).
2025-04-25 03:22:53 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=6m3s870ms).
2025-04-25 04:46:49 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h23m56s694ms).
2025-04-25 05:56:20 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h9m30s953ms).
2025-04-25 07:24:00 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h27m39s743ms).
2025-04-25 08:47:19 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h23m19s473ms).
2025-04-25 10:06:55 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h19m36s31ms).
2025-04-25 11:27:15 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h20m19s883ms).
2025-04-25 12:54:42 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h27m26s218ms).
2025-04-25 13:55:44 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h1m2s334ms).
2025-04-25 14:02:46 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=7m1s752ms).
2025-04-25 14:03:45 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Retrograde clock change detected (housekeeper delta=29s348ms), soft-evicting connections from pool.
2025-04-25 15:12:48 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h2m3s116ms).
2025-04-25 16:45:43 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h32m54s524ms).
2025-04-25 18:02:03 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h16m19s832ms).
2025-04-25 18:39:29 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=37m25s950ms).
2025-04-25 18:56:13 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=16m44s543ms).
2025-04-25 19:12:38 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s991ms).
2025-04-25 19:44:52 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=32m14s122ms).
2025-04-25 21:03:54 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h19m1s948ms).
2025-04-25 22:05:00 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h1m5s840ms).
2025-04-25 22:18:27 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=13m26s687ms).
2025-04-25 23:20:12 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h1m45s287ms).
2025-04-25 23:41:37 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=21m24s639ms).
2025-04-25 23:57:08 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m31s256ms).
2025-04-26 00:13:04 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m55s820ms).
2025-04-26 00:35:14 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=22m9s928ms).
2025-04-26 00:52:32 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=17m18s876ms).
2025-04-26 01:08:57 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s919ms).
2025-04-26 01:20:36 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=11m38s144ms).
2025-04-26 01:37:00 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s938ms).
2025-04-26 01:52:56 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m55s691ms).
2025-04-26 02:08:51 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s926ms).
2025-04-26 02:21:49 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=12m28s252ms).
2025-04-26 02:37:44 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s908ms).
2025-04-26 02:51:53 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=13m39s209ms).
2025-04-26 03:07:48 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s911ms).
2025-04-26 03:22:59 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=14m40s552ms).
2025-04-26 03:38:55 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m55s737ms).
2025-04-26 03:54:50 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s858ms).
2025-04-26 04:11:14 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s332ms).
2025-04-26 04:27:09 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s899ms).
2025-04-26 04:43:34 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s858ms).
2025-04-26 04:59:29 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s949ms).
2025-04-26 05:15:29 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m30s195ms).
2025-04-26 05:31:24 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s965ms).
2025-04-26 05:47:20 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m55s748ms).
2025-04-26 06:03:44 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s943ms).
2025-04-26 06:18:07 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=14m22s359ms).
2025-04-26 06:34:32 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s961ms).
2025-04-26 06:50:27 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s909ms).
2025-04-26 07:06:52 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s895ms).
2025-04-26 07:15:16 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=8m24s369ms).
2025-04-26 07:31:12 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m55s769ms).
2025-04-26 07:47:07 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s910ms).
2025-04-26 08:02:53 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m46s192ms).
2025-04-26 08:19:18 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s943ms).
2025-04-26 08:35:13 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s948ms).
2025-04-26 08:51:38 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s886ms).
2025-04-26 09:07:33 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s915ms).
2025-04-26 09:16:03 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=8m29s937ms).
2025-04-26 09:31:57 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s949ms).
2025-04-26 09:47:51 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m53s593ms).
2025-04-26 10:03:46 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s897ms).
2025-04-26 10:17:23 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=13m6s621ms).
2025-04-26 10:33:17 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s874ms).
2025-04-26 10:49:42 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s811ms).
2025-04-26 11:05:38 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m55s765ms).
2025-04-26 11:18:05 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=12m27s424ms).
2025-04-26 11:34:30 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s940ms).
2025-04-26 11:50:25 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s940ms).
2025-04-26 12:06:20 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s925ms).
2025-04-26 12:19:19 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=12m29s57ms).
2025-04-26 12:35:14 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s677ms).
2025-04-26 12:51:39 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s927ms).
2025-04-26 13:07:35 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m55s721ms).
2025-04-26 13:20:03 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=12m28s338ms).
2025-04-26 13:36:29 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m55s667ms).
2025-04-26 13:52:24 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s932ms).
2025-04-26 14:08:19 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s940ms).
2025-04-26 14:21:07 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=12m17s987ms).
2025-04-26 14:46:40 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=25m3s403ms).
2025-04-26 15:02:35 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s859ms).
2025-04-26 15:19:00 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s876ms).
2025-04-26 15:37:35 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=18m34s849ms).
2025-04-26 15:54:00 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s936ms).
2025-04-26 16:09:54 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s910ms).
2025-04-26 16:23:28 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=13m3s469ms).
2025-04-26 16:39:24 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m55s743ms).
2025-04-26 16:55:19 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m55s714ms).
2025-04-26 17:11:44 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s956ms).
2025-04-26 17:24:13 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=12m29s85ms).
2025-04-26 17:39:49 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m35s556ms).
2025-04-26 17:56:14 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s929ms).
2025-04-26 18:12:00 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m45s703ms).
2025-04-26 18:25:25 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=12m54s967ms).
2025-04-26 18:41:20 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m55s671ms).
2025-04-26 18:56:55 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m34s957ms).
2025-04-26 19:01:43 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=4m17s975ms).
2025-04-26 19:48:37 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-26 19:48:37 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-26 19:48:37 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-26 19:48:37 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-30 02:47:54 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-04-30 02:47:54 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 6630 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-30 02:47:54 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-30 02:47:54 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-30 02:47:54 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22 ms. Found 3 JPA repository interfaces.
2025-04-30 02:47:54 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-30 02:47:54 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-30 02:47:54 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-30 02:47:54 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-30 02:47:54 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-30 02:47:54 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 768 ms
2025-04-30 02:47:55 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-30 02:47:55 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-30 02:47:55 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-30 02:47:55 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-30 02:47:55 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-30 02:47:56 | ERROR | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
org.postgresql.util.PSQLException: Подсоединение по адресу localhost:5432 отклонено. Проверьте что хост и порт указаны правильно и что postmaster принимает TCP/IP-подсоединения.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:342)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:263)
	at org.postgresql.Driver.makeConnection(Driver.java:443)
	at org.postgresql.Driver.connect(Driver.java:297)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:428)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:276)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:107)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:129)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:223)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:191)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:170)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.example.CountrySearchApplication.main(CountrySearchApplication.java:17)
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:760)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:243)
	at org.postgresql.core.PGStream.<init>(PGStream.java:98)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:132)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:258)
	... 50 common frames omitted
2025-04-30 02:47:56 | WARN  | o.h.e.j.e.i.JdbcEnvironmentInitiator - HHH000342: Could not obtain connection to query metadata
java.lang.NullPointerException: Cannot invoke "org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(java.sql.SQLException, String)" because the return value of "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.sqlExceptionHelper()" is null
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:116)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:276)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:107)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:129)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:223)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:191)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:170)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.example.CountrySearchApplication.main(CountrySearchApplication.java:17)
2025-04-30 02:47:56 | ERROR | o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
2025-04-30 02:47:56 | WARN  | o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
2025-04-30 02:47:56 | INFO  | o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-04-30 02:47:56 | INFO  | o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-04-30 02:47:56 | ERROR | o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1773)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.example.CountrySearchApplication.main(CountrySearchApplication.java:17)
Caused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:276)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:223)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:191)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:170)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	... 16 common frames omitted
Caused by: org.hibernate.HibernateException: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:191)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:87)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentWithDefaults(JdbcEnvironmentInitiator.java:143)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:348)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:107)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:129)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	... 31 common frames omitted
2025-04-30 02:48:10 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-04-30 02:48:10 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 6841 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-30 02:48:10 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-30 02:48:10 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-30 02:48:10 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23 ms. Found 3 JPA repository interfaces.
2025-04-30 02:48:10 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-30 02:48:10 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-30 02:48:10 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-30 02:48:10 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-30 02:48:10 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-30 02:48:10 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 831 ms
2025-04-30 02:48:11 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-30 02:48:11 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-30 02:48:11 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-30 02:48:11 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-30 02:48:11 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-30 02:48:11 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7cdc4070
2025-04-30 02:48:11 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-30 02:48:11 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-30 02:48:11 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 02:48:11 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-30 02:48:12 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-30 02:48:13 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-30 02:48:13 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-30 02:48:13 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.61 seconds (process running for 4.055)
2025-04-30 02:48:35 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-30 02:48:35 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-30 02:48:35 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-04-30 02:48:35 | INFO  | o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 293 ms
2025-04-30 02:48:52 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String)), args=2025-04-30,*/*
2025-04-30 02:48:52 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String))
2025-04-30 02:48:52 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String))
2025-04-30 02:48:52 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-04-30 02:49:58 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String)), args=2025-04-30,*/*
2025-04-30 02:49:58 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String))
2025-04-30 02:49:58 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String))
2025-04-30 02:49:58 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 2
2025-04-30 02:50:28 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long)), args=
2025-04-30 02:50:28 | WARN  | o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 42883
2025-04-30 02:50:28 | ERROR | o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: function lower(bytea) does not exist
  Подсказка: No function matches the given name and argument types. You might need to add explicit type casts.
  Позиция: 126
2025-04-30 02:50:28 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long)), exception: JDBC exception executing SQL [select c1_0.id,c1_0.area,c1_0.country_id,c1_0.name,c1_0.population from city c1_0 where (? is null or lower(c1_0.name) like lower(('%'||?||'%')) escape '') and (? is null or c1_0.country_id=?)] [ERROR: function lower(bytea) does not exist
  Подсказка: No function matches the given name and argument types. You might need to add explicit type casts.
  Позиция: 126] [n/a]; SQL [n/a]
2025-04-30 02:50:28 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long))
2025-04-30 02:50:28 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 3
2025-04-30 02:50:29 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long)), args=
2025-04-30 02:50:29 | WARN  | o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 42883
2025-04-30 02:50:29 | ERROR | o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: function lower(bytea) does not exist
  Подсказка: No function matches the given name and argument types. You might need to add explicit type casts.
  Позиция: 126
2025-04-30 02:50:29 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long)), exception: JDBC exception executing SQL [select c1_0.id,c1_0.area,c1_0.country_id,c1_0.name,c1_0.population from city c1_0 where (? is null or lower(c1_0.name) like lower(('%'||?||'%')) escape '') and (? is null or c1_0.country_id=?)] [ERROR: function lower(bytea) does not exist
  Подсказка: No function matches the given name and argument types. You might need to add explicit type casts.
  Позиция: 126] [n/a]; SQL [n/a]
2025-04-30 02:50:29 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long))
2025-04-30 02:50:29 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 4
2025-04-30 02:50:31 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long)), args=
2025-04-30 02:50:31 | WARN  | o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 42883
2025-04-30 02:50:31 | ERROR | o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: function lower(bytea) does not exist
  Подсказка: No function matches the given name and argument types. You might need to add explicit type casts.
  Позиция: 126
2025-04-30 02:50:31 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long)), exception: JDBC exception executing SQL [select c1_0.id,c1_0.area,c1_0.country_id,c1_0.name,c1_0.population from city c1_0 where (? is null or lower(c1_0.name) like lower(('%'||?||'%')) escape '') and (? is null or c1_0.country_id=?)] [ERROR: function lower(bytea) does not exist
  Подсказка: No function matches the given name and argument types. You might need to add explicit type casts.
  Позиция: 126] [n/a]; SQL [n/a]
2025-04-30 02:50:31 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.SearchController.searchCities(String,Long))
2025-04-30 02:50:31 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 5
2025-04-30 03:05:32 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-30 03:05:32 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 03:05:32 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-30 03:05:32 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-30 03:05:35 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-04-30 03:05:35 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 7638 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-30 03:05:35 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-30 03:05:35 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-30 03:05:35 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24 ms. Found 3 JPA repository interfaces.
2025-04-30 03:05:35 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-30 03:05:35 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-30 03:05:35 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-30 03:05:35 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-30 03:05:35 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-30 03:05:35 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 834 ms
2025-04-30 03:05:36 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-30 03:05:36 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-30 03:05:36 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-30 03:05:36 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-30 03:05:36 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-30 03:05:36 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2f5f5bc9
2025-04-30 03:05:36 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-30 03:05:36 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-30 03:05:36 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 03:05:36 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-30 03:05:37 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-30 03:05:38 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-30 03:05:38 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-30 03:05:38 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.363 seconds (process running for 3.765)
2025-04-30 03:05:41 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-30 03:05:41 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-30 03:05:41 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-30 03:05:41 | INFO  | o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 230 ms
2025-04-30 03:05:59 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-04-30 03:05:59 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 03:05:59 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 03:05:59 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 03:05:59 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-04-30 03:06:14 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String)), args=Berlin
2025-04-30 03:06:14 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 03:06:14 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 03:06:14 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 2
2025-04-30 03:06:33 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String)), args=Hamburg
2025-04-30 03:06:33 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 03:06:33 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 03:06:33 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 3
2025-04-30 03:06:39 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String)), args=Hambur
2025-04-30 03:06:39 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 03:06:39 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 03:06:39 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 4
2025-04-30 03:06:44 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String)), args=Hambur
2025-04-30 03:06:44 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 03:06:44 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 03:06:44 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 5
2025-04-30 03:06:47 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String)), args=Hamburd
2025-04-30 03:06:47 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 03:06:47 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 03:06:47 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 6
2025-04-30 03:06:55 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String)), args=H
2025-04-30 03:06:55 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 03:06:55 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 03:06:55 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 7
2025-04-30 03:07:10 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String)), args=2025-04-30,*/*
2025-04-30 03:07:10 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String))
2025-04-30 03:07:10 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String))
2025-04-30 03:07:10 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 8
2025-04-30 03:14:36 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String)), args=
2025-04-30 03:14:36 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 03:14:36 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 03:14:36 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 9
2025-04-30 03:15:55 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-04-30 03:15:55 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 03:15:55 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 03:15:55 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 03:15:55 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 10
2025-04-30 03:16:10 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-04-30 03:16:10 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 03:16:10 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 03:16:10 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 03:16:10 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 11
2025-04-30 03:19:03 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountries()), args=
2025-04-30 03:19:03 | INFO  | org.example.service.CountryService - 🔄 Fetched 1 countries from DB and cached
2025-04-30 03:19:03 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-04-30 03:19:03 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-04-30 03:19:03 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 12
2025-04-30 03:19:19 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountries()), args=
2025-04-30 03:19:19 | INFO  | org.example.service.CountryService - ✅ Retrieved 1 countries from cache
2025-04-30 03:19:19 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-04-30 03:19:19 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-04-30 03:19:19 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 13
2025-04-30 03:28:55 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-30 03:28:55 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 03:28:55 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-30 03:28:55 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-30 03:28:57 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-04-30 03:28:57 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 8244 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-30 03:28:57 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-30 03:28:58 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-30 03:28:58 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21 ms. Found 3 JPA repository interfaces.
2025-04-30 03:28:58 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-30 03:28:58 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-30 03:28:58 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-30 03:28:58 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-30 03:28:58 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-30 03:28:58 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 742 ms
2025-04-30 03:28:58 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-30 03:28:58 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-30 03:28:58 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-30 03:28:58 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-30 03:28:58 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-30 03:28:58 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4aeaff64
2025-04-30 03:28:58 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-30 03:28:59 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-30 03:28:59 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 03:28:59 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-30 03:28:59 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-30 03:29:00 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-30 03:29:00 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-30 03:29:00 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.134 seconds (process running for 3.492)
2025-04-30 03:29:29 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-30 03:29:29 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-30 03:29:29 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-30 03:29:29 | INFO  | o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 248 ms
2025-04-30 03:29:44 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long)), args=1
2025-04-30 03:29:44 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 03:29:44 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 03:29:44 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-04-30 03:29:53 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long)), args=6
2025-04-30 03:29:53 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long)), exception: country with id 6 doesn't exist, that's why you can't view cities from its
2025-04-30 03:29:53 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 03:29:53 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 2
2025-04-30 03:30:01 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long)), args=5
2025-04-30 03:30:01 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long)), exception: country with id 5 doesn't exist, that's why you can't view cities from its
2025-04-30 03:30:01 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 03:30:01 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 3
2025-04-30 03:30:24 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long)), args=5
2025-04-30 03:30:24 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long)), exception: country with id 5 doesn't exist, that's why you can't view cities from its
2025-04-30 03:30:24 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 03:30:24 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 4
2025-04-30 03:30:27 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long)), args=6
2025-04-30 03:30:27 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long)), exception: country with id 6 doesn't exist, that's why you can't view cities from its
2025-04-30 03:30:27 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 03:30:27 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 5
2025-04-30 03:30:30 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long)), args=1
2025-04-30 03:30:30 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 03:30:30 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 03:30:30 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 6
2025-04-30 03:31:21 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountries()), args=
2025-04-30 03:31:21 | INFO  | org.example.service.CountryService - 🔄 Fetched 1 countries from DB and cached
2025-04-30 03:31:21 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-04-30 03:31:21 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-04-30 03:31:21 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 7
2025-04-30 03:37:05 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City)), args=1,City(id=null, name=Minsk, population=2000000.0, areaSquareKm=50000.0, country=null)
2025-04-30 03:37:05 | WARN  | o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 23502
2025-04-30 03:37:05 | ERROR | o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: null value in column "country_id" of relation "city" violates not-null constraint
  Подробности: Failing row contains (8, 50000, Minsk, 2000000, null).
2025-04-30 03:37:05 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City)), exception: could not execute statement [ERROR: null value in column "country_id" of relation "city" violates not-null constraint
  Подробности: Failing row contains (8, 50000, Minsk, 2000000, null).] [insert into city (area,country_id,name,population) values (?,?,?,?)]; SQL [insert into city (area,country_id,name,population) values (?,?,?,?)]; constraint [country_id" of relation "city]
2025-04-30 03:37:05 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City))
2025-04-30 03:37:05 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 8
2025-04-30 03:38:48 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-04-30 03:38:48 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 03:38:48 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 03:38:48 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 03:38:48 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 9
2025-04-30 03:38:58 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long)), args=1
2025-04-30 03:38:58 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 03:38:58 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 03:38:58 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 10
2025-04-30 03:39:52 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long)), args=1
2025-04-30 03:39:52 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 03:39:52 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 03:39:52 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 11
2025-04-30 03:41:38 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-30 03:41:38 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 03:41:38 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-30 03:41:38 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-30 03:41:40 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-04-30 03:41:40 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 8574 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-30 03:41:40 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-30 03:41:41 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-30 03:41:41 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23 ms. Found 3 JPA repository interfaces.
2025-04-30 03:41:41 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-30 03:41:41 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-30 03:41:41 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-30 03:41:41 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-30 03:41:41 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-30 03:41:41 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 758 ms
2025-04-30 03:41:41 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-30 03:41:41 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-30 03:41:41 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-30 03:41:41 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-30 03:41:41 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-30 03:41:41 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@93ce24d
2025-04-30 03:41:41 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-30 03:41:42 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-30 03:41:42 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 03:41:42 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-30 03:41:42 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-30 03:41:43 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-30 03:41:43 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-30 03:41:43 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.109 seconds (process running for 3.453)
2025-04-30 03:42:00 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-30 03:42:00 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-30 03:42:00 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-30 03:42:00 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City)), args=1,City(id=null, name=Minsk, population=2000000.0, areaSquareKm=50000.0, country=null)
2025-04-30 03:42:01 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City)), exception: java.lang.StackOverflowError
2025-04-30 03:42:01 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City))
2025-04-30 03:42:01 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-04-30 03:46:12 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-30 03:46:12 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 03:46:12 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-30 03:46:12 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-30 03:46:14 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-04-30 03:46:14 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 8714 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-30 03:46:14 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-30 03:46:15 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-30 03:46:15 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22 ms. Found 3 JPA repository interfaces.
2025-04-30 03:46:15 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-30 03:46:15 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-30 03:46:15 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-30 03:46:15 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-30 03:46:15 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-30 03:46:15 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 756 ms
2025-04-30 03:46:15 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-30 03:46:15 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-30 03:46:15 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-30 03:46:15 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-30 03:46:15 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-30 03:46:15 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@545604a9
2025-04-30 03:46:15 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-30 03:46:16 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-30 03:46:16 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 03:46:16 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-30 03:46:16 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-30 03:46:17 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-30 03:46:17 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-30 03:46:17 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.187 seconds (process running for 3.537)
2025-04-30 03:46:19 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-30 03:46:19 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-30 03:46:19 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-30 03:46:19 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City)), args=1,City(id=null, name=Minsk, population=2000000.0, areaSquareKm=50000.0, country=null)
2025-04-30 03:46:19 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City)), exception: java.lang.StackOverflowError
2025-04-30 03:46:19 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City))
2025-04-30 03:46:19 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-04-30 03:46:22 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City)), args=1,City(id=null, name=Minsk, population=2000000.0, areaSquareKm=50000.0, country=null)
2025-04-30 03:46:22 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City)), exception: java.lang.StackOverflowError
2025-04-30 03:46:22 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City))
2025-04-30 03:46:22 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 2
2025-04-30 03:46:23 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City)), args=1,City(id=null, name=Minsk, population=2000000.0, areaSquareKm=50000.0, country=null)
2025-04-30 03:46:23 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City)), exception: java.lang.StackOverflowError
2025-04-30 03:46:23 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City))
2025-04-30 03:46:23 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 3
2025-04-30 03:46:24 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City)), args=1,City(id=null, name=Minsk, population=2000000.0, areaSquareKm=50000.0, country=null)
2025-04-30 03:46:24 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City)), exception: java.lang.StackOverflowError
2025-04-30 03:46:24 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City))
2025-04-30 03:46:24 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 4
2025-04-30 03:46:25 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City)), args=1,City(id=null, name=Minsk, population=2000000.0, areaSquareKm=50000.0, country=null)
2025-04-30 03:46:25 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City)), exception: java.lang.StackOverflowError
2025-04-30 03:46:25 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City))
2025-04-30 03:46:25 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 5
2025-04-30 03:46:25 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City)), args=1,City(id=null, name=Minsk, population=2000000.0, areaSquareKm=50000.0, country=null)
2025-04-30 03:46:25 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City)), exception: java.lang.StackOverflowError
2025-04-30 03:46:25 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City))
2025-04-30 03:46:25 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 6
2025-04-30 03:52:20 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-30 03:52:20 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 03:52:20 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-30 03:52:20 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-30 03:52:39 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-04-30 03:52:39 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 8929 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-30 03:52:39 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-30 03:52:39 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-30 03:52:39 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21 ms. Found 3 JPA repository interfaces.
2025-04-30 03:52:39 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-30 03:52:39 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-30 03:52:39 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-30 03:52:39 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-30 03:52:40 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-30 03:52:40 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 755 ms
2025-04-30 03:52:40 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-30 03:52:40 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-30 03:52:40 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-30 03:52:40 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-30 03:52:40 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-30 03:52:40 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1f60824e
2025-04-30 03:52:40 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-30 03:52:40 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-30 03:52:40 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 03:52:40 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-30 03:52:41 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-30 03:52:42 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-30 03:52:42 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-30 03:52:42 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.192 seconds (process running for 3.531)
2025-04-30 03:52:45 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-30 03:52:45 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-30 03:52:45 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-30 03:52:45 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addCity(Long,City)), args=1,City(id=null, name=Minsk, population=2000000.0, areaSquareKm=50000.0, country=null)
2025-04-30 03:52:45 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CityController.addCity(Long,City)), exception: java.lang.StackOverflowError
2025-04-30 03:52:45 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addCity(Long,City))
2025-04-30 03:52:45 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-04-30 03:52:50 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addCity(Long,City)), args=1,City(id=null, name=Minsk, population=2000000.0, areaSquareKm=50000.0, country=null)
2025-04-30 03:52:50 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CityController.addCity(Long,City)), exception: java.lang.StackOverflowError
2025-04-30 03:52:50 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addCity(Long,City))
2025-04-30 03:52:50 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 2
2025-04-30 03:52:57 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addCity(Long,City)), args=1,City(id=null, name=Minsk, population=2000000.0, areaSquareKm=50000.0, country=null)
2025-04-30 03:52:57 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CityController.addCity(Long,City)), exception: java.lang.StackOverflowError
2025-04-30 03:52:57 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addCity(Long,City))
2025-04-30 03:52:57 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 3
2025-04-30 03:57:50 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-30 03:57:50 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 03:57:50 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-30 03:57:50 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-30 03:57:53 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-04-30 03:57:53 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 9084 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-30 03:57:53 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-30 03:57:53 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-30 03:57:53 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23 ms. Found 3 JPA repository interfaces.
2025-04-30 03:57:53 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-30 03:57:53 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-30 03:57:53 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-30 03:57:53 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-30 03:57:53 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-30 03:57:53 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 768 ms
2025-04-30 03:57:53 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-30 03:57:53 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-30 03:57:53 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-30 03:57:54 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-30 03:57:54 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-30 03:57:54 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2f5f5bc9
2025-04-30 03:57:54 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-30 03:57:54 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-30 03:57:54 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 03:57:54 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-30 03:57:54 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-30 03:57:56 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-30 03:57:56 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-30 03:57:56 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.142 seconds (process running for 3.489)
2025-04-30 03:57:58 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-30 03:57:58 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-30 03:57:58 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-30 03:57:58 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addCity(Long,City)), args=1,City(id=null, name=Minsk, population=2000000.0, areaSquareKm=50000.0, country=null)
2025-04-30 03:57:58 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CityController.addCity(Long,City)), exception: java.lang.StackOverflowError
2025-04-30 03:57:58 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addCity(Long,City))
2025-04-30 03:57:58 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-04-30 03:58:00 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addCity(Long,City)), args=1,City(id=null, name=Minsk, population=2000000.0, areaSquareKm=50000.0, country=null)
2025-04-30 03:58:00 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CityController.addCity(Long,City)), exception: java.lang.StackOverflowError
2025-04-30 03:58:00 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addCity(Long,City))
2025-04-30 03:58:00 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 2
2025-04-30 03:59:51 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addCity(Long,City)), args=1,City(id=null, name=Minsk, population=2000000.0, areaSquareKm=50000.0, country=null)
2025-04-30 03:59:51 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CityController.addCity(Long,City)), exception: java.lang.StackOverflowError
2025-04-30 03:59:51 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addCity(Long,City))
2025-04-30 03:59:51 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 3
2025-04-30 04:09:29 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-30 04:09:29 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 04:09:29 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-30 04:09:29 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-30 04:09:31 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-04-30 04:09:31 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 9514 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-30 04:09:31 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-30 04:09:31 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-30 04:09:31 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22 ms. Found 3 JPA repository interfaces.
2025-04-30 04:09:32 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-30 04:09:32 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-30 04:09:32 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-30 04:09:32 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-30 04:09:32 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-30 04:09:32 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 753 ms
2025-04-30 04:09:32 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-30 04:09:32 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-30 04:09:32 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-30 04:09:32 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-30 04:09:32 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-30 04:09:32 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1dbff71c
2025-04-30 04:09:32 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-30 04:09:32 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-30 04:09:33 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 04:09:33 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-30 04:09:33 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-30 04:09:34 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-30 04:09:34 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-30 04:09:34 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.173 seconds (process running for 3.528)
2025-04-30 04:09:34 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-30 04:09:34 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-30 04:09:34 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-30 04:09:34 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addCity(Long,City)), args=1,City(id=null, name=Minsk, population=2000000.0, areaSquareKm=50000.0, country=null)
2025-04-30 04:09:34 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CityController.addCity(Long,City)), exception: java.lang.StackOverflowError
2025-04-30 04:09:34 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addCity(Long,City))
2025-04-30 04:09:34 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-04-30 04:09:37 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addCity(Long,City)), args=1,City(id=null, name=Minsk, population=2000000.0, areaSquareKm=50000.0, country=null)
2025-04-30 04:09:37 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CityController.addCity(Long,City)), exception: java.lang.StackOverflowError
2025-04-30 04:09:37 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addCity(Long,City))
2025-04-30 04:09:37 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 2
2025-04-30 04:09:38 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addCity(Long,City)), args=1,City(id=null, name=Minsk, population=2000000.0, areaSquareKm=50000.0, country=null)
2025-04-30 04:09:38 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CityController.addCity(Long,City)), exception: java.lang.StackOverflowError
2025-04-30 04:09:38 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addCity(Long,City))
2025-04-30 04:09:38 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 3
2025-04-30 04:09:39 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addCity(Long,City)), args=1,City(id=null, name=Minsk, population=2000000.0, areaSquareKm=50000.0, country=null)
2025-04-30 04:09:39 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CityController.addCity(Long,City)), exception: java.lang.StackOverflowError
2025-04-30 04:09:39 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addCity(Long,City))
2025-04-30 04:09:39 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 4
2025-04-30 04:09:39 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addCity(Long,City)), args=1,City(id=null, name=Minsk, population=2000000.0, areaSquareKm=50000.0, country=null)
2025-04-30 04:09:39 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CityController.addCity(Long,City)), exception: java.lang.StackOverflowError
2025-04-30 04:09:39 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addCity(Long,City))
2025-04-30 04:09:39 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 5
2025-04-30 04:09:40 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addCity(Long,City)), args=1,City(id=null, name=Minsk, population=2000000.0, areaSquareKm=50000.0, country=null)
2025-04-30 04:09:40 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CityController.addCity(Long,City)), exception: java.lang.StackOverflowError
2025-04-30 04:09:40 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addCity(Long,City))
2025-04-30 04:09:40 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 6
2025-04-30 04:09:40 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addCity(Long,City)), args=1,City(id=null, name=Minsk, population=2000000.0, areaSquareKm=50000.0, country=null)
2025-04-30 04:09:40 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CityController.addCity(Long,City)), exception: java.lang.StackOverflowError
2025-04-30 04:09:40 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addCity(Long,City))
2025-04-30 04:09:40 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 7
2025-04-30 04:09:41 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addCity(Long,City)), args=1,City(id=null, name=Minsk, population=2000000.0, areaSquareKm=50000.0, country=null)
2025-04-30 04:09:41 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CityController.addCity(Long,City)), exception: java.lang.StackOverflowError
2025-04-30 04:09:41 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addCity(Long,City))
2025-04-30 04:09:41 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 8
2025-04-30 04:09:41 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addCity(Long,City)), args=1,City(id=null, name=Minsk, population=2000000.0, areaSquareKm=50000.0, country=null)
2025-04-30 04:09:41 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CityController.addCity(Long,City)), exception: java.lang.StackOverflowError
2025-04-30 04:09:41 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addCity(Long,City))
2025-04-30 04:09:41 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 9
2025-04-30 04:09:41 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addCity(Long,City)), args=1,City(id=null, name=Minsk, population=2000000.0, areaSquareKm=50000.0, country=null)
2025-04-30 04:09:41 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CityController.addCity(Long,City)), exception: java.lang.StackOverflowError
2025-04-30 04:09:41 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addCity(Long,City))
2025-04-30 04:09:41 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 10
2025-04-30 04:09:42 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addCity(Long,City)), args=1,City(id=null, name=Minsk, population=2000000.0, areaSquareKm=50000.0, country=null)
2025-04-30 04:09:42 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CityController.addCity(Long,City)), exception: java.lang.StackOverflowError
2025-04-30 04:09:42 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addCity(Long,City))
2025-04-30 04:09:42 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 11
2025-04-30 04:11:43 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-30 04:11:43 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 04:11:43 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-30 04:11:43 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-30 04:11:45 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-04-30 04:11:45 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 9574 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-30 04:11:45 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-30 04:11:46 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-30 04:11:46 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 25 ms. Found 3 JPA repository interfaces.
2025-04-30 04:11:46 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-30 04:11:46 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-30 04:11:46 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-30 04:11:46 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-30 04:11:46 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-30 04:11:46 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 881 ms
2025-04-30 04:11:46 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-30 04:11:46 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-30 04:11:46 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-30 04:11:46 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-30 04:11:46 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-30 04:11:47 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7cdc4070
2025-04-30 04:11:47 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-30 04:11:47 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-30 04:11:47 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 04:11:47 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-30 04:11:47 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-30 04:11:48 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-30 04:11:48 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-30 04:11:48 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.387 seconds (process running for 3.737)
2025-04-30 04:11:50 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-30 04:11:50 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-30 04:11:50 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-30 04:11:50 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City)), args=1,City(id=null, name=Minsk, population=2000000.0, areaSquareKm=50000.0, country=null)
2025-04-30 04:11:50 | WARN  | o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 23502
2025-04-30 04:11:50 | ERROR | o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: null value in column "country_id" of relation "city" violates not-null constraint
  Подробности: Failing row contains (33, 50000, Minsk, 2000000, null).
2025-04-30 04:11:50 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City)), exception: could not execute statement [ERROR: null value in column "country_id" of relation "city" violates not-null constraint
  Подробности: Failing row contains (33, 50000, Minsk, 2000000, null).] [insert into city (area,country_id,name,population) values (?,?,?,?)]; SQL [insert into city (area,country_id,name,population) values (?,?,?,?)]; constraint [country_id" of relation "city]
2025-04-30 04:11:50 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City))
2025-04-30 04:11:50 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-04-30 04:15:20 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-30 04:15:20 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 04:15:20 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-30 04:15:20 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-30 04:15:22 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-04-30 04:15:22 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 9673 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-30 04:15:22 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-30 04:15:23 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-30 04:15:23 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22 ms. Found 3 JPA repository interfaces.
2025-04-30 04:15:23 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-30 04:15:23 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-30 04:15:23 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-30 04:15:23 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-30 04:15:23 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-30 04:15:23 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 765 ms
2025-04-30 04:15:23 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-30 04:15:23 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-30 04:15:23 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-30 04:15:23 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-30 04:15:23 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-30 04:15:23 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@121cf6f4
2025-04-30 04:15:23 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-30 04:15:24 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-30 04:15:24 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 04:15:24 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-30 04:15:24 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-30 04:15:25 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-30 04:15:25 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-30 04:15:25 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.168 seconds (process running for 3.505)
2025-04-30 04:15:26 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-30 04:15:26 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-30 04:15:26 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-30 04:15:26 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City)), args=1,City(id=null, name=Minsk, population=2000000.0, areaSquareKm=50000.0, country=null)
2025-04-30 04:15:26 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 34) to country 'Germany' (ID: 1)
2025-04-30 04:15:26 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'Germany' (ID: 1). 
2025-04-30 04:15:26 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City))
2025-04-30 04:15:26 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-04-30 04:15:29 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City)), args=1,City(id=null, name=Minsk, population=2000000.0, areaSquareKm=50000.0, country=null)
2025-04-30 04:15:29 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 35) to country 'Germany' (ID: 1)
2025-04-30 04:15:29 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'Germany' (ID: 1). 
2025-04-30 04:15:29 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City))
2025-04-30 04:15:29 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 2
2025-04-30 04:15:30 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City)), args=1,City(id=null, name=Minsk, population=2000000.0, areaSquareKm=50000.0, country=null)
2025-04-30 04:15:30 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 36) to country 'Germany' (ID: 1)
2025-04-30 04:15:30 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'Germany' (ID: 1). 
2025-04-30 04:15:30 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City))
2025-04-30 04:15:30 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 3
2025-04-30 04:15:52 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-30 04:15:52 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 04:15:52 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-30 04:15:52 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-30 04:15:53 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-04-30 04:15:53 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 9686 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-30 04:15:53 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-30 04:15:53 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-30 04:15:53 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 3 JPA repository interfaces.
2025-04-30 04:15:54 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-30 04:15:54 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-30 04:15:54 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-30 04:15:54 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-30 04:15:54 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-30 04:15:54 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 724 ms
2025-04-30 04:15:54 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-30 04:15:54 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-30 04:15:54 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-30 04:15:54 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-30 04:15:54 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-30 04:15:54 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@403f7aa2
2025-04-30 04:15:54 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-30 04:15:55 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-30 04:15:55 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 04:15:55 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-30 04:15:55 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-30 04:15:56 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-30 04:15:56 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-30 04:15:56 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.17 seconds (process running for 3.597)
2025-04-30 04:16:00 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-30 04:16:00 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-30 04:16:00 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-04-30 04:16:00 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-04-30 04:16:00 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 04:16:00 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 04:16:00 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 04:16:00 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-04-30 04:16:09 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-04-30 04:16:09 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 04:16:09 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 04:16:09 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 04:16:09 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 2
2025-04-30 04:16:23 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City)), args=1,City(id=null, name=Minsk, population=2000000.0, areaSquareKm=50000.0, country=null)
2025-04-30 04:16:23 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 37) to country 'Germany' (ID: 1)
2025-04-30 04:16:23 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'Germany' (ID: 1). 
2025-04-30 04:16:23 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City))
2025-04-30 04:16:23 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 3
2025-04-30 04:17:02 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City)), args=1,City(id=null, name=Minsk, population=2000000.0, areaSquareKm=50000.0, country=null)
2025-04-30 04:17:02 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 38) to country 'Germany' (ID: 1)
2025-04-30 04:17:02 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'Germany' (ID: 1). 
2025-04-30 04:17:02 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City))
2025-04-30 04:17:02 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 4
2025-04-30 04:17:50 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-04-30 04:17:50 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 04:17:50 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 04:17:50 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 04:17:50 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 5
2025-04-30 04:19:00 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-30 04:19:00 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 04:19:00 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-30 04:19:00 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-30 04:19:02 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-04-30 04:19:02 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 9774 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-30 04:19:02 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-30 04:19:02 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-30 04:19:02 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 3 JPA repository interfaces.
2025-04-30 04:19:03 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-30 04:19:03 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-30 04:19:03 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-30 04:19:03 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-30 04:19:03 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-30 04:19:03 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 748 ms
2025-04-30 04:19:03 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-30 04:19:03 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-30 04:19:03 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-30 04:19:03 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-30 04:19:03 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-30 04:19:03 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7cdc4070
2025-04-30 04:19:03 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-30 04:19:04 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-30 04:19:04 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 04:19:04 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-30 04:19:04 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-30 04:19:05 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-30 04:19:05 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-30 04:19:05 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.147 seconds (process running for 3.499)
2025-04-30 04:19:07 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-30 04:19:07 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-30 04:19:07 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-30 04:19:07 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City)), args=1,City(id=null, name=Minsk, population=2000000.0, areaSquareKm=50000.0, country=null)
2025-04-30 04:19:07 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 39) to country 'Germany' (ID: 1)
2025-04-30 04:19:07 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'Germany' (ID: 1). 
2025-04-30 04:19:07 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City))
2025-04-30 04:19:07 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City))
2025-04-30 04:19:07 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-04-30 04:19:17 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City)), args=1,City(id=null, name=Minsk, population=2000000.0, areaSquareKm=50000.0, country=null)
2025-04-30 04:19:17 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 40) to country 'Germany' (ID: 1)
2025-04-30 04:19:17 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'Germany' (ID: 1). 
2025-04-30 04:19:17 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City))
2025-04-30 04:19:17 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City))
2025-04-30 04:19:17 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 2
2025-04-30 04:19:38 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-04-30 04:19:38 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 04:19:38 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 04:19:38 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 04:19:38 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 3
2025-04-30 04:22:08 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.updateCity(Long,String,Double,Double)), args=40,Mogilev,225.0,112.0
2025-04-30 04:22:08 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 40). New name: 'Mogilev', population: 225.0, area: 112.0 km²
2025-04-30 04:22:08 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'Germany' (ID: 1). 
2025-04-30 04:22:08 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.updateCity(Long,String,Double,Double))
2025-04-30 04:22:08 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.updateCity(Long,String,Double,Double))
2025-04-30 04:22:08 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 4
2025-04-30 04:22:14 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-04-30 04:22:14 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 04:22:14 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 04:22:14 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 04:22:14 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 5
2025-04-30 04:23:07 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long)), args=1
2025-04-30 04:23:07 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 04:23:07 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 04:23:07 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 6
2025-04-30 04:23:22 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long)), args=1
2025-04-30 04:23:22 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 04:23:22 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 04:23:22 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 7
2025-04-30 04:23:50 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-04-30 04:23:50 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 04:23:50 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 04:23:50 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 04:23:50 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 8
2025-04-30 04:30:22 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-30 04:30:22 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 04:30:22 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-30 04:30:22 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-30 04:30:24 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-04-30 04:30:24 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 10058 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-30 04:30:24 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-30 04:30:25 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-30 04:30:25 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22 ms. Found 3 JPA repository interfaces.
2025-04-30 04:30:25 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-30 04:30:25 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-30 04:30:25 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-30 04:30:25 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-30 04:30:25 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-30 04:30:25 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 742 ms
2025-04-30 04:30:25 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-30 04:30:25 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-30 04:30:25 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-30 04:30:25 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-30 04:30:25 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-30 04:30:25 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@27dfd12b
2025-04-30 04:30:25 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-30 04:30:26 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-30 04:30:26 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 04:30:26 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-30 04:30:26 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-30 04:30:27 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-30 04:30:27 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-30 04:30:27 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.106 seconds (process running for 3.503)
2025-04-30 04:30:29 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-30 04:30:29 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-30 04:30:29 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-30 04:30:29 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.updateCity(Long,String,Double,Double)), args=40,Mogilev,225.0,113.0
2025-04-30 04:30:29 | INFO  | org.example.service.CityService - ✏️ Updated city 'Mogilev' (ID: 40). New name: 'Mogilev', population: 225.0, area: 113.0 km²
2025-04-30 04:30:29 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'Germany' (ID: 1). 
2025-04-30 04:30:29 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.updateCity(Long,String,Double,Double))
2025-04-30 04:30:29 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.updateCity(Long,String,Double,Double))
2025-04-30 04:30:29 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-04-30 04:30:36 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-04-30 04:30:36 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 04:30:36 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 04:30:36 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 04:30:36 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 2
2025-04-30 04:31:43 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.deleteCityByIdFromCountryByCountryId(Long,Long)), args=1,40
2025-04-30 04:31:43 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Mogilev' (ID: 40) from country 'Germany' (ID: 1)
2025-04-30 04:31:43 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'Germany' (ID: 1). Action: DELETE city 'Mogilev' (ID: 40)
2025-04-30 04:31:43 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.deleteCityByIdFromCountryByCountryId(Long,Long))
2025-04-30 04:31:43 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.deleteCityByIdFromCountryByCountryId(Long,Long))
2025-04-30 04:31:43 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 3
2025-04-30 04:31:54 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-04-30 04:31:54 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 04:31:54 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 04:31:54 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 04:31:54 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 4
2025-04-30 04:32:16 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-30 04:32:16 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 04:32:16 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-30 04:32:16 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-30 04:32:18 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-04-30 04:32:18 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 10102 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-30 04:32:18 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-30 04:32:18 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-30 04:32:18 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 3 JPA repository interfaces.
2025-04-30 04:32:18 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-30 04:32:18 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-30 04:32:18 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-30 04:32:18 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-30 04:32:19 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-30 04:32:19 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 727 ms
2025-04-30 04:32:19 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-30 04:32:19 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-30 04:32:19 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-30 04:32:19 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-30 04:32:19 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-30 04:32:19 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1171ba7e
2025-04-30 04:32:19 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-30 04:32:19 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-30 04:32:19 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 04:32:19 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-30 04:32:20 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-30 04:32:21 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-30 04:32:21 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-30 04:32:21 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.095 seconds (process running for 3.512)
2025-04-30 04:32:21 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-30 04:32:21 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-30 04:32:21 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-30 04:32:21 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-04-30 04:32:21 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 04:32:21 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 04:32:21 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 04:32:21 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-04-30 04:38:18 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-30 04:38:18 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 04:38:18 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-30 04:38:18 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-30 04:38:20 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-04-30 04:38:20 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 10253 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-30 04:38:20 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-30 04:38:20 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-30 04:38:20 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 3 JPA repository interfaces.
2025-04-30 04:38:20 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-30 04:38:20 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-30 04:38:20 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-30 04:38:20 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-30 04:38:20 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-30 04:38:20 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 716 ms
2025-04-30 04:38:20 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-30 04:38:20 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-30 04:38:20 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-30 04:38:21 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-30 04:38:21 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-30 04:38:21 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2f5f5bc9
2025-04-30 04:38:21 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-30 04:38:21 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-30 04:38:21 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 04:38:21 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-30 04:38:21 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-30 04:38:23 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-30 04:38:23 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-30 04:38:23 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.096 seconds (process running for 3.443)
2025-04-30 04:38:23 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-30 04:38:23 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-30 04:38:23 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-30 04:38:23 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.deleteCityByIdFromCountryByCountryId(Long,Long)), args=1,40
2025-04-30 04:38:23 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CityController.deleteCityByIdFromCountryByCountryId(Long,Long)), exception: City not found
2025-04-30 04:38:23 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.deleteCityByIdFromCountryByCountryId(Long,Long))
2025-04-30 04:38:23 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-04-30 04:38:40 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.deleteCityByIdFromCountryByCountryId(Long,Long)), args=1,39
2025-04-30 04:38:40 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 39)
2025-04-30 04:38:40 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 39) deleted and cache invalidated
2025-04-30 04:38:40 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.deleteCityByIdFromCountryByCountryId(Long,Long))
2025-04-30 04:38:40 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.deleteCityByIdFromCountryByCountryId(Long,Long))
2025-04-30 04:38:40 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 2
2025-04-30 04:38:51 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-04-30 04:38:51 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 04:38:51 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 04:38:51 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 04:38:51 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 3
2025-04-30 04:39:16 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City)), args=1,City(id=null, name=Minsk, population=2000000.0, areaSquareKm=50000.0, country=null)
2025-04-30 04:39:16 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 41) to country 'Germany' (ID: 1)
2025-04-30 04:39:16 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'Germany' (ID: 1). Action: ADD
2025-04-30 04:39:16 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City))
2025-04-30 04:39:16 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City))
2025-04-30 04:39:16 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 4
2025-04-30 04:39:27 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-04-30 04:39:27 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 04:39:27 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 04:39:27 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 04:39:27 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 5
2025-04-30 04:39:48 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.updateCity(Long,String,Double,Double)), args=41,Mogilev,225.0,113.0
2025-04-30 04:39:48 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 41). New name: 'Mogilev', population: 225.0, area: 113.0 km²
2025-04-30 04:39:48 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'Germany' (ID: 1). Action: UPDATE
2025-04-30 04:39:48 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.updateCity(Long,String,Double,Double))
2025-04-30 04:39:48 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.updateCity(Long,String,Double,Double))
2025-04-30 04:39:48 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 6
2025-04-30 04:39:56 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-04-30 04:39:56 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 04:39:56 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 04:39:56 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 04:39:56 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 7
2025-04-30 04:40:33 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long)), args=1
2025-04-30 04:40:33 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 04:40:33 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 04:40:33 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 8
2025-04-30 04:42:11 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addNewCitiesByCountryId(Long,List)), args=1,[City(id=null, name=Minsk, population=2000000.0, areaSquareKm=50000.0, country=null)]
2025-04-30 04:42:11 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 42) to country 'Germany' (ID: 1)
2025-04-30 04:42:11 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'Germany' (ID: 1). Action: ADD
2025-04-30 04:42:11 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.addNewCitiesByCountryId(Long,List))
2025-04-30 04:42:11 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addNewCitiesByCountryId(Long,List))
2025-04-30 04:42:11 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 9
2025-04-30 04:42:21 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-04-30 04:42:21 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 04:42:21 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 04:42:21 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 04:42:21 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 10
2025-04-30 04:42:45 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.deleteCitiesByCountryId(Long)), args=1
2025-04-30 04:42:45 | INFO  | org.example.service.CityService - 🗑️ Deleting 0 cities from country 'Germany'
2025-04-30 04:42:45 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'Germany'. Cache invalidated
2025-04-30 04:42:45 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.deleteCitiesByCountryId(Long))
2025-04-30 04:42:45 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.deleteCitiesByCountryId(Long))
2025-04-30 04:42:45 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 11
2025-04-30 04:42:55 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-04-30 04:42:55 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 04:42:55 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 04:42:55 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 04:42:55 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 12
2025-04-30 04:43:08 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.deleteCitiesByCountryId(Long)), args=1
2025-04-30 04:43:08 | INFO  | org.example.service.CityService - 🗑️ Deleting 0 cities from country 'Germany'
2025-04-30 04:43:08 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'Germany'. Cache invalidated
2025-04-30 04:43:08 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.deleteCitiesByCountryId(Long))
2025-04-30 04:43:08 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.deleteCitiesByCountryId(Long))
2025-04-30 04:43:08 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 13
2025-04-30 04:43:14 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.deleteCitiesByCountryId(Long)), args=1
2025-04-30 04:43:14 | INFO  | org.example.service.CityService - 🗑️ Deleting 0 cities from country 'Germany'
2025-04-30 04:43:14 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'Germany'. Cache invalidated
2025-04-30 04:43:14 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.deleteCitiesByCountryId(Long))
2025-04-30 04:43:14 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.deleteCitiesByCountryId(Long))
2025-04-30 04:43:14 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 14
2025-04-30 04:43:17 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-04-30 04:43:17 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 04:43:17 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 04:43:17 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 04:43:17 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 15
2025-04-30 04:44:07 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-30 04:44:07 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 04:44:07 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-30 04:44:07 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-30 04:44:08 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-04-30 04:44:08 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 10395 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-30 04:44:08 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-30 04:44:09 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-30 04:44:09 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21 ms. Found 3 JPA repository interfaces.
2025-04-30 04:44:09 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-30 04:44:09 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-30 04:44:09 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-30 04:44:09 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-30 04:44:09 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-30 04:44:09 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 801 ms
2025-04-30 04:44:09 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-30 04:44:09 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-30 04:44:09 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-30 04:44:09 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-30 04:44:09 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-30 04:44:09 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7079f8f0
2025-04-30 04:44:09 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-30 04:44:10 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-30 04:44:10 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 04:44:10 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-30 04:44:10 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-30 04:44:11 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-30 04:44:11 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-30 04:44:11 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.176 seconds (process running for 3.52)
2025-04-30 04:44:19 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-30 04:44:19 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-30 04:44:19 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-30 04:44:19 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-04-30 04:44:19 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 04:44:19 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 04:44:19 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 04:44:19 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-04-30 05:21:21 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=31m41s207ms).
2025-04-30 06:36:48 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h15m27s101ms).
2025-04-30 08:07:11 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h30m23s62ms).
2025-04-30 08:24:15 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=17m4s151ms).
2025-04-30 08:24:44 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Retrograde clock change detected (housekeeper delta=28s592ms), soft-evicting connections from pool.
2025-04-30 08:26:31 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-30 08:26:31 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 08:26:31 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-30 08:26:31 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-30 09:49:29 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-04-30 09:49:29 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 11921 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-30 09:49:29 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-30 09:49:30 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-30 09:49:30 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 3 JPA repository interfaces.
2025-04-30 09:49:30 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-30 09:49:30 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-30 09:49:30 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-30 09:49:30 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-30 09:49:30 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-30 09:49:30 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 785 ms
2025-04-30 09:49:30 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-30 09:49:30 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-30 09:49:30 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-30 09:49:31 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-30 09:49:31 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-30 09:49:31 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@30704f85
2025-04-30 09:49:31 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-30 09:49:31 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-30 09:49:31 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 09:49:31 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-30 09:49:31 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-30 09:49:33 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-30 09:49:33 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-30 09:49:33 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.205 seconds (process running for 3.615)
2025-04-30 09:50:40 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-30 09:50:40 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-30 09:50:40 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-30 09:50:40 | INFO  | o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 243 ms
2025-04-30 09:51:10 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long)), args=1
2025-04-30 09:51:10 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 09:51:10 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 09:51:10 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-04-30 09:55:56 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 09:55:56 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 09:55:56 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 09:55:56 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 09:55:56 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 09:55:56 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 09:55:56 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 09:55:56 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 09:55:56 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 09:55:56 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 09:55:56 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 09:55:56 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 09:55:56 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 09:55:56 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 09:55:56 | INFO  | org.example.service.CityService - 🗑️ Deleting 2 cities from country 'null'
2025-04-30 09:55:56 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'null'. Cache invalidated
2025-04-30 09:55:56 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 09:55:56 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 09:55:56 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 09:55:56 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 09:55:56 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 09:55:56 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 09:55:56 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 09:55:56 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 09:55:56 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 09:55:56 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: null) to country 'null' (ID: 1)
2025-04-30 09:55:56 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 09:55:56 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 10:11:08 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-30 10:11:08 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 10:11:08 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-30 10:11:08 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-30 10:11:10 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-04-30 10:11:10 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 12534 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-30 10:11:10 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-30 10:11:10 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-30 10:11:10 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 3 JPA repository interfaces.
2025-04-30 10:11:11 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-30 10:11:11 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-30 10:11:11 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-30 10:11:11 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-30 10:11:11 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-30 10:11:11 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 720 ms
2025-04-30 10:11:11 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-30 10:11:11 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-30 10:11:11 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-30 10:11:11 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-30 10:11:11 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-30 10:11:11 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1218e12
2025-04-30 10:11:11 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-30 10:11:11 | ERROR | o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: Association 'org.example.model.Country.cities' is 'mappedBy' another entity and may not specify the '@JoinColumn'
2025-04-30 10:11:11 | WARN  | o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Association 'org.example.model.Country.cities' is 'mappedBy' another entity and may not specify the '@JoinColumn'
2025-04-30 10:11:11 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-30 10:11:11 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-30 10:11:11 | INFO  | o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-04-30 10:11:11 | INFO  | o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-04-30 10:11:11 | ERROR | o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Association 'org.example.model.Country.cities' is 'mappedBy' another entity and may not specify the '@JoinColumn'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1773)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.example.CountrySearchApplication.main(CountrySearchApplication.java:17)
Caused by: org.hibernate.AnnotationException: Association 'org.example.model.Country.cities' is 'mappedBy' another entity and may not specify the '@JoinColumn'
	at org.hibernate.boot.model.internal.CollectionBinder.detectMappedByProblem(CollectionBinder.java:1274)
	at org.hibernate.boot.model.internal.CollectionBinder.bind(CollectionBinder.java:1189)
	at org.hibernate.boot.model.internal.CollectionBinder.bindCollection(CollectionBinder.java:364)
	at org.hibernate.boot.model.internal.PropertyBinder.bindProperty(PropertyBinder.java:874)
	at org.hibernate.boot.model.internal.PropertyBinder.buildProperty(PropertyBinder.java:788)
	at org.hibernate.boot.model.internal.PropertyBinder.processElementAnnotations(PropertyBinder.java:709)
	at org.hibernate.boot.model.internal.EntityBinder.processIdPropertiesIfNotAlready(EntityBinder.java:1026)
	at org.hibernate.boot.model.internal.EntityBinder.handleIdentifier(EntityBinder.java:354)
	at org.hibernate.boot.model.internal.EntityBinder.bindEntityClass(EntityBinder.java:234)
	at org.hibernate.boot.model.internal.AnnotationBinder.bindClass(AnnotationBinder.java:423)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:256)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:279)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:322)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	... 16 common frames omitted
2025-04-30 10:13:03 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-04-30 10:13:03 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 12588 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-30 10:13:03 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-30 10:13:03 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-30 10:13:03 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21 ms. Found 3 JPA repository interfaces.
2025-04-30 10:13:03 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-30 10:13:03 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-30 10:13:03 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-30 10:13:03 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-30 10:13:04 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-30 10:13:04 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 728 ms
2025-04-30 10:13:04 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-30 10:13:04 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-30 10:13:04 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-30 10:13:04 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-30 10:13:04 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-30 10:13:04 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@403f7aa2
2025-04-30 10:13:04 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-30 10:13:04 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-30 10:13:04 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 10:13:04 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-30 10:13:05 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-30 10:13:06 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-30 10:13:06 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-30 10:13:06 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.073 seconds (process running for 3.419)
2025-04-30 10:13:22 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-30 10:13:22 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-30 10:13:22 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-30 10:13:22 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String)), args=2025-04-30,*/*
2025-04-30 10:13:22 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String))
2025-04-30 10:13:22 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String))
2025-04-30 10:13:22 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-04-30 10:13:32 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String)), args=2025-04-29,*/*
2025-04-30 10:13:32 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String)), exception: No log entries found for date: 2025-04-29
2025-04-30 10:13:32 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String))
2025-04-30 10:13:32 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 2
2025-04-30 10:15:23 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String)), args=2025-04-28,*/*
2025-04-30 10:15:23 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String)), exception: No log entries found for date: 2025-04-28
2025-04-30 10:15:23 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String))
2025-04-30 10:15:23 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 3
2025-04-30 10:16:07 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long)), args=1
2025-04-30 10:16:08 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 10:16:08 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 10:16:08 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 4
2025-04-30 10:16:22 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-04-30 10:16:23 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 10:16:23 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 10:16:23 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 10:16:23 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 5
2025-04-30 10:21:03 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-30 10:21:03 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 10:21:03 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-30 10:21:03 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-30 10:21:05 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-04-30 10:21:05 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 12780 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-30 10:21:05 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-30 10:21:05 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-30 10:21:05 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22 ms. Found 3 JPA repository interfaces.
2025-04-30 10:21:05 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-30 10:21:05 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-30 10:21:05 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-30 10:21:05 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-30 10:21:05 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-30 10:21:05 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 769 ms
2025-04-30 10:21:06 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-30 10:21:06 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-30 10:21:06 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-30 10:21:06 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-30 10:21:06 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-30 10:21:06 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@403f7aa2
2025-04-30 10:21:06 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-30 10:21:06 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-30 10:21:06 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 10:21:06 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-30 10:21:07 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-30 10:21:08 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-30 10:21:08 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-30 10:21:08 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.19 seconds (process running for 3.562)
2025-04-30 10:21:10 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-30 10:21:10 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-30 10:21:10 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-30 10:21:10 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long)), args=1
2025-04-30 10:21:10 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 10:21:10 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 10:21:10 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-04-30 10:21:13 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long)), args=1
2025-04-30 10:21:13 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 10:21:13 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 10:21:13 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 2
2025-04-30 10:21:17 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-04-30 10:21:17 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 10:21:17 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 10:21:17 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 10:21:17 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 3
2025-04-30 10:39:40 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=6m34s244ms).
2025-04-30 10:51:19 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=11m38s592ms).
2025-04-30 11:01:07 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-30 11:01:07 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 11:01:07 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-30 11:01:07 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-30 11:01:09 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-04-30 11:01:09 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 13516 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-30 11:01:09 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-30 11:01:10 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-30 11:01:10 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 3 JPA repository interfaces.
2025-04-30 11:01:10 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-30 11:01:10 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-30 11:01:10 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-30 11:01:10 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-30 11:01:10 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-30 11:01:10 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 723 ms
2025-04-30 11:01:10 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-30 11:01:10 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-30 11:01:10 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-30 11:01:10 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-30 11:01:10 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-30 11:01:10 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@563843f1
2025-04-30 11:01:10 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-30 11:01:11 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-30 11:01:11 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 11:01:11 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-30 11:01:11 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-30 11:01:12 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-30 11:01:12 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-30 11:01:12 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.188 seconds (process running for 3.545)
2025-04-30 11:01:12 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-30 11:01:12 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-30 11:01:12 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-30 11:01:13 | INFO  | o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 192 ms
2025-04-30 11:01:35 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long)), args=1
2025-04-30 11:01:35 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 11:01:35 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 11:01:35 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-04-30 11:02:48 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-04-30 11:02:48 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 11:02:48 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 11:02:48 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 11:02:48 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 2
2025-04-30 11:04:41 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.addNewCountries(List)), args=[Country(id=null, name=Belarus, capital=Minsk, population=1.431E8, areaSquareKm=1.71E7, gdp=1.779E12, cities=[], nations=null), Country(id=null, name=Durka, capital=Novoelnya, population=1.0, areaSquareKm=1.71E7, gdp=1.779E12, cities=[], nations=null)]
2025-04-30 11:04:41 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 2)
2025-04-30 11:04:41 | INFO  | org.example.service.CountryService - ✨ Created country: Durka (ID: 3)
2025-04-30 11:04:41 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 11:04:41 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.addNewCountries(List))
2025-04-30 11:04:41 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.addNewCountries(List))
2025-04-30 11:04:41 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 3
2025-04-30 11:05:21 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountries()), args=
2025-04-30 11:05:21 | INFO  | org.example.service.CountryService - 🔄 Fetched 3 countries from DB and cached
2025-04-30 11:05:21 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-04-30 11:05:21 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-04-30 11:05:21 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 4
2025-04-30 11:06:06 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.addNewCountries(List)), args=[]
2025-04-30 11:06:06 | INFO  | org.example.service.CountryService - ✨ Added 0 countries
2025-04-30 11:06:06 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.addNewCountries(List))
2025-04-30 11:06:06 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.addNewCountries(List))
2025-04-30 11:06:06 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 5
2025-04-30 11:07:39 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-30 11:07:39 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 11:07:39 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-30 11:07:39 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-30 11:07:41 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-04-30 11:07:41 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 13724 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-30 11:07:41 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-30 11:07:42 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-30 11:07:42 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 3 JPA repository interfaces.
2025-04-30 11:07:42 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-30 11:07:42 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-30 11:07:42 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-30 11:07:42 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-30 11:07:42 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-30 11:07:42 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 689 ms
2025-04-30 11:07:42 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-30 11:07:42 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-30 11:07:42 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-30 11:07:42 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-30 11:07:42 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-30 11:07:42 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4348fa35
2025-04-30 11:07:42 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-30 11:07:43 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-30 11:07:43 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 11:07:43 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-30 11:07:43 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-30 11:07:44 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-30 11:07:44 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-30 11:07:44 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 2.972 seconds (process running for 3.301)
2025-04-30 11:08:02 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-30 11:08:02 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-30 11:08:02 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-30 11:08:55 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-30 11:08:55 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 11:08:55 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-30 11:08:55 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-30 11:08:57 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-04-30 11:08:57 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 13775 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-30 11:08:57 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-30 11:08:57 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-30 11:08:57 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21 ms. Found 3 JPA repository interfaces.
2025-04-30 11:08:58 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-30 11:08:58 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-30 11:08:58 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-30 11:08:58 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-30 11:08:58 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-30 11:08:58 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 732 ms
2025-04-30 11:08:58 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-30 11:08:58 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-30 11:08:58 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-30 11:08:58 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-30 11:08:58 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-30 11:08:58 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@545604a9
2025-04-30 11:08:58 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-30 11:08:59 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-30 11:08:59 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 11:08:59 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-30 11:08:59 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-30 11:09:00 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-30 11:09:00 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-30 11:09:00 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.102 seconds (process running for 3.442)
2025-04-30 11:09:01 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-30 11:09:01 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-30 11:09:01 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-30 11:09:01 | WARN  | o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Failure in @ExceptionHandler org.example.exception.ExceptionManager#objectNotFoundException(ObjectNotFoundException, WebRequest)
java.lang.IllegalStateException: Could not resolve parameter [0] in public org.springframework.http.ResponseEntity<org.example.exception.ErrorMessage> org.example.exception.ExceptionManager.objectNotFoundException(org.example.exception.ObjectNotFoundException,org.springframework.web.context.request.WebRequest): No suitable resolver
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:222)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:178)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:432)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-30 11:09:01 | WARN  | o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unrecognized token 'asd': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')]
2025-04-30 11:11:38 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountries()), args=
2025-04-30 11:11:38 | INFO  | org.example.service.CountryService - 🔄 Fetched 3 countries from DB and cached
2025-04-30 11:11:38 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-04-30 11:11:38 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-04-30 11:11:38 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-04-30 11:12:08 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 11:12:08 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 11:12:08 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 11:12:08 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 11:12:08 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 11:12:08 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 11:12:08 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 11:12:08 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 11:12:08 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 11:12:08 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 11:12:08 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 11:12:08 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 11:12:08 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 11:12:08 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 11:12:08 | INFO  | org.example.service.CityService - 🗑️ Deleting 2 cities from country 'null'
2025-04-30 11:12:08 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'null'. Cache invalidated
2025-04-30 11:12:08 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 11:12:08 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 11:12:08 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 11:12:08 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 11:12:08 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 11:12:08 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 11:12:08 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 11:12:08 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 11:12:08 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 11:12:08 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: null) to country 'null' (ID: 1)
2025-04-30 11:12:08 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 11:12:08 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 11:31:50 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long)), args=1
2025-04-30 11:31:50 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 11:31:50 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 11:31:50 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 2
2025-04-30 11:38:00 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-30 11:38:00 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 11:38:00 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-30 11:38:00 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-30 12:28:20 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-04-30 12:28:20 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 15093 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-30 12:28:20 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-30 12:28:20 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-30 12:28:20 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22 ms. Found 3 JPA repository interfaces.
2025-04-30 12:28:20 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-30 12:28:20 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-30 12:28:20 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-30 12:28:20 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-30 12:28:20 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-30 12:28:20 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 752 ms
2025-04-30 12:28:20 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-30 12:28:20 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-30 12:28:20 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-30 12:28:21 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-30 12:28:21 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-30 12:28:21 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@38cb1606
2025-04-30 12:28:21 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-30 12:28:21 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-30 12:28:21 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 12:28:21 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-30 12:28:22 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-30 12:28:23 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-30 12:28:23 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-30 12:28:23 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.273 seconds (process running for 3.622)
2025-04-30 12:28:24 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-30 12:28:24 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-30 12:28:24 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-30 12:28:24 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long)), args=1
2025-04-30 12:28:24 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 12:28:24 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 12:28:24 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-04-30 12:28:26 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long)), args=1
2025-04-30 12:28:26 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 12:28:26 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 12:28:26 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 2
2025-04-30 12:28:27 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long)), args=1
2025-04-30 12:28:27 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 12:28:27 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 12:28:27 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 3
2025-04-30 12:28:28 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long)), args=1
2025-04-30 12:28:28 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 12:28:28 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 12:28:28 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 4
2025-04-30 12:28:28 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long)), args=1
2025-04-30 12:28:28 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 12:28:28 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 12:28:28 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 5
2025-04-30 12:28:42 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-04-30 12:28:42 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 12:28:42 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 12:28:42 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 12:28:42 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 6
2025-04-30 12:28:55 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long)), args=6
2025-04-30 12:28:55 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long)), exception: Country not found
2025-04-30 12:28:55 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 12:28:55 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 7
2025-04-30 12:29:45 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long)), args=1
2025-04-30 12:29:45 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 12:29:45 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 12:29:45 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 8
2025-04-30 12:30:29 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-30 12:30:29 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 12:30:29 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-30 12:30:29 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-30 12:30:31 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-04-30 12:30:31 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 15162 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-30 12:30:31 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-30 12:30:32 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-30 12:30:32 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22 ms. Found 3 JPA repository interfaces.
2025-04-30 12:30:32 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-30 12:30:32 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-30 12:30:32 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-30 12:30:32 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-30 12:30:32 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-30 12:30:32 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 797 ms
2025-04-30 12:30:32 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-30 12:30:32 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-30 12:30:32 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-30 12:30:33 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-30 12:30:33 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-30 12:30:33 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1c0e4262
2025-04-30 12:30:33 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-30 12:30:33 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-30 12:30:33 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 12:30:33 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-30 12:30:33 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-30 12:30:35 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-30 12:30:35 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-30 12:30:35 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.209 seconds (process running for 3.554)
2025-04-30 12:30:35 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-30 12:30:35 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-30 12:30:35 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-04-30 12:30:35 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long)), args=1
2025-04-30 12:30:35 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 12:30:35 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 12:30:35 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-04-30 13:01:25 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-30 13:01:25 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 13:01:25 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-30 13:01:25 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-30 13:01:58 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-04-30 13:01:58 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 15952 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-30 13:01:58 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-30 13:01:58 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-30 13:01:58 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 3 JPA repository interfaces.
2025-04-30 13:01:59 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-30 13:01:59 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-30 13:01:59 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-30 13:01:59 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-30 13:01:59 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-30 13:01:59 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 724 ms
2025-04-30 13:01:59 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-30 13:01:59 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-30 13:01:59 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-30 13:01:59 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-30 13:01:59 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-30 13:01:59 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@30704f85
2025-04-30 13:01:59 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-30 13:02:00 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-30 13:02:00 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 13:02:00 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-30 13:02:00 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-30 13:02:01 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-30 13:02:01 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-30 13:02:01 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.186 seconds (process running for 3.547)
2025-04-30 13:02:03 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-30 13:02:03 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-30 13:02:03 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-30 13:02:03 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long)), args=1
2025-04-30 13:02:03 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 13:02:03 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 13:02:03 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-04-30 13:02:08 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-04-30 13:02:08 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 13:02:08 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CityController.getCities()), exception: Cannot invoke "org.example.model.Country.getId()" because "country" is null
2025-04-30 13:02:08 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 13:02:08 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 2
2025-04-30 13:02:31 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-30 13:02:31 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 13:02:31 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-30 13:02:31 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-30 13:02:33 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-04-30 13:02:33 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 15987 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-30 13:02:33 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-30 13:02:34 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-30 13:02:34 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 3 JPA repository interfaces.
2025-04-30 13:02:34 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-30 13:02:34 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-30 13:02:34 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-30 13:02:34 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-30 13:02:34 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-30 13:02:34 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 701 ms
2025-04-30 13:02:34 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-30 13:02:34 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-30 13:02:34 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-30 13:02:34 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-30 13:02:34 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-30 13:02:34 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@545604a9
2025-04-30 13:02:34 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-30 13:02:35 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-30 13:02:35 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 13:02:35 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-30 13:02:35 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-30 13:02:36 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-30 13:02:36 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-30 13:02:36 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.011 seconds (process running for 3.34)
2025-04-30 13:02:40 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-30 13:02:40 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-30 13:02:40 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-30 13:02:40 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-04-30 13:02:40 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 13:02:40 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 13:02:40 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 13:02:40 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-04-30 13:03:22 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-30 13:03:22 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 13:03:22 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-30 13:03:22 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-30 13:03:24 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-04-30 13:03:24 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 16021 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-30 13:03:24 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-30 13:03:24 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-30 13:03:24 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 3 JPA repository interfaces.
2025-04-30 13:03:24 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-30 13:03:24 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-30 13:03:24 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-30 13:03:24 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-30 13:03:24 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-30 13:03:24 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 715 ms
2025-04-30 13:03:25 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-30 13:03:25 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-30 13:03:25 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-30 13:03:25 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-30 13:03:25 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-30 13:03:25 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@29c25bbc
2025-04-30 13:03:25 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-30 13:03:25 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-30 13:03:25 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 13:03:25 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-30 13:03:26 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-30 13:03:27 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-30 13:03:27 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-30 13:03:27 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.107 seconds (process running for 3.472)
2025-04-30 13:03:30 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-30 13:03:30 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-30 13:03:30 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-30 13:03:31 | INFO  | o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 192 ms
2025-04-30 13:04:28 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-30 13:04:28 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 13:04:28 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-30 13:04:28 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-30 13:04:30 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-04-30 13:04:30 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 16064 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-30 13:04:30 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-30 13:04:31 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-30 13:04:31 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 3 JPA repository interfaces.
2025-04-30 13:04:31 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-30 13:04:31 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-30 13:04:31 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-30 13:04:31 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-30 13:04:31 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-30 13:04:31 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 752 ms
2025-04-30 13:04:31 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-30 13:04:31 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-30 13:04:31 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-30 13:04:31 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-30 13:04:31 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-30 13:04:31 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@403f7aa2
2025-04-30 13:04:31 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-30 13:04:32 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-30 13:04:32 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 13:04:32 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-30 13:04:32 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-30 13:04:33 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-30 13:04:33 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-30 13:04:33 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.27 seconds (process running for 3.654)
2025-04-30 13:04:33 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-30 13:04:33 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-30 13:04:33 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-30 13:04:34 | INFO  | o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 200 ms
2025-04-30 13:05:48 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.addNewCountries(List)), args=[Country(id=null, name=Russia, capital=Moscow, population=1.431E8, areaSquareKm=1.71E7, gdp=1.779E12, cities=[], nations=null), Country(id=null, name=Rossiya, capital=Moskva, population=1.431E8, areaSquareKm=1.71E7, gdp=1.779E12, cities=[], nations=null)]
2025-04-30 13:05:48 | INFO  | org.example.service.CountryService - ✨ Created country: Russia (ID: 4)
2025-04-30 13:05:48 | INFO  | org.example.service.CountryService - ✨ Created country: Rossiya (ID: 5)
2025-04-30 13:05:48 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 13:05:48 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.addNewCountries(List))
2025-04-30 13:05:48 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.addNewCountries(List))
2025-04-30 13:05:48 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-04-30 13:06:16 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountries()), args=
2025-04-30 13:06:16 | INFO  | org.example.service.CountryService - 🔄 Fetched 5 countries from DB and cached
2025-04-30 13:06:17 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-04-30 13:06:17 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-04-30 13:06:17 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 2
2025-04-30 13:06:54 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String)), args=Moscow
2025-04-30 13:06:54 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 13:06:54 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 13:06:54 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 3
2025-04-30 13:07:00 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String)), args=M
2025-04-30 13:07:00 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 13:07:00 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 13:07:00 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 4
2025-04-30 13:07:40 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String)), args=Many
2025-04-30 13:07:40 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 13:07:40 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 13:07:40 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 5
2025-04-30 13:07:47 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String)), args=M
2025-04-30 13:07:47 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 13:07:47 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 13:07:47 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 6
2025-04-30 13:08:51 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String)), args=Ma
2025-04-30 13:08:51 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 13:08:51 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 13:08:51 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 7
2025-04-30 13:08:58 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String)), args=m
2025-04-30 13:08:58 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 13:08:58 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 13:08:58 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 8
2025-04-30 13:09:05 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String)), args=y
2025-04-30 13:09:05 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 13:09:05 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 13:09:05 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 9
2025-04-30 13:09:09 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String)), args=n
2025-04-30 13:09:09 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 13:09:09 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 13:09:09 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 10
2025-04-30 13:09:15 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String)), args=e
2025-04-30 13:09:15 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 13:09:15 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 13:09:15 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 11
2025-04-30 13:09:25 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String)), args=Berlinn
2025-04-30 13:09:25 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 13:09:25 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 13:09:25 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 12
2025-04-30 13:09:28 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String)), args=Berlin
2025-04-30 13:09:28 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 13:09:28 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 13:09:28 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 13
2025-04-30 13:09:31 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String)), args=Berlim
2025-04-30 13:09:31 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 13:09:31 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 13:09:31 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 14
2025-04-30 13:09:34 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String)), args=Berlinm
2025-04-30 13:09:34 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 13:09:34 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 13:09:34 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 15
2025-04-30 13:09:40 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String)), args=MBerlin
2025-04-30 13:09:40 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 13:09:40 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 13:09:40 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 16
2025-04-30 13:09:45 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String)), args=M
2025-04-30 13:09:45 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 13:09:45 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 13:09:45 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 17
2025-04-30 13:14:00 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-30 13:14:00 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 13:14:00 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-30 13:14:00 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-30 13:14:03 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-04-30 13:14:03 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 16392 (/Users/snrteftelya/Desktop/CountryExploration/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountryExploration/CountrySearch)
2025-04-30 13:14:03 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-30 13:14:03 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-30 13:14:03 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 3 JPA repository interfaces.
2025-04-30 13:14:03 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-30 13:14:03 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-30 13:14:03 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-30 13:14:03 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-30 13:14:03 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-30 13:14:03 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 718 ms
2025-04-30 13:14:04 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-30 13:14:04 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-30 13:14:04 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-30 13:14:04 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-30 13:14:04 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-30 13:14:04 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@716ae973
2025-04-30 13:14:04 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-30 13:14:04 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-30 13:14:04 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 13:14:04 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-30 13:14:04 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-30 13:14:06 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-30 13:14:06 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-30 13:14:06 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.123 seconds (process running for 3.477)
2025-04-30 13:14:12 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-30 13:14:12 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-30 13:14:12 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-30 13:14:13 | INFO  | o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 190 ms
2025-04-30 13:14:29 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long)), args=1
2025-04-30 13:14:29 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.id,
        c1_0.area,
        c1_0.country_id,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        city c1_0 
    [34mleft[0m [34mjoin[0m
        country c2_0 
            [34mon[0m c2_0.id=c1_0.country_id 
    [34mwhere[0m
        c2_0.id=?
2025-04-30 13:14:29 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.id,
        c1_0.area,
        c1_0.capital,
        c1_0.gdp,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        country c1_0 
    [34mwhere[0m
        c1_0.id=?
2025-04-30 13:14:29 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.country_id,
        c1_0.id,
        c1_0.area,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        city c1_0 
    [34mwhere[0m
        c1_0.country_id=?
2025-04-30 13:14:29 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.country_id,
        c1_0.id,
        c1_0.area,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        city c1_0 
    [34mwhere[0m
        c1_0.country_id=?
2025-04-30 13:14:29 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        n1_0.country_id,
        n1_1.id,
        n1_1.[34mlanguage[0m,
        n1_1.name,
        n1_1.religion 
    [34mfrom[0m
        country_nations n1_0 
    [34mjoin[0m
        nation n1_1 
            [34mon[0m n1_1.id=n1_0.nation_id 
    [34mwhere[0m
        n1_0.country_id=?
2025-04-30 13:14:29 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 13:14:29 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 13:14:29 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-04-30 13:14:35 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long)), args=2
2025-04-30 13:14:35 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.id,
        c1_0.area,
        c1_0.country_id,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        city c1_0 
    [34mleft[0m [34mjoin[0m
        country c2_0 
            [34mon[0m c2_0.id=c1_0.country_id 
    [34mwhere[0m
        c2_0.id=?
2025-04-30 13:14:35 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 13:14:35 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 13:14:35 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 2
2025-04-30 13:14:56 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-04-30 13:14:56 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.id,
        c1_0.area,
        c1_0.country_id,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        city c1_0
2025-04-30 13:14:56 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.id,
        c1_0.area,
        c1_0.capital,
        c1_0.gdp,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        country c1_0 
    [34mwhere[0m
        c1_0.id=?
2025-04-30 13:14:56 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.country_id,
        c1_0.id,
        c1_0.area,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        city c1_0 
    [34mwhere[0m
        c1_0.country_id=?
2025-04-30 13:14:56 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.country_id,
        c1_0.id,
        c1_0.area,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        city c1_0 
    [34mwhere[0m
        c1_0.country_id=?
2025-04-30 13:14:56 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        n1_0.country_id,
        n1_1.id,
        n1_1.[34mlanguage[0m,
        n1_1.name,
        n1_1.religion 
    [34mfrom[0m
        country_nations n1_0 
    [34mjoin[0m
        nation n1_1 
            [34mon[0m n1_1.id=n1_0.nation_id 
    [34mwhere[0m
        n1_0.country_id=?
2025-04-30 13:14:56 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 13:14:56 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 13:14:56 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 13:14:56 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 3
2025-04-30 13:15:18 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountries()), args=
2025-04-30 13:15:18 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        [34mdistinct[0m c1_0.id,
        c1_0.area,
        c1_0.capital,
        c2_0.country_id,
        c2_0.id,
        c2_0.area,
        c2_0.name,
        c2_0.population,
        c1_0.gdp,
        c1_0.name,
        n1_0.country_id,
        n1_1.id,
        n1_1.[34mlanguage[0m,
        n1_1.name,
        n1_1.religion,
        c1_0.population 
    [34mfrom[0m
        country c1_0 
    [34mleft[0m [34mjoin[0m
        country_nations n1_0 
            [34mon[0m c1_0.id=n1_0.country_id 
    [34mleft[0m [34mjoin[0m
        nation n1_1 
            [34mon[0m n1_1.id=n1_0.nation_id 
    [34mleft[0m [34mjoin[0m
        city c2_0 
            [34mon[0m c1_0.id=c2_0.country_id
2025-04-30 13:15:18 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.country_id,
        c1_0.id,
        c1_0.area,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        city c1_0 
    [34mwhere[0m
        c1_0.country_id=?
2025-04-30 13:15:18 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.nation_id,
        c1_1.id,
        c1_1.area,
        c1_1.capital,
        c1_1.gdp,
        c1_1.name,
        c1_1.population 
    [34mfrom[0m
        country_nations c1_0 
    [34mjoin[0m
        country c1_1 
            [34mon[0m c1_1.id=c1_0.country_id 
    [34mwhere[0m
        c1_0.nation_id=?
2025-04-30 13:15:18 | INFO  | org.example.service.CountryService - 🔄 Fetched 5 countries from DB and cached
2025-04-30 13:15:18 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-04-30 13:15:18 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-04-30 13:15:18 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 4
2025-04-30 13:15:40 | WARN  | o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Failure in @ExceptionHandler org.example.exception.ExceptionManager#objectNotFoundException(ObjectNotFoundException, WebRequest)
java.lang.IllegalStateException: Could not resolve parameter [0] in public org.springframework.http.ResponseEntity<org.example.exception.ErrorMessage> org.example.exception.ExceptionManager.objectNotFoundException(org.example.exception.ObjectNotFoundException,org.springframework.web.context.request.WebRequest): No suitable resolver
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:222)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:178)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:432)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-30 13:15:40 | WARN  | o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('}' (code 125)): was expecting double-quote to start field name]
2025-04-30 13:16:02 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City)), args=2,City(id=null, name=Mogile, population=2000000.0, areaSquareKm=50000.0, country=Country(id=null, name=Belarus, capital=Minsk, population=1.431E8, areaSquareKm=1.71E7, gdp=1.779E12, cities=[], nations=null))
2025-04-30 13:16:02 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.id,
        c1_0.area,
        c1_0.capital,
        c2_0.country_id,
        c2_0.id,
        c2_0.area,
        c2_0.name,
        c2_0.population,
        c1_0.gdp,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        country c1_0 
    [34mleft[0m [34mjoin[0m
        city c2_0 
            [34mon[0m c1_0.id=c2_0.country_id 
    [34mwhere[0m
        c1_0.id=?
2025-04-30 13:16:02 | DEBUG | org.hibernate.SQL - 
    [34minsert[0m 
    [34minto[0m
        city
        (area, country_id, name, population) 
    [34mvalues[0m
        (?, ?, ?, ?)
2025-04-30 13:16:02 | INFO  | org.example.service.CityService - ➕ Added city 'Mogile' (ID: 43) to country 'Belarus' (ID: 2)
2025-04-30 13:16:02 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'Belarus' (ID: 2). Action: ADD
2025-04-30 13:16:02 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        n1_0.country_id,
        n1_1.id,
        n1_1.[34mlanguage[0m,
        n1_1.name,
        n1_1.religion 
    [34mfrom[0m
        country_nations n1_0 
    [34mjoin[0m
        nation n1_1 
            [34mon[0m n1_1.id=n1_0.nation_id 
    [34mwhere[0m
        n1_0.country_id=?
2025-04-30 13:16:02 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City))
2025-04-30 13:16:02 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addNewCityByCountryId(Long,City))
2025-04-30 13:16:02 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 5
2025-04-30 13:17:20 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long)), args=2
2025-04-30 13:17:20 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.id,
        c1_0.area,
        c1_0.country_id,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        city c1_0 
    [34mleft[0m [34mjoin[0m
        country c2_0 
            [34mon[0m c2_0.id=c1_0.country_id 
    [34mwhere[0m
        c2_0.id=?
2025-04-30 13:17:20 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.id,
        c1_0.area,
        c1_0.capital,
        c1_0.gdp,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        country c1_0 
    [34mwhere[0m
        c1_0.id=?
2025-04-30 13:17:20 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.country_id,
        c1_0.id,
        c1_0.area,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        city c1_0 
    [34mwhere[0m
        c1_0.country_id=?
2025-04-30 13:17:20 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.country_id,
        c1_0.id,
        c1_0.area,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        city c1_0 
    [34mwhere[0m
        c1_0.country_id=?
2025-04-30 13:17:20 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        n1_0.country_id,
        n1_1.id,
        n1_1.[34mlanguage[0m,
        n1_1.name,
        n1_1.religion 
    [34mfrom[0m
        country_nations n1_0 
    [34mjoin[0m
        nation n1_1 
            [34mon[0m n1_1.id=n1_0.nation_id 
    [34mwhere[0m
        n1_0.country_id=?
2025-04-30 13:17:20 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 13:17:20 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 13:17:20 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 6
2025-04-30 13:17:33 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-04-30 13:17:33 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.id,
        c1_0.area,
        c1_0.country_id,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        city c1_0
2025-04-30 13:17:33 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.id,
        c1_0.area,
        c1_0.capital,
        c1_0.gdp,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        country c1_0 
    [34mwhere[0m
        c1_0.id=?
2025-04-30 13:17:33 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.country_id,
        c1_0.id,
        c1_0.area,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        city c1_0 
    [34mwhere[0m
        c1_0.country_id=?
2025-04-30 13:17:33 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.country_id,
        c1_0.id,
        c1_0.area,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        city c1_0 
    [34mwhere[0m
        c1_0.country_id=?
2025-04-30 13:17:33 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        n1_0.country_id,
        n1_1.id,
        n1_1.[34mlanguage[0m,
        n1_1.name,
        n1_1.religion 
    [34mfrom[0m
        country_nations n1_0 
    [34mjoin[0m
        nation n1_1 
            [34mon[0m n1_1.id=n1_0.nation_id 
    [34mwhere[0m
        n1_0.country_id=?
2025-04-30 13:17:33 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.id,
        c1_0.area,
        c1_0.capital,
        c1_0.gdp,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        country c1_0 
    [34mwhere[0m
        c1_0.id=?
2025-04-30 13:17:33 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.country_id,
        c1_0.id,
        c1_0.area,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        city c1_0 
    [34mwhere[0m
        c1_0.country_id=?
2025-04-30 13:17:33 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.country_id,
        c1_0.id,
        c1_0.area,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        city c1_0 
    [34mwhere[0m
        c1_0.country_id=?
2025-04-30 13:17:33 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        n1_0.country_id,
        n1_1.id,
        n1_1.[34mlanguage[0m,
        n1_1.name,
        n1_1.religion 
    [34mfrom[0m
        country_nations n1_0 
    [34mjoin[0m
        nation n1_1 
            [34mon[0m n1_1.id=n1_0.nation_id 
    [34mwhere[0m
        n1_0.country_id=?
2025-04-30 13:17:33 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 13:17:33 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 13:17:33 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 13:17:33 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 7
2025-04-30 13:18:51 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 13:18:51 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:18:51 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:18:51 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:18:51 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:18:51 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 13:18:51 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:18:51 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:18:51 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 13:18:51 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 13:18:51 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 13:18:51 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 13:18:51 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 13:18:51 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 13:18:51 | INFO  | org.example.service.CityService - 🗑️ Deleting 2 cities from country 'null'
2025-04-30 13:18:51 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'null'. Cache invalidated
2025-04-30 13:18:51 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 13:18:51 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:18:51 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 13:18:51 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:18:51 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 13:18:51 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 13:18:51 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 13:18:51 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 13:18:51 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 13:18:51 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: null) to country 'null' (ID: 1)
2025-04-30 13:18:51 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:18:51 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 13:23:16 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: null) to country 'null' (ID: 1)
2025-04-30 13:23:16 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:23:16 | INFO  | org.example.service.CityService - 🗑️ Deleting 2 cities from country 'null'
2025-04-30 13:23:16 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'null'. Cache invalidated
2025-04-30 13:23:16 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:23:16 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:23:16 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:23:16 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:23:16 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 13:23:16 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 13:23:16 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:23:16 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:23:16 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:23:16 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:23:33 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: null) to country 'null' (ID: 1)
2025-04-30 13:23:33 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:23:33 | INFO  | org.example.service.CityService - 🗑️ Deleting 2 cities from country 'null'
2025-04-30 13:23:33 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'null'. Cache invalidated
2025-04-30 13:23:33 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:23:33 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:23:33 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:23:33 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:23:33 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 13:23:33 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 13:23:33 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:23:33 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:23:33 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:23:33 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:23:53 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 13:23:53 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:23:53 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:23:53 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:23:53 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:23:53 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 13:23:53 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:23:53 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:23:53 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 13:23:53 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 13:23:53 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 13:23:53 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 13:23:53 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 13:23:53 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 13:23:53 | INFO  | org.example.service.CityService - 🗑️ Deleting 2 cities from country 'null'
2025-04-30 13:23:53 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'null'. Cache invalidated
2025-04-30 13:23:53 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 13:23:53 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:23:53 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 13:23:53 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:23:53 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 13:23:53 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 13:23:53 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 13:23:53 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 13:23:53 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 13:23:53 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: null) to country 'null' (ID: 1)
2025-04-30 13:23:53 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:23:53 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 13:24:10 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:24:10 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:24:10 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:24:10 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:24:10 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:24:10 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 13:24:10 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:24:10 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:24:10 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:24:10 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 13:24:10 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 13:24:10 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 13:24:10 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 13:24:10 | INFO  | org.example.service.CityService - 🗑️ Deleting 2 cities from country 'null'
2025-04-30 13:24:10 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'null'. Cache invalidated
2025-04-30 13:24:10 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 13:24:10 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:24:10 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 13:24:10 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:24:10 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 13:24:10 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 13:24:10 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 13:24:10 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 13:24:10 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 13:24:10 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: null) to country 'null' (ID: 1)
2025-04-30 13:24:10 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:24:10 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 13:25:32 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 13:25:32 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 13:25:32 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 13:25:32 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:25:32 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:25:32 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:25:32 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:25:32 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:25:32 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 13:25:32 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:25:32 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:25:32 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:25:32 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 13:25:32 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 13:25:32 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 13:25:32 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 13:25:32 | INFO  | org.example.service.CityService - 🗑️ Deleting 2 cities from country 'null'
2025-04-30 13:25:32 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'null'. Cache invalidated
2025-04-30 13:25:32 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 13:25:32 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:25:32 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 13:25:32 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:25:32 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 13:25:32 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 13:25:32 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 13:25:32 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 13:25:32 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 13:25:32 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: null) to country 'null' (ID: 1)
2025-04-30 13:25:32 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:25:32 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 13:25:59 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 13:25:59 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 13:25:59 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 13:26:00 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:26:00 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:26:00 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:26:00 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:26:00 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:26:00 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 13:26:00 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:26:00 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:26:00 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:26:00 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 13:26:00 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 13:26:00 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 13:26:00 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 13:26:00 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 13:26:00 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 13:26:00 | INFO  | org.example.service.CityService - 🗑️ Deleting 2 cities from country 'null'
2025-04-30 13:26:00 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'null'. Cache invalidated
2025-04-30 13:26:00 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 13:26:00 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:26:00 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 13:26:00 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:26:00 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 13:26:00 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 13:26:00 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 13:26:00 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 13:26:00 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 13:26:00 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: null) to country 'null' (ID: 1)
2025-04-30 13:26:00 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:26:00 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 13:26:31 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 13:26:31 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 13:26:31 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 13:26:31 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:26:31 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:26:31 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:26:31 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:26:31 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:26:31 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 13:26:31 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:26:31 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:26:31 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:26:31 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 13:26:31 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 13:26:31 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 13:26:31 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 13:26:31 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 13:26:31 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 13:26:31 | INFO  | org.example.service.CityService - 🗑️ Deleting 2 cities from country 'null'
2025-04-30 13:26:31 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'null'. Cache invalidated
2025-04-30 13:26:31 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 13:26:31 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:26:31 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 13:26:31 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:26:31 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 13:26:31 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 13:26:31 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 13:26:31 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 13:26:31 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 13:26:31 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: null) to country 'null' (ID: 1)
2025-04-30 13:26:31 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:26:31 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 13:26:41 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 13:26:41 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 13:26:41 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 13:26:41 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:26:41 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:26:41 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:26:41 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:26:41 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:26:41 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 13:26:41 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:26:41 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:26:41 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:26:41 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 13:26:41 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 13:26:41 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 13:26:41 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 13:26:41 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 13:26:41 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 13:26:41 | INFO  | org.example.service.CityService - 🗑️ Deleting 2 cities from country 'null'
2025-04-30 13:26:41 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'null'. Cache invalidated
2025-04-30 13:26:41 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 13:26:41 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:26:41 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 13:26:41 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:26:41 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 13:26:41 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 13:26:41 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 13:26:41 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 13:26:41 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 13:26:41 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: null) to country 'null' (ID: 1)
2025-04-30 13:26:41 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:26:41 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 13:27:06 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 13:27:06 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 13:27:06 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 13:27:06 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:27:06 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:27:06 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:27:06 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:27:06 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:27:06 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 13:27:06 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:27:06 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:27:06 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:27:06 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 13:27:06 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 13:27:06 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 13:27:06 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 13:27:06 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 13:27:06 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 13:27:06 | INFO  | org.example.service.CityService - 🗑️ Deleting 2 cities from country 'null'
2025-04-30 13:27:06 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'null'. Cache invalidated
2025-04-30 13:27:06 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 13:27:06 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:27:06 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 13:27:06 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:27:06 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 13:27:06 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 13:27:06 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 13:27:06 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 13:27:06 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 13:27:06 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: null) to country 'null' (ID: 1)
2025-04-30 13:27:06 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:27:06 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 13:27:56 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 13:27:56 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 13:27:56 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 13:27:56 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:27:56 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:27:56 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:27:56 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:27:56 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:27:56 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 13:27:56 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:27:56 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:27:56 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:27:56 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 13:27:56 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 13:27:56 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 13:27:56 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 13:27:56 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 13:27:56 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 13:27:56 | INFO  | org.example.service.CityService - 🗑️ Deleting 2 cities from country 'null'
2025-04-30 13:27:56 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'null'. Cache invalidated
2025-04-30 13:27:56 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 13:27:56 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:27:56 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 13:27:56 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:27:56 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 13:27:56 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 13:27:56 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 13:27:56 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 13:27:56 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 13:27:56 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: null) to country 'null' (ID: 1)
2025-04-30 13:27:56 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:27:56 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 13:31:31 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 13:31:31 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 13:31:31 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 13:31:31 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 13:31:31 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 13:31:31 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:31:31 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:31:31 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:31:31 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:31:31 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 13:31:31 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:31:31 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:31:31 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:31:31 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 13:31:31 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 13:31:31 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 13:31:31 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 13:31:31 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 13:31:31 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 13:31:31 | INFO  | org.example.service.CityService - 🗑️ Deleting 2 cities from country 'TestCountry'
2025-04-30 13:31:31 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'TestCountry'. Cache invalidated
2025-04-30 13:31:31 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 13:31:31 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:31:31 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 13:31:31 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:31:31 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 13:31:31 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 13:31:31 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 13:31:31 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 13:31:31 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 13:31:31 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: null) to country 'null' (ID: 1)
2025-04-30 13:31:31 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:31:31 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 13:45:15 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 13:45:15 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 13:45:15 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 13:45:15 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 13:45:15 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 13:45:15 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 13:45:15 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:45:15 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:45:15 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:45:15 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:45:15 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 13:45:15 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:45:15 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:45:15 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:45:15 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 13:45:15 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 13:45:15 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 13:45:15 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 13:45:15 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 13:45:15 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 13:45:15 | INFO  | org.example.service.CityService - 🗑️ Deleting 2 cities from country 'TestCountry'
2025-04-30 13:45:15 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'TestCountry'. Cache invalidated
2025-04-30 13:45:15 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 13:45:15 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:45:15 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 13:45:15 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:45:15 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 13:45:15 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 13:45:15 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 13:45:15 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 13:45:15 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 13:45:15 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: null) to country 'null' (ID: 1)
2025-04-30 13:45:15 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:45:15 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 13:46:41 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 13:46:41 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 13:46:41 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 13:46:41 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 13:46:41 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 13:46:41 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 13:46:41 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:46:41 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:46:41 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:46:41 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:46:41 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 13:46:41 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:46:41 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:46:41 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:46:41 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 13:46:41 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 13:46:41 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 13:46:41 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 13:46:41 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 13:46:41 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 13:46:41 | INFO  | org.example.service.CityService - 🗑️ Deleting 2 cities from country 'TestCountry'
2025-04-30 13:46:41 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'TestCountry'. Cache invalidated
2025-04-30 13:46:41 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 13:46:41 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:46:41 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 13:46:41 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:46:41 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 13:46:41 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 13:46:41 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 13:46:41 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 13:46:41 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 13:46:41 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: null) to country 'null' (ID: 1)
2025-04-30 13:46:41 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:46:41 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 13:46:57 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 13:46:57 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 13:46:57 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 13:46:57 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 13:46:57 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 13:46:57 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 13:46:57 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:46:57 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:46:57 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:46:57 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:46:57 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 13:46:57 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:46:57 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:46:57 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:46:57 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 13:46:57 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 13:46:57 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 13:46:57 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 13:46:57 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 13:46:57 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 13:46:57 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 13:46:57 | INFO  | org.example.service.CityService - 🗑️ Deleting 2 cities from country 'TestCountry'
2025-04-30 13:46:57 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'TestCountry'. Cache invalidated
2025-04-30 13:46:57 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 13:46:57 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:46:57 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 13:46:57 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:46:57 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 13:46:57 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 13:46:57 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 13:46:57 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 13:46:57 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 13:46:57 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: null) to country 'null' (ID: 1)
2025-04-30 13:46:57 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:46:57 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 13:47:18 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 13:47:18 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 13:47:18 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 13:47:18 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 13:47:18 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 13:47:18 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 13:47:18 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:47:18 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:47:18 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:47:18 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:47:18 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 13:47:18 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:47:18 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:47:18 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:47:18 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 13:47:18 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 13:47:18 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 13:47:18 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 13:47:18 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 13:47:18 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 13:47:18 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 13:47:18 | INFO  | org.example.service.CityService - 🗑️ Deleting 2 cities from country 'TestCountry'
2025-04-30 13:47:18 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'TestCountry'. Cache invalidated
2025-04-30 13:47:18 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 13:47:18 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:47:18 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 13:47:18 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:47:18 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 13:47:18 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 13:47:18 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 13:47:18 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 13:47:18 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 13:47:18 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: null) to country 'null' (ID: 1)
2025-04-30 13:47:18 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:47:18 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 13:47:40 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 13:47:40 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 13:47:40 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 13:47:40 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 13:47:40 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 13:47:40 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 13:47:40 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:47:40 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:47:40 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:47:40 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:47:40 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 13:47:40 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:47:40 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:47:40 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:47:40 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 13:47:40 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 13:47:40 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 13:47:40 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 13:47:40 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 13:47:40 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 13:47:40 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 13:47:40 | INFO  | org.example.service.CityService - 🗑️ Deleting 2 cities from country 'TestCountry'
2025-04-30 13:47:40 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'TestCountry'. Cache invalidated
2025-04-30 13:47:40 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 13:47:40 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:47:40 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 13:47:40 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:47:40 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 13:47:40 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 13:47:40 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 13:47:40 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 13:47:40 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 13:47:40 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: null) to country 'null' (ID: 1)
2025-04-30 13:47:40 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:47:40 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 13:47:58 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 13:47:58 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 13:47:58 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 13:47:58 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 13:47:58 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 13:47:58 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 13:47:58 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:47:58 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:47:58 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:47:58 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:47:58 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 13:47:58 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:47:58 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:47:58 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:47:58 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 13:47:58 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 13:47:58 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 13:47:58 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 13:47:58 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 13:47:58 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 13:47:58 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 13:47:58 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 13:47:58 | INFO  | org.example.service.CityService - 🗑️ Deleting 2 cities from country 'TestCountry'
2025-04-30 13:47:58 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'TestCountry'. Cache invalidated
2025-04-30 13:47:58 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 13:47:58 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:47:58 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 13:47:58 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:47:58 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 13:47:58 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 13:47:58 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 13:47:58 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 13:47:58 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 13:47:58 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: null) to country 'null' (ID: 1)
2025-04-30 13:47:58 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:47:58 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 13:48:33 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 13:48:33 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 13:48:33 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 13:48:33 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 13:48:33 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 13:48:33 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 13:48:33 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:48:33 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:48:33 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:48:33 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:48:33 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 13:48:33 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:48:33 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:48:33 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:48:33 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 13:48:33 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 13:48:33 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 13:48:33 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 13:48:33 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 13:48:33 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 13:48:33 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 13:48:33 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 13:48:33 | INFO  | org.example.service.CityService - 🗑️ Deleting 2 cities from country 'TestCountry'
2025-04-30 13:48:33 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'TestCountry'. Cache invalidated
2025-04-30 13:48:33 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 13:48:33 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:48:33 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 13:48:33 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:48:33 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 13:48:33 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 13:48:33 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 13:48:33 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 13:48:33 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 13:48:33 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: null) to country 'null' (ID: 1)
2025-04-30 13:48:33 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:48:33 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 13:48:57 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 13:48:57 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 13:48:57 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 13:48:57 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 13:48:57 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 13:48:57 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 13:48:57 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:48:57 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:48:57 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:48:57 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:48:57 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 13:48:57 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:48:57 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:48:57 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:48:57 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 13:48:57 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 13:48:57 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 13:48:57 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 13:48:57 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 13:48:57 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 13:48:57 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 13:48:57 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 13:48:57 | INFO  | org.example.service.CityService - 🗑️ Deleting 2 cities from country 'TestCountry'
2025-04-30 13:48:57 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'TestCountry'. Cache invalidated
2025-04-30 13:48:57 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 13:48:57 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:48:57 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 13:48:57 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:48:57 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 13:48:57 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 13:48:57 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 13:48:57 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 13:48:57 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 13:48:57 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: null) to country 'null' (ID: 1)
2025-04-30 13:48:57 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:48:57 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 13:49:51 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 13:49:51 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 13:49:51 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 13:49:51 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 13:49:51 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 13:49:51 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 13:49:51 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:49:51 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:49:51 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:49:51 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:49:51 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 13:49:51 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:49:51 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:49:51 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:49:51 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 13:49:51 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 13:49:51 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 13:49:51 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 13:49:51 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 13:49:51 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 13:49:51 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 13:49:51 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 13:49:51 | INFO  | org.example.service.CityService - 🗑️ Deleting 2 cities from country 'TestCountry'
2025-04-30 13:49:51 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'TestCountry'. Cache invalidated
2025-04-30 13:49:51 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 13:49:51 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:49:51 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 13:49:51 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:49:51 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 13:49:51 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 13:49:51 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 13:49:51 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 13:49:51 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 13:49:51 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: null) to country 'null' (ID: 1)
2025-04-30 13:49:51 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:49:51 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 13:50:01 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 13:50:01 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 13:50:01 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 13:50:01 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 13:50:01 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 13:50:01 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 13:50:01 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:50:01 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:50:01 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:50:01 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:50:01 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 13:50:01 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:50:01 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:50:01 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:50:01 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 13:50:01 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 13:50:01 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 13:50:01 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 13:50:01 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 13:50:01 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 13:50:01 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 13:50:01 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 13:50:01 | INFO  | org.example.service.CityService - 🗑️ Deleting 2 cities from country 'TestCountry'
2025-04-30 13:50:01 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'TestCountry'. Cache invalidated
2025-04-30 13:50:01 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 13:50:01 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:50:01 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 13:50:01 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:50:01 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 13:50:01 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 13:50:01 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 13:50:01 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 13:50:01 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 13:50:01 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: null) to country 'null' (ID: 1)
2025-04-30 13:50:01 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:50:01 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 13:55:32 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=4m57s495ms).
2025-04-30 13:55:56 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 13:55:56 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 13:55:56 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 13:55:56 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 13:55:56 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 13:55:56 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 13:55:56 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:55:56 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:55:56 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:55:56 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:55:56 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 13:55:56 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 13:55:56 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 13:55:56 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 13:55:56 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 13:55:56 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 13:55:56 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 13:55:56 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 13:55:56 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 13:55:56 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 13:55:56 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 13:55:56 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 13:55:56 | INFO  | org.example.service.CityService - 🗑️ Deleting 2 cities from country 'TestCountry'
2025-04-30 13:55:56 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'TestCountry'. Cache invalidated
2025-04-30 13:55:56 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 13:55:56 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:55:56 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 13:55:56 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 13:55:56 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 13:55:56 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 13:55:56 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 13:55:56 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: null) to country 'null' (ID: 1)
2025-04-30 13:55:56 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 13:55:56 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 14:03:06 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=4m34s521ms).
2025-04-30 14:03:25 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-30 14:03:25 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 14:03:25 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-30 14:03:25 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-30 14:27:02 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 19197 (/Users/snrteftelya/Desktop/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountrySearch)
2025-04-30 14:27:02 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-30 14:27:02 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-30 14:27:02 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 3 JPA repository interfaces.
2025-04-30 14:27:03 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-30 14:27:03 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-30 14:27:03 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-30 14:27:03 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-30 14:27:03 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-30 14:27:03 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 699 ms
2025-04-30 14:27:03 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-30 14:27:03 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-30 14:27:03 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-30 14:27:03 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-30 14:27:03 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-30 14:27:03 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4aeaff64
2025-04-30 14:27:03 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-30 14:27:03 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-30 14:27:04 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 14:27:04 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-30 14:27:04 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-30 14:27:05 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-30 14:27:05 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-30 14:27:05 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.099 seconds (process running for 3.465)
2025-04-30 14:27:46 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-30 14:27:46 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-30 14:27:46 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-30 14:27:46 | INFO  | o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 216 ms
2025-04-30 14:27:53 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String)), args=Berlin
2025-04-30 14:27:53 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        [34mdistinct[0m c1_0.id,
        c1_0.area,
        c1_0.capital,
        c1_0.gdp,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        country c1_0 
    [34mjoin[0m
        city c2_0 
            [34mon[0m c1_0.id=c2_0.country_id 
    [34mwhere[0m
        lower(c2_0.name) [34mlike[0m lower(([36m'%'[0m||?||[36m'%'[0m)) [34mescape[0m [36m''[0m
2025-04-30 14:27:53 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.country_id,
        c1_0.id,
        c1_0.area,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        city c1_0 
    [34mwhere[0m
        c1_0.country_id=?
2025-04-30 14:27:53 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.country_id,
        c1_0.id,
        c1_0.area,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        city c1_0 
    [34mwhere[0m
        c1_0.country_id=?
2025-04-30 14:27:53 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        n1_0.country_id,
        n1_1.id,
        n1_1.[34mlanguage[0m,
        n1_1.name,
        n1_1.religion 
    [34mfrom[0m
        country_nations n1_0 
    [34mjoin[0m
        nation n1_1 
            [34mon[0m n1_1.id=n1_0.nation_id 
    [34mwhere[0m
        n1_0.country_id=?
2025-04-30 14:27:53 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 14:27:53 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-04-30 14:27:53 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-04-30 14:30:51 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String)), args=2025-04-24,*/*
2025-04-30 14:30:51 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String))
2025-04-30 14:30:51 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.LogsController.downloadOrViewLogs(String,String))
2025-04-30 14:30:51 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 2
2025-04-30 14:35:54 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 14:35:54 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 14:35:54 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 14:35:54 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 14:35:54 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 14:35:54 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 14:35:54 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 14:35:54 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 14:35:54 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 14:35:54 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 14:35:54 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 14:35:54 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 14:35:54 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 14:35:54 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 14:35:54 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 14:35:54 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 14:35:54 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 14:35:54 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 14:35:54 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 14:35:54 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 14:35:54 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 14:35:54 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 14:35:54 | INFO  | org.example.service.CityService - 🗑️ Deleting 2 cities from country 'TestCountry'
2025-04-30 14:35:54 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'TestCountry'. Cache invalidated
2025-04-30 14:35:54 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 14:35:54 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 14:35:54 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 14:35:54 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 14:35:54 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 14:35:54 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 14:35:54 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 14:35:54 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 14:35:54 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 14:35:54 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: null) to country 'null' (ID: 1)
2025-04-30 14:35:54 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 14:35:54 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 14:36:16 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 14:36:16 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 14:36:16 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 14:36:16 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 14:36:16 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 14:36:16 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 14:36:16 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 14:36:16 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 14:36:16 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 14:36:16 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 14:36:16 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 14:36:16 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 14:36:16 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 14:36:16 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 14:36:16 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 14:36:16 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 14:36:16 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 14:36:16 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 14:36:16 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 14:36:16 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 14:36:16 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 14:36:16 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 14:36:16 | INFO  | org.example.service.CityService - 🗑️ Deleting 2 cities from country 'TestCountry'
2025-04-30 14:36:16 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'TestCountry'. Cache invalidated
2025-04-30 14:36:16 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 14:36:16 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 14:36:16 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 14:36:16 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 14:36:16 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 14:36:16 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 14:36:16 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 14:36:16 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 14:36:16 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 14:36:16 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: null) to country 'null' (ID: 1)
2025-04-30 14:36:16 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 14:36:16 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 14:41:12 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: null) to country 'null' (ID: 1)
2025-04-30 14:41:12 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 14:41:12 | INFO  | org.example.service.CityService - 🗑️ Deleting 2 cities from country 'TestCountry'
2025-04-30 14:41:12 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'TestCountry'. Cache invalidated
2025-04-30 14:41:12 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 14:41:12 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 14:41:12 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 14:41:12 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 14:41:33 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: null) to country 'null' (ID: 1)
2025-04-30 14:41:33 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 14:41:33 | INFO  | org.example.service.CityService - 🗑️ Deleting 2 cities from country 'TestCountry'
2025-04-30 14:41:33 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'TestCountry'. Cache invalidated
2025-04-30 14:41:33 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 14:41:33 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 14:41:33 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 14:41:33 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 14:42:43 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 14:42:43 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 14:42:43 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 14:42:43 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 14:42:43 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 14:42:43 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 14:42:43 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 14:42:43 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 14:42:43 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 14:42:43 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 14:42:43 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 14:42:43 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 14:42:43 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 14:42:43 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 14:42:43 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 14:42:43 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 14:42:43 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 14:42:43 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 14:42:43 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 14:42:43 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 14:42:43 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 14:42:43 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 14:42:43 | INFO  | org.example.service.CityService - 🗑️ Deleting 2 cities from country 'TestCountry'
2025-04-30 14:42:43 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'TestCountry'. Cache invalidated
2025-04-30 14:42:43 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 14:42:43 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 14:42:43 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 14:42:43 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 14:42:43 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 14:42:43 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 14:42:43 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 14:42:43 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 14:42:43 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 14:42:43 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 14:42:43 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 14:42:43 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 14:43:26 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 14:43:26 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 14:43:26 | INFO  | org.example.service.CityService - 🗑️ Deleting 2 cities from country 'TestCountry'
2025-04-30 14:43:26 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'TestCountry'. Cache invalidated
2025-04-30 14:43:26 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 14:43:26 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 14:43:26 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 14:45:25 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 14:45:25 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 14:45:25 | INFO  | org.example.service.CityService - 🗑️ Deleting 2 cities from country 'TestCountry'
2025-04-30 14:45:25 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'TestCountry'. Cache invalidated
2025-04-30 14:45:25 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 14:45:25 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 14:45:25 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 14:45:37 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 14:45:37 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 14:45:37 | INFO  | org.example.service.CityService - 🗑️ Deleting 2 cities from country 'TestCountry'
2025-04-30 14:45:37 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'TestCountry'. Cache invalidated
2025-04-30 14:45:37 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 14:45:37 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 14:45:52 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 14:45:52 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 14:45:52 | INFO  | org.example.service.CityService - 🗑️ Deleting 2 cities from country 'TestCountry'
2025-04-30 14:45:52 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'TestCountry'. Cache invalidated
2025-04-30 14:46:08 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 14:46:08 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 14:46:08 | INFO  | org.example.service.CityService - 🗑️ Deleting 2 cities from country 'TestCountry'
2025-04-30 14:46:08 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'TestCountry'. Cache invalidated
2025-04-30 14:47:28 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 14:47:28 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 14:47:28 | INFO  | org.example.service.CityService - 🗑️ Deleting 2 cities from country 'TestCountry'
2025-04-30 14:47:28 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'TestCountry'. Cache invalidated
2025-04-30 14:47:44 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 14:47:44 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 14:47:44 | INFO  | org.example.service.CityService - 🗑️ Deleting 2 cities from country 'TestCountry'
2025-04-30 14:47:44 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'TestCountry'. Cache invalidated
2025-04-30 14:49:07 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 14:49:07 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 14:49:07 | INFO  | org.example.service.CityService - 🗑️ Deleting 2 cities from country 'TestCountry'
2025-04-30 14:49:07 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'TestCountry'. Cache invalidated
2025-04-30 14:50:29 | INFO  | org.example.service.CityService - 🗑️ Deleting 2 cities from country 'TestCountry'
2025-04-30 14:50:29 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'TestCountry'. Cache invalidated
2025-04-30 14:51:42 | INFO  | org.example.service.CityService - 🗑️ Deleting 2 cities from country 'TestCountry'
2025-04-30 14:51:42 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'TestCountry'. Cache invalidated
2025-04-30 14:54:30 | INFO  | org.example.service.CityService - 🗑️ Deleting 2 cities from country 'TestCountry'
2025-04-30 14:54:30 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'TestCountry'. Cache invalidated
2025-04-30 14:55:30 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 14:55:30 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 14:55:30 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 14:55:30 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 14:55:30 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 14:55:30 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 14:55:30 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 14:55:30 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 14:55:30 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 14:55:30 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 14:55:30 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 14:55:30 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 14:55:30 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 14:55:30 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 14:55:30 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 14:55:30 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 14:55:30 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 14:55:30 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 14:55:30 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 14:55:30 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 14:55:30 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 14:55:30 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 14:55:30 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 14:55:30 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 14:55:30 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 14:55:30 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 14:55:30 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 14:55:30 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 14:55:30 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 14:55:30 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 14:55:30 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 14:55:30 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 14:55:30 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 14:55:30 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 14:55:41 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 14:55:41 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 14:55:41 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 14:55:41 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 14:55:41 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 14:55:41 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 14:55:41 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 14:55:41 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 14:55:41 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 14:55:41 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 14:55:41 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 14:55:41 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 14:55:41 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 14:55:41 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 14:55:41 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 14:55:41 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 14:55:41 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 14:55:41 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 14:55:41 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 14:55:41 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 14:55:41 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 14:55:41 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 14:55:41 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 14:55:41 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 14:55:41 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 14:55:41 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 14:55:41 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 14:55:41 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 14:55:41 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 14:55:41 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 14:55:41 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 14:55:41 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 14:55:41 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 14:55:41 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 14:55:51 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 14:55:51 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 14:55:51 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 14:55:51 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 14:55:51 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 14:55:51 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 14:55:51 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 14:55:51 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 14:55:51 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 14:55:51 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 14:55:51 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 14:55:51 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 14:55:51 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 14:55:51 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 14:55:51 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 14:55:51 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 14:55:51 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 14:55:51 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 14:55:51 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 14:55:51 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 14:55:51 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 14:55:51 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 14:55:51 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 14:55:51 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 14:55:51 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 14:55:51 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 14:55:51 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 14:55:51 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 14:55:51 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 14:55:51 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 14:55:51 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 14:55:51 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 14:55:51 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 14:55:51 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 14:59:43 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 14:59:43 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 14:59:43 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 14:59:43 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 14:59:43 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 14:59:43 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 14:59:43 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 14:59:43 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 14:59:43 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 14:59:43 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 14:59:43 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 14:59:43 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 14:59:43 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 14:59:43 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 14:59:43 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 14:59:43 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 14:59:43 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 14:59:43 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 14:59:43 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 14:59:43 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 14:59:43 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 14:59:43 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 14:59:43 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 14:59:43 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 14:59:43 | INFO  | org.example.service.CityService - 🗑️ Deleting 1 cities from country 'null'
2025-04-30 14:59:43 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'null'. Cache invalidated
2025-04-30 14:59:43 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 14:59:43 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 14:59:43 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 14:59:43 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 14:59:43 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 14:59:43 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 14:59:43 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 14:59:43 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 14:59:43 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 14:59:43 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 14:59:43 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 14:59:43 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 14:59:43 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: -1000.0, area: 5000.0 km²
2025-04-30 14:59:43 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 14:59:52 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 14:59:52 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 14:59:52 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 14:59:52 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 14:59:52 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 14:59:52 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 14:59:52 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 14:59:52 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 14:59:52 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 14:59:52 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 14:59:52 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 14:59:52 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 14:59:52 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 14:59:52 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 14:59:52 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 14:59:52 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 14:59:52 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 14:59:52 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 14:59:52 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 14:59:52 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 14:59:52 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 14:59:52 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 14:59:52 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 14:59:52 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 14:59:52 | INFO  | org.example.service.CityService - 🗑️ Deleting 1 cities from country 'null'
2025-04-30 14:59:52 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'null'. Cache invalidated
2025-04-30 14:59:52 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 14:59:52 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 14:59:52 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 14:59:52 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 14:59:52 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 14:59:52 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 14:59:52 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 14:59:52 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 14:59:52 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 14:59:52 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 14:59:52 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 14:59:52 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 14:59:52 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: -1000.0, area: 5000.0 km²
2025-04-30 14:59:52 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:00:25 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 15:00:25 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 15:00:25 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 15:00:25 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:00:25 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:00:25 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:00:25 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:00:25 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:00:25 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:00:25 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:00:25 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 15:00:25 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:00:25 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:00:25 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:00:25 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:00:25 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 15:00:25 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:00:25 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 15:00:25 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 15:00:25 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 15:00:25 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 15:00:25 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 15:00:25 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:00:25 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:00:25 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 15:00:25 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:00:25 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:00:25 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:00:25 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 15:00:25 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:00:25 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:00:25 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:00:25 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:00:26 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 15:00:49 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 15:00:49 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 15:00:49 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 15:00:49 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:00:49 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:00:49 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:00:49 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:00:49 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:00:49 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:00:49 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:00:49 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 15:00:49 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:00:49 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:00:49 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:00:49 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:00:49 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 15:00:49 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:00:49 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 15:00:49 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 15:00:49 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 15:00:49 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 15:00:49 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 15:00:49 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:00:49 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:00:49 | INFO  | org.example.service.CityService - 🗑️ Deleting 1 cities from country 'null'
2025-04-30 15:00:49 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'null'. Cache invalidated
2025-04-30 15:00:49 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:00:49 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:00:49 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 15:00:49 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:00:49 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:00:49 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:00:49 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 15:00:49 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:00:49 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:00:49 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:00:49 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:00:49 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 15:00:49 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: -1000.0, area: 5000.0 km²
2025-04-30 15:00:49 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:01:35 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 15:01:35 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 15:01:35 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 15:01:35 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:01:35 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:01:35 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:01:35 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:01:35 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:01:35 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:01:35 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:01:35 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 15:01:35 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:01:35 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:01:35 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:01:35 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:01:35 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 15:01:35 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:01:35 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 15:01:35 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 15:01:35 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 15:01:35 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 15:01:35 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 15:01:35 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:01:35 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:01:35 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 15:01:35 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:01:35 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:01:35 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:01:35 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 15:01:35 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:01:35 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:01:35 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:01:35 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:01:35 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 15:02:06 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 15:02:06 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 15:02:06 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 15:02:06 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:02:06 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:02:06 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:02:06 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:02:06 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:02:06 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:02:06 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:02:06 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 15:02:06 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:02:06 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:02:06 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:02:06 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:02:06 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 15:02:06 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:02:06 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 15:02:06 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 15:02:06 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 15:02:06 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 15:02:06 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 15:02:06 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:02:06 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:02:06 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 15:02:06 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:02:06 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:02:06 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:02:06 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 15:02:06 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:02:06 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:02:06 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:02:06 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:02:06 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 15:02:39 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 15:02:39 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 15:02:39 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 15:02:39 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:02:39 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:02:39 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:02:39 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:02:39 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:02:39 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:02:39 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:02:39 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 15:02:39 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:02:39 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:02:39 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:02:39 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:02:39 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 15:02:39 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:02:39 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 15:02:39 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 15:02:39 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 15:02:39 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 15:02:39 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 15:02:39 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:02:39 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:02:39 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 15:02:39 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:02:39 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:02:39 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:02:39 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 15:02:39 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:02:39 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:02:39 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:02:39 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:02:39 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 15:07:57 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 15:07:57 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 15:07:57 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 15:07:57 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:07:57 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:07:57 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:07:57 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:07:57 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:07:57 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:07:57 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:07:57 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 15:07:57 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:07:57 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:07:57 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:07:57 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:07:57 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 15:07:57 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:07:57 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 15:07:57 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 15:07:57 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 15:07:57 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 15:07:57 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 15:07:57 | WARN  | org.example.service.CityService - Invalid cache entry for key: allCities
2025-04-30 15:07:57 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:07:57 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:07:57 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:07:57 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 15:07:57 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:07:57 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:07:57 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:07:57 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 15:07:57 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:07:57 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: -100.0, area: 0.0 km²
2025-04-30 15:07:57 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:07:57 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:07:57 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:07:57 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:07:57 | INFO  | org.example.service.CityService - 🗑️ Deleting 0 cities from country 'null'
2025-04-30 15:07:57 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'null'. Cache invalidated
2025-04-30 15:07:57 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 15:07:57 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Minsk', population: 2000000.0, area: 600.0 km²
2025-04-30 15:07:57 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:08:06 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 15:08:06 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 15:08:06 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 15:08:06 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:08:06 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:08:06 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:08:06 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:08:06 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:08:06 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:08:06 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:08:06 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 15:08:06 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:08:06 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:08:06 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:08:06 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:08:06 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 15:08:06 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:08:06 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 15:08:06 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 15:08:06 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 15:08:06 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 15:08:06 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 15:08:06 | WARN  | org.example.service.CityService - Invalid cache entry for key: allCities
2025-04-30 15:08:06 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:08:06 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:08:06 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:08:06 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 15:08:06 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:08:06 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:08:06 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:08:06 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 15:08:06 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:08:06 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: -100.0, area: 0.0 km²
2025-04-30 15:08:06 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:08:06 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:08:06 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:08:06 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:08:06 | INFO  | org.example.service.CityService - 🗑️ Deleting 0 cities from country 'null'
2025-04-30 15:08:06 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'null'. Cache invalidated
2025-04-30 15:08:06 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 15:08:06 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Minsk', population: 2000000.0, area: 600.0 km²
2025-04-30 15:08:06 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:08:47 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 15:08:47 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 15:08:47 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 15:08:47 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:08:47 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:08:47 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:08:47 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:08:47 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:08:47 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:08:47 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:08:47 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 15:08:47 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:08:47 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:08:47 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:08:47 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:08:47 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 15:08:47 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:08:47 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 15:08:47 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 15:08:47 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 15:08:47 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 15:08:47 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 15:08:47 | WARN  | org.example.service.CityService - Invalid cache entry for key: allCities
2025-04-30 15:08:47 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:08:47 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:08:47 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:08:47 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 15:08:47 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:08:47 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:08:47 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:08:47 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 15:08:47 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:08:47 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: -100.0, area: 0.0 km²
2025-04-30 15:08:47 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:08:47 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:08:47 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:08:47 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:08:47 | INFO  | org.example.service.CityService - 🗑️ Deleting 0 cities from country 'null'
2025-04-30 15:08:47 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'null'. Cache invalidated
2025-04-30 15:08:47 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 15:08:47 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Minsk', population: 2000000.0, area: 600.0 km²
2025-04-30 15:08:47 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:09:09 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:09:09 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:09:09 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:09:09 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 15:09:09 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 15:09:09 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 15:09:09 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:09:09 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:09:09 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:09:09 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:09:09 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:09:09 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:09:09 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:09:09 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:09:09 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:09:09 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 15:09:09 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:09:09 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:09:09 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:09:09 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:09:09 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 15:09:09 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:09:09 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 15:09:09 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 15:09:09 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 15:09:09 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 15:09:09 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 15:09:09 | WARN  | org.example.service.CityService - Invalid cache entry for key: allCities
2025-04-30 15:09:09 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:09:09 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:09:09 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:09:09 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 15:09:09 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:09:09 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:09:09 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:09:09 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 15:09:09 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:09:09 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: -100.0, area: 0.0 km²
2025-04-30 15:09:09 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:09:09 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:09:09 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:09:09 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:09:09 | INFO  | org.example.service.CityService - 🗑️ Deleting 0 cities from country 'null'
2025-04-30 15:09:09 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'null'. Cache invalidated
2025-04-30 15:09:09 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 15:09:09 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Minsk', population: 2000000.0, area: 600.0 km²
2025-04-30 15:09:09 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:10:01 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:10:01 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:10:01 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:10:01 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 15:10:01 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 15:10:01 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 15:10:01 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:10:01 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:10:01 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:10:01 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:10:01 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:10:01 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:10:01 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:10:01 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:10:01 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:10:01 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 15:10:01 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:10:01 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:10:01 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:10:01 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:10:01 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 15:10:01 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:10:01 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 15:10:01 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 15:10:01 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 15:10:01 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 15:10:01 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 15:10:01 | WARN  | org.example.service.CityService - Invalid cache entry for key: allCities
2025-04-30 15:10:01 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:10:01 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:10:01 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:10:01 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 15:10:01 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:10:01 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:10:01 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:10:01 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 15:10:01 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:10:01 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: -100.0, area: 0.0 km²
2025-04-30 15:10:01 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:10:01 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:10:01 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:10:01 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:10:01 | INFO  | org.example.service.CityService - 🗑️ Deleting 0 cities from country 'null'
2025-04-30 15:10:01 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'null'. Cache invalidated
2025-04-30 15:10:01 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 15:10:01 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Minsk', population: 2000000.0, area: 600.0 km²
2025-04-30 15:10:01 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:11:01 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:11:01 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:11:01 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:11:01 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 15:11:01 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 15:11:01 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 15:11:01 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:11:01 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:11:01 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:11:01 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:11:01 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:11:01 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:11:01 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:11:01 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:11:01 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:11:01 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 15:11:01 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:11:01 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:11:01 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:11:01 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:11:01 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 15:11:01 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:11:01 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 15:11:01 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 15:11:01 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 15:11:01 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 15:11:01 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 15:11:01 | WARN  | org.example.service.CityService - Invalid cache entry for key: allCities
2025-04-30 15:11:01 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:11:01 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:11:01 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:11:01 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 15:11:01 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:11:01 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:11:01 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:11:01 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 15:11:01 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:11:01 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: -100.0, area: 0.0 km²
2025-04-30 15:11:01 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:11:01 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:11:01 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:11:01 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:11:01 | INFO  | org.example.service.CityService - 🗑️ Deleting 0 cities from country 'null'
2025-04-30 15:11:01 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'null'. Cache invalidated
2025-04-30 15:11:01 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 15:11:01 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Minsk', population: 2000000.0, area: 600.0 km²
2025-04-30 15:11:01 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:11:24 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:11:24 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:11:24 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:11:24 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 15:11:24 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 15:11:24 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 15:11:24 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:11:24 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:11:24 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:11:24 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:11:24 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:11:24 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:11:24 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:11:24 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:11:24 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:11:24 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 15:11:24 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:11:24 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:11:24 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:11:24 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:11:24 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 15:11:24 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:11:24 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 15:11:24 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 15:11:24 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 15:11:24 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 15:11:24 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 15:11:24 | WARN  | org.example.service.CityService - Invalid cache entry for key: allCities
2025-04-30 15:11:24 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:11:24 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:11:24 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:11:24 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 15:11:24 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:11:24 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:11:24 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:11:24 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 15:11:24 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:11:24 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: -100.0, area: 0.0 km²
2025-04-30 15:11:24 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:11:24 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:11:24 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:11:24 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:11:24 | INFO  | org.example.service.CityService - 🗑️ Deleting 0 cities from country 'null'
2025-04-30 15:11:24 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'null'. Cache invalidated
2025-04-30 15:11:24 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 15:11:24 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Minsk', population: 2000000.0, area: 600.0 km²
2025-04-30 15:11:24 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:14:24 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:14:24 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:14:24 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:14:24 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 15:14:24 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 15:14:24 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 15:14:24 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:14:24 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:14:24 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:14:24 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:14:24 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:14:24 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:14:24 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:14:24 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:14:24 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:14:24 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 15:14:24 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:14:24 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:14:24 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:14:24 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:14:24 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 15:14:24 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:14:24 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 15:14:24 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 15:14:24 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 15:14:24 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 15:14:24 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 15:14:24 | WARN  | org.example.service.CityService - Invalid cache entry for key: allCities
2025-04-30 15:14:24 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:14:24 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:14:24 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:14:24 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 15:14:24 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:14:24 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:14:24 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:14:24 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 15:14:24 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:14:24 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: -100.0, area: 0.0 km²
2025-04-30 15:14:24 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:14:24 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:14:24 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:14:24 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:14:24 | INFO  | org.example.service.CityService - 🗑️ Deleting 0 cities from country 'null'
2025-04-30 15:14:24 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'null'. Cache invalidated
2025-04-30 15:14:24 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:14:24 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 15:14:24 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Minsk', population: 2000000.0, area: 600.0 km²
2025-04-30 15:14:24 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:14:45 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:14:45 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:14:45 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:14:45 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 15:14:45 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 15:14:45 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 15:14:45 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:14:45 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:14:45 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:14:45 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:14:45 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:14:45 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:14:45 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:14:45 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:14:45 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:14:45 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 15:14:45 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:14:45 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:14:45 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:14:45 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:14:45 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:14:45 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 15:14:45 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:14:45 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 15:14:45 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 15:14:45 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 15:14:45 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 15:14:45 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 15:14:45 | WARN  | org.example.service.CityService - Invalid cache entry for key: allCities
2025-04-30 15:14:45 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:14:45 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:14:45 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:14:45 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 15:14:45 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:14:45 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:14:45 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:14:45 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 15:14:45 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:14:45 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: -100.0, area: 0.0 km²
2025-04-30 15:14:45 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:14:45 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:14:45 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:14:45 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:14:45 | INFO  | org.example.service.CityService - 🗑️ Deleting 0 cities from country 'null'
2025-04-30 15:14:45 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'null'. Cache invalidated
2025-04-30 15:14:45 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:14:45 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 15:14:45 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Minsk', population: 2000000.0, area: 600.0 km²
2025-04-30 15:14:45 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:15:20 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:15:20 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:15:20 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:15:20 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 15:15:20 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 15:15:20 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 15:15:20 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:15:20 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:15:20 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:15:20 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:15:20 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:15:20 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:15:20 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:15:20 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:15:20 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:15:20 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 15:15:20 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:15:20 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:15:20 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:15:20 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:15:20 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:15:20 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 15:15:20 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:15:20 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 15:15:20 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 15:15:20 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 15:15:20 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 15:15:20 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 15:15:21 | WARN  | org.example.service.CityService - Invalid cache entry for key: allCities
2025-04-30 15:15:21 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:15:21 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:15:21 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:15:21 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 15:15:21 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:15:21 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:15:21 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:15:21 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 15:15:21 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:15:21 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: -100.0, area: 0.0 km²
2025-04-30 15:15:21 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:15:21 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:15:21 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:15:21 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:15:21 | INFO  | org.example.service.CityService - 🗑️ Deleting 0 cities from country 'null'
2025-04-30 15:15:21 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'null'. Cache invalidated
2025-04-30 15:15:21 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:15:21 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 15:15:21 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Minsk', population: 2000000.0, area: 600.0 km²
2025-04-30 15:15:21 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:15:50 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:15:50 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:15:50 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:15:50 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 15:15:50 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 15:15:50 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 15:15:50 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:15:50 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:15:50 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:15:50 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:15:50 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:15:50 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:15:50 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:15:50 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:15:50 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:15:50 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 15:15:50 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:15:50 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:15:50 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:15:50 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:15:50 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:15:50 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 15:15:50 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:15:50 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 15:15:50 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 15:15:50 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 15:15:50 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 15:15:50 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 15:15:50 | WARN  | org.example.service.CityService - Invalid cache entry for key: allCities
2025-04-30 15:15:50 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:15:50 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:15:50 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:15:50 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 15:15:50 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:15:50 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:15:50 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:15:50 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 15:15:50 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:15:50 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: -100.0, area: 0.0 km²
2025-04-30 15:15:50 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:15:50 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:15:50 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:15:50 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:15:50 | INFO  | org.example.service.CityService - 🗑️ Deleting 0 cities from country 'null'
2025-04-30 15:15:50 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'null'. Cache invalidated
2025-04-30 15:15:50 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:15:50 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 15:15:50 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Minsk', population: 2000000.0, area: 600.0 km²
2025-04-30 15:15:50 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:17:24 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:17:24 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:17:24 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:17:24 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 15:17:24 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 15:17:24 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 15:17:24 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:17:24 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:17:24 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:17:24 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:17:24 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:17:24 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:17:24 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:17:24 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:17:24 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:17:24 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 15:17:24 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:17:24 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:17:24 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:17:24 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:17:24 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:17:24 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 15:17:24 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:17:24 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 15:17:24 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 15:17:24 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 15:17:24 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 15:17:24 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 15:17:24 | WARN  | org.example.service.CityService - Invalid cache entry for key: allCities
2025-04-30 15:17:24 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:17:24 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:17:24 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:17:24 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 15:17:24 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:17:24 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:17:24 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:17:24 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:17:24 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:17:24 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 15:17:24 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:17:24 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: -100.0, area: 0.0 km²
2025-04-30 15:17:24 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:17:24 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:17:24 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:17:24 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:17:24 | INFO  | org.example.service.CityService - 🗑️ Deleting 0 cities from country 'null'
2025-04-30 15:17:24 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'null'. Cache invalidated
2025-04-30 15:17:24 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:17:24 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 15:17:24 | INFO  | org.example.service.CityService - ➕ Added city 'Brest' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:17:24 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:17:24 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Minsk', population: 2000000.0, area: 600.0 km²
2025-04-30 15:17:24 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:17:44 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:17:44 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:17:44 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:17:44 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 15:17:44 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 15:17:44 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 15:17:44 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:17:44 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:17:44 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:17:44 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:17:44 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:17:44 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:17:44 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:17:44 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:17:44 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:17:44 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 15:17:44 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:17:44 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:17:44 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:17:44 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:17:44 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:17:44 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 15:17:44 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:17:44 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 15:17:44 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 15:17:44 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 15:17:44 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 15:17:44 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 15:17:44 | WARN  | org.example.service.CityService - Invalid cache entry for key: allCities
2025-04-30 15:17:44 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:17:44 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:17:44 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:17:44 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 15:17:44 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:17:44 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:17:44 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:17:44 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:17:44 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:17:44 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 15:17:44 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:17:44 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: -100.0, area: 0.0 km²
2025-04-30 15:17:44 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:17:44 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:17:44 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:17:44 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:17:44 | INFO  | org.example.service.CityService - 🗑️ Deleting 0 cities from country 'null'
2025-04-30 15:17:44 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'null'. Cache invalidated
2025-04-30 15:17:44 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:17:44 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 15:17:44 | INFO  | org.example.service.CityService - ➕ Added city 'Brest' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:17:44 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:17:44 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Minsk', population: 2000000.0, area: 600.0 km²
2025-04-30 15:17:44 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:19:20 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:19:20 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:19:20 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:19:20 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 15:19:20 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 15:19:20 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 15:19:20 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:19:20 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:19:20 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:19:20 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:19:20 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:19:20 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:19:20 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:19:20 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:19:20 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:19:20 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 15:19:20 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:19:20 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:19:20 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:19:20 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:19:20 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:19:20 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 15:19:20 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:19:20 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 15:19:20 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 15:19:20 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 15:19:20 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 15:19:20 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 15:19:21 | WARN  | org.example.service.CityService - Invalid cache entry for key: allCities
2025-04-30 15:19:21 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:19:21 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:19:21 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:19:21 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 15:19:21 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:19:21 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:19:21 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:19:21 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:19:21 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:19:21 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 15:19:21 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:19:21 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: -100.0, area: 0.0 km²
2025-04-30 15:19:21 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:19:21 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:19:21 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:19:21 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:19:21 | INFO  | org.example.service.CityService - 🗑️ Deleting 0 cities from country 'null'
2025-04-30 15:19:21 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'null'. Cache invalidated
2025-04-30 15:19:21 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:19:21 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 15:19:21 | INFO  | org.example.service.CityService - ➕ Added city 'Brest' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:19:21 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:19:21 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Minsk', population: 2000000.0, area: 600.0 km²
2025-04-30 15:19:21 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:20:47 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:20:47 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:20:47 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:20:47 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 15:20:47 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 15:20:47 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 15:20:47 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:20:47 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:20:47 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:20:47 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:20:47 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:20:47 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:20:47 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:20:47 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:20:47 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:20:47 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 15:20:47 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:20:47 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:20:47 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:20:47 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:20:47 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:20:47 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 15:20:47 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:20:47 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 15:20:47 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 15:20:47 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 15:20:47 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 15:20:47 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 15:20:47 | WARN  | org.example.service.CityService - Invalid cache entry for key: allCities
2025-04-30 15:20:47 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:20:47 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:20:47 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:20:47 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 15:20:47 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:20:47 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:20:47 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:20:47 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:20:47 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:20:47 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 15:20:47 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:20:47 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: -100.0, area: 0.0 km²
2025-04-30 15:20:47 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:20:47 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:20:47 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:20:47 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:20:47 | INFO  | org.example.service.CityService - 🗑️ Deleting 0 cities from country 'null'
2025-04-30 15:20:47 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'null'. Cache invalidated
2025-04-30 15:20:47 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:20:47 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 15:20:47 | INFO  | org.example.service.CityService - ➕ Added city 'Brest' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:20:47 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:20:47 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Minsk', population: 2000000.0, area: 600.0 km²
2025-04-30 15:20:47 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:21:14 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:21:14 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:21:14 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:21:14 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 15:21:14 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 15:21:14 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 15:21:14 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:21:14 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:21:14 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:21:14 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:21:14 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:21:14 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:21:14 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:21:14 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:21:14 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:21:14 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 15:21:14 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:21:14 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:21:14 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:21:14 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:21:14 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:21:14 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 15:21:14 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:21:14 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 15:21:14 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 15:21:14 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 15:21:14 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 15:21:14 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 15:21:14 | WARN  | org.example.service.CityService - Invalid cache entry for key: allCities
2025-04-30 15:21:14 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:21:14 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:21:14 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:21:14 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 15:21:14 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:21:14 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:21:14 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:21:14 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:21:14 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:21:14 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 15:21:14 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:21:14 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: -100.0, area: 0.0 km²
2025-04-30 15:21:14 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:21:14 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:21:14 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:21:14 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:21:14 | INFO  | org.example.service.CityService - 🗑️ Deleting 0 cities from country 'null'
2025-04-30 15:21:14 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'null'. Cache invalidated
2025-04-30 15:21:14 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:21:14 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 15:21:14 | INFO  | org.example.service.CityService - ➕ Added city 'Brest' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:21:14 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:21:14 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Minsk', population: 2000000.0, area: 600.0 km²
2025-04-30 15:21:14 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:22:48 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:22:48 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:22:48 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:22:48 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 15:22:48 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 15:22:48 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 15:22:48 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:22:48 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:22:48 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:22:48 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:22:48 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:22:48 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:22:48 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:22:48 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:22:48 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:22:48 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 15:22:48 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:22:48 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:22:48 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:22:48 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:22:48 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:22:48 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 15:22:48 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:22:48 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 15:22:48 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 15:22:48 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 15:22:48 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 15:22:48 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 15:22:48 | WARN  | org.example.service.CityService - Invalid cache entry for key: allCities
2025-04-30 15:22:48 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:22:48 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:22:48 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:22:48 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 15:22:48 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:22:48 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:22:48 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:22:48 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:22:48 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:22:48 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 15:22:48 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:22:48 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: -100.0, area: 0.0 km²
2025-04-30 15:22:48 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:22:48 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:22:48 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:22:48 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:22:48 | INFO  | org.example.service.CityService - 🗑️ Deleting 0 cities from country 'null'
2025-04-30 15:22:48 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'null'. Cache invalidated
2025-04-30 15:22:48 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:22:48 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 15:22:48 | INFO  | org.example.service.CityService - ➕ Added city 'Brest' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:22:48 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:22:48 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Minsk', population: 2000000.0, area: 600.0 km²
2025-04-30 15:22:48 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:27:35 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:27:35 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:27:35 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:27:35 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 15:27:35 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 15:27:35 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 15:27:35 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:27:35 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:27:35 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:27:35 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:27:35 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:27:35 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:27:35 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:27:35 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:27:35 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:27:35 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 15:27:35 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:27:35 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:27:35 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:27:35 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:27:35 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:27:35 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 15:27:35 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:27:35 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 15:27:35 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 15:27:35 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 15:27:35 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 15:27:35 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 15:27:35 | WARN  | org.example.service.CityService - Invalid cache entry for key: allCities
2025-04-30 15:27:35 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:27:35 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:27:35 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:27:35 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 15:27:35 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:27:35 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:27:35 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:27:35 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:27:35 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:27:35 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 15:27:35 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:27:35 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: -100.0, area: 0.0 km²
2025-04-30 15:27:35 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:27:35 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:27:35 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:27:35 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:27:35 | INFO  | org.example.service.CityService - 🗑️ Deleting 0 cities from country 'null'
2025-04-30 15:27:35 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'null'. Cache invalidated
2025-04-30 15:27:35 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:27:35 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 15:27:35 | INFO  | org.example.service.CityService - ➕ Added city 'Brest' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:27:35 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:27:35 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Minsk', population: 2000000.0, area: 600.0 km²
2025-04-30 15:27:35 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:28:00 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:28:00 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:28:00 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:28:00 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 15:28:00 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 15:28:00 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 15:28:00 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:28:00 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:28:00 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:28:00 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:28:00 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:28:00 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:28:00 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:28:00 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:28:00 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:28:00 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 15:28:00 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:28:00 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:28:00 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:28:00 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:28:00 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:28:00 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 15:28:00 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:28:00 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 15:28:00 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 15:28:00 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 15:28:00 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 15:28:00 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 15:28:00 | WARN  | org.example.service.CityService - Invalid cache entry for key: allCities
2025-04-30 15:28:00 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:28:00 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:28:00 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:28:00 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 15:28:00 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:28:00 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:28:00 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:28:00 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:28:00 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:28:00 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 15:28:00 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:28:00 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: -100.0, area: 0.0 km²
2025-04-30 15:28:00 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:28:00 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:28:00 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:28:00 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:28:00 | INFO  | org.example.service.CityService - 🗑️ Deleting 0 cities from country 'null'
2025-04-30 15:28:00 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'null'. Cache invalidated
2025-04-30 15:28:00 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:28:00 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 15:28:00 | INFO  | org.example.service.CityService - ➕ Added city 'Brest' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:28:00 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:28:00 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Minsk', population: 2000000.0, area: 600.0 km²
2025-04-30 15:28:00 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:28:27 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:28:27 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:28:27 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:28:27 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 15:28:27 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 15:28:27 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 15:28:27 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:28:27 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:28:27 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:28:27 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:28:27 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:28:27 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:28:27 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:28:27 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:28:27 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:28:27 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 15:28:27 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:28:27 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:28:27 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:28:27 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:28:27 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:28:27 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 15:28:27 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:28:27 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 15:28:27 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 15:28:27 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 15:28:27 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 15:28:27 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 15:28:28 | WARN  | org.example.service.CityService - Invalid cache entry for key: allCities
2025-04-30 15:28:28 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:28:28 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:28:28 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:28:28 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 15:28:28 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:28:28 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:28:28 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:28:28 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:28:28 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:28:28 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 15:28:28 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:28:28 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: -100.0, area: 0.0 km²
2025-04-30 15:28:28 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:28:28 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:28:28 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:28:28 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:28:28 | INFO  | org.example.service.CityService - 🗑️ Deleting 0 cities from country 'null'
2025-04-30 15:28:28 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'null'. Cache invalidated
2025-04-30 15:28:28 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:28:28 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 15:28:28 | INFO  | org.example.service.CityService - ➕ Added city 'Brest' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:28:28 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:28:28 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Minsk', population: 2000000.0, area: 600.0 km²
2025-04-30 15:28:28 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:28:47 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:28:47 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:28:47 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:28:47 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 15:28:47 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 15:28:47 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 15:28:47 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:28:47 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:28:47 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:28:47 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:28:47 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:28:47 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:28:47 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:28:47 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:28:47 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:28:47 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 15:28:47 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:28:47 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:28:47 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:28:47 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:28:47 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:28:47 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 15:28:47 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:28:47 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 15:28:47 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 15:28:47 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 15:28:47 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 15:28:47 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 15:28:47 | WARN  | org.example.service.CityService - Invalid cache entry for key: allCities
2025-04-30 15:28:47 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:28:47 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:28:47 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:28:47 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 15:28:47 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:28:47 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:28:47 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:28:47 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:28:47 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:28:47 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 15:28:47 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:28:47 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: -100.0, area: 0.0 km²
2025-04-30 15:28:47 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:28:47 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:28:47 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:28:47 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:28:47 | INFO  | org.example.service.CityService - 🗑️ Deleting 0 cities from country 'null'
2025-04-30 15:28:47 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'null'. Cache invalidated
2025-04-30 15:28:47 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:28:47 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 15:28:47 | INFO  | org.example.service.CityService - ➕ Added city 'Brest' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:28:47 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:28:47 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Minsk', population: 2000000.0, area: 600.0 km²
2025-04-30 15:28:47 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:31:52 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:31:52 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:31:52 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:31:52 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 15:31:52 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 15:31:52 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 15:31:52 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:31:52 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:31:52 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:31:52 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:31:52 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:31:52 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:31:52 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:31:52 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:31:52 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:31:52 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 15:31:52 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:31:52 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:31:52 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:31:52 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:31:52 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:31:52 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 15:31:52 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:31:52 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 15:31:52 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 15:31:52 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 15:31:52 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 15:31:52 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 15:31:52 | WARN  | org.example.service.CityService - Invalid cache entry for key: allCities
2025-04-30 15:31:52 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:31:52 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:31:52 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:31:52 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 15:31:52 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:31:52 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:31:52 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:31:52 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:31:52 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:31:52 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 15:31:52 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:31:52 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: -100.0, area: 0.0 km²
2025-04-30 15:31:52 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:31:52 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:31:52 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:31:52 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:31:52 | INFO  | org.example.service.CityService - 🗑️ Deleting 0 cities from country 'null'
2025-04-30 15:31:52 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'null'. Cache invalidated
2025-04-30 15:31:52 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:31:52 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 15:31:52 | INFO  | org.example.service.CityService - ➕ Added city 'Brest' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:31:52 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:31:52 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Minsk', population: 2000000.0, area: 600.0 km²
2025-04-30 15:31:52 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:33:15 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:33:15 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:33:15 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:33:15 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 15:33:15 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 15:33:15 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 15:33:15 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:33:15 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:33:15 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:33:15 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:33:15 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:33:15 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:33:15 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:33:15 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:33:15 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:33:15 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 15:33:15 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:33:15 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:33:15 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:33:15 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:33:15 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:33:15 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 15:33:15 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:33:15 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 15:33:15 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 15:33:15 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 15:33:15 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 15:33:15 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 15:33:15 | WARN  | org.example.service.CityService - Invalid cache entry for key: allCities
2025-04-30 15:33:15 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:33:15 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:33:15 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:33:15 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 15:33:15 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:33:15 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:33:15 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:33:15 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:33:15 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:33:15 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 15:33:15 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:33:15 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: -100.0, area: 0.0 km²
2025-04-30 15:33:15 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:33:15 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:33:15 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:33:15 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:33:15 | INFO  | org.example.service.CityService - 🗑️ Deleting 0 cities from country 'null'
2025-04-30 15:33:15 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'null'. Cache invalidated
2025-04-30 15:33:15 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:33:15 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 15:33:15 | INFO  | org.example.service.CityService - ➕ Added city 'Brest' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:33:15 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:33:15 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Minsk', population: 2000000.0, area: 600.0 km²
2025-04-30 15:33:15 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:34:57 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:34:57 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:34:57 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:34:57 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 15:34:57 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 15:34:57 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 15:34:57 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:34:57 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:34:57 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:34:57 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:34:57 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:34:57 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:34:57 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:34:57 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:34:57 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:34:57 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 15:34:57 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:34:57 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:34:57 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:34:57 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:34:57 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:34:57 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 15:34:57 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:34:57 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 15:34:57 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 15:34:57 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 15:34:57 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 15:34:57 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 15:34:57 | WARN  | org.example.service.CityService - Invalid cache entry for key: allCities
2025-04-30 15:34:57 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:34:57 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:34:57 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:34:57 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 15:34:57 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:34:57 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:34:57 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:34:57 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:34:57 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:34:57 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 15:34:57 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:34:57 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: -100.0, area: 0.0 km²
2025-04-30 15:34:57 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:34:57 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:34:57 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:34:57 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:34:57 | INFO  | org.example.service.CityService - 🗑️ Deleting 0 cities from country 'null'
2025-04-30 15:34:57 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'null'. Cache invalidated
2025-04-30 15:34:57 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:34:57 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 15:34:57 | INFO  | org.example.service.CityService - ➕ Added city 'Brest' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:34:57 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:34:57 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Minsk', population: 2000000.0, area: 600.0 km²
2025-04-30 15:34:57 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:37:14 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:37:14 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:37:14 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:37:14 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 15:37:14 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 15:37:14 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 15:37:14 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:37:14 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:37:14 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:37:14 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:37:14 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:37:14 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:37:14 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:37:14 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:37:14 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:37:14 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 15:37:14 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:37:14 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:37:14 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:37:14 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:37:14 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:37:14 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 15:37:14 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:37:14 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 15:37:14 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 15:37:14 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 15:37:14 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 15:37:14 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 15:37:14 | WARN  | org.example.service.CityService - Invalid cache entry for key: allCities
2025-04-30 15:37:14 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:37:14 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:37:14 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:37:14 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 15:37:14 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:37:14 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:37:14 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:37:14 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:37:14 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:37:14 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 15:37:14 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:37:14 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: -100.0, area: 0.0 km²
2025-04-30 15:37:14 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:37:14 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:37:14 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:37:14 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:37:14 | INFO  | org.example.service.CityService - 🗑️ Deleting 0 cities from country 'null'
2025-04-30 15:37:14 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'null'. Cache invalidated
2025-04-30 15:37:14 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:37:14 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 15:37:14 | INFO  | org.example.service.CityService - ➕ Added city 'Brest' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:37:14 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:37:14 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Minsk', population: 2000000.0, area: 600.0 km²
2025-04-30 15:37:14 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:38:07 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:38:07 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:38:07 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:38:07 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 15:38:07 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 15:38:07 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 15:38:07 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:38:07 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:38:07 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:38:07 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:38:07 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:38:07 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:38:07 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:38:07 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:38:07 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:38:07 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 15:38:07 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:38:07 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:38:07 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:38:07 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:38:07 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:38:07 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 15:38:07 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:38:07 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 15:38:07 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 15:38:07 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 15:38:07 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 15:38:07 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 15:38:07 | WARN  | org.example.service.CityService - Invalid cache entry for key: allCities
2025-04-30 15:38:07 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:38:07 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:38:07 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:38:07 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 15:38:07 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:38:07 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:38:07 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:38:07 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:38:07 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:38:07 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 15:38:07 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:38:07 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: -100.0, area: 0.0 km²
2025-04-30 15:38:07 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:38:07 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:38:07 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:38:07 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:38:07 | INFO  | org.example.service.CityService - 🗑️ Deleting 0 cities from country 'null'
2025-04-30 15:38:07 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'null'. Cache invalidated
2025-04-30 15:38:07 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:38:07 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 15:38:07 | INFO  | org.example.service.CityService - ➕ Added city 'Brest' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:38:07 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:38:07 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Minsk', population: 2000000.0, area: 600.0 km²
2025-04-30 15:38:07 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:38:58 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:38:58 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:38:58 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:38:58 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 15:38:58 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 15:38:58 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 15:38:58 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:38:58 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:38:58 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:38:58 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:38:58 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:38:58 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:38:58 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:38:58 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:38:58 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:38:58 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 15:38:58 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:38:58 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:38:58 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:38:58 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:38:58 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:38:58 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 15:38:58 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:38:58 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 15:38:58 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 15:38:58 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 15:38:58 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 15:38:58 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 15:38:58 | WARN  | org.example.service.CityService - Invalid cache entry for key: allCities
2025-04-30 15:38:58 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:38:58 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:38:58 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:38:58 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 15:38:58 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:38:58 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:38:58 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:38:58 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:38:58 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:38:58 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 15:38:58 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:38:58 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: -100.0, area: 0.0 km²
2025-04-30 15:38:58 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:38:58 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:38:58 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:38:58 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:38:58 | INFO  | org.example.service.CityService - 🗑️ Deleting 0 cities from country 'null'
2025-04-30 15:38:58 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'null'. Cache invalidated
2025-04-30 15:38:58 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:38:58 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 15:38:58 | INFO  | org.example.service.CityService - ➕ Added city 'Brest' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:38:58 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:38:58 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Minsk', population: 2000000.0, area: 600.0 km²
2025-04-30 15:38:58 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:40:19 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:40:19 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:40:19 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:40:19 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 1)
2025-04-30 15:40:19 | INFO  | org.example.service.CountryService - ✨ Created country: null (ID: 2)
2025-04-30 15:40:19 | INFO  | org.example.service.CountryService - ✨ Added 2 countries
2025-04-30 15:40:19 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:40:19 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:40:19 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:40:19 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 1
2025-04-30 15:40:19 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:40:19 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:40:19 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:40:19 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:40:19 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:40:19 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-04-30 15:40:19 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:40:19 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 15:40:19 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:40:19 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:40:19 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 15:40:19 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Belarus
2025-04-30 15:40:19 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:40:19 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Belarus
2025-04-30 15:40:19 | INFO  | org.example.service.CountryService - ✨ Created country: Belarus (ID: 1)
2025-04-30 15:40:19 | INFO  | org.example.service.CountryService - ✅ Retrieved 0 countries from cache
2025-04-30 15:40:19 | WARN  | org.example.service.CountryService - Attempting to delete all countries
2025-04-30 15:40:19 | INFO  | org.example.service.CountryService - 🗑️ Deleted all countries
2025-04-30 15:40:20 | WARN  | org.example.service.CityService - Invalid cache entry for key: allCities
2025-04-30 15:40:20 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:40:20 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:40:20 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:40:20 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 2) to country 'null' (ID: 1)
2025-04-30 15:40:20 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:40:20 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:40:20 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:40:20 | INFO  | org.example.service.CityService - 🗑️ Deleting city 'Minsk' (ID: 1)
2025-04-30 15:40:20 | INFO  | org.example.service.CityService - ✅ City 'Minsk' (ID: 1) deleted and cache invalidated
2025-04-30 15:40:20 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: 1000000.0, area: 5000.0 km²
2025-04-30 15:40:20 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:40:20 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Grodno', population: -100.0, area: 0.0 km²
2025-04-30 15:40:20 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:40:20 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:40:20 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:40:20 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:40:20 | INFO  | org.example.service.CityService - 🗑️ Deleting 0 cities from country 'null'
2025-04-30 15:40:20 | INFO  | org.example.service.CityService - ✅ All cities deleted from country 'null'. Cache invalidated
2025-04-30 15:40:20 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 15:40:20 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 15:40:20 | INFO  | org.example.service.CityService - ➕ Added city 'Brest' (ID: 1) to country 'null' (ID: 1)
2025-04-30 15:40:20 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: ADD
2025-04-30 15:40:20 | INFO  | org.example.service.CityService - ✏️ Updated city 'Minsk' (ID: 1). New name: 'Minsk', population: 2000000.0, area: 600.0 km²
2025-04-30 15:40:20 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'null' (ID: 1). Action: UPDATE
2025-04-30 15:41:09 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-30 15:41:09 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 15:41:09 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-30 15:41:09 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-30 15:41:23 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-04-30 15:41:23 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 21933 (/Users/snrteftelya/Desktop/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountrySearch)
2025-04-30 15:41:23 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-30 15:41:23 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-30 15:41:23 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 3 JPA repository interfaces.
2025-04-30 15:41:24 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-30 15:41:24 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-30 15:41:24 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-30 15:41:24 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-30 15:41:24 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-30 15:41:24 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 736 ms
2025-04-30 15:41:24 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-30 15:41:24 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-30 15:41:24 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-30 15:41:24 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-30 15:41:24 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-30 15:41:24 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@41059616
2025-04-30 15:41:24 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-30 15:41:25 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-30 15:41:25 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 15:41:25 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-30 15:41:25 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-30 15:41:26 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-30 15:41:26 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-30 15:41:26 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.277 seconds (process running for 3.64)
2025-04-30 15:41:29 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-30 15:41:29 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-30 15:41:29 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-30 15:41:29 | INFO  | o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 197 ms
2025-04-30 15:41:43 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-04-30 15:41:43 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.id,
        c1_0.area,
        c1_0.country_id,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        city c1_0
2025-04-30 15:41:43 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.id,
        c1_0.area,
        c1_0.capital,
        c1_0.gdp,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        country c1_0 
    [34mwhere[0m
        c1_0.id=?
2025-04-30 15:41:43 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.country_id,
        c1_0.id,
        c1_0.area,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        city c1_0 
    [34mwhere[0m
        c1_0.country_id=?
2025-04-30 15:41:43 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.country_id,
        c1_0.id,
        c1_0.area,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        city c1_0 
    [34mwhere[0m
        c1_0.country_id=?
2025-04-30 15:41:43 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        n1_0.country_id,
        n1_1.id,
        n1_1.[34mlanguage[0m,
        n1_1.name,
        n1_1.religion 
    [34mfrom[0m
        country_nations n1_0 
    [34mjoin[0m
        nation n1_1 
            [34mon[0m n1_1.id=n1_0.nation_id 
    [34mwhere[0m
        n1_0.country_id=?
2025-04-30 15:41:43 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.id,
        c1_0.area,
        c1_0.capital,
        c1_0.gdp,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        country c1_0 
    [34mwhere[0m
        c1_0.id=?
2025-04-30 15:41:43 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.country_id,
        c1_0.id,
        c1_0.area,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        city c1_0 
    [34mwhere[0m
        c1_0.country_id=?
2025-04-30 15:41:43 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.country_id,
        c1_0.id,
        c1_0.area,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        city c1_0 
    [34mwhere[0m
        c1_0.country_id=?
2025-04-30 15:41:43 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        n1_0.country_id,
        n1_1.id,
        n1_1.[34mlanguage[0m,
        n1_1.name,
        n1_1.religion 
    [34mfrom[0m
        country_nations n1_0 
    [34mjoin[0m
        nation n1_1 
            [34mon[0m n1_1.id=n1_0.nation_id 
    [34mwhere[0m
        n1_0.country_id=?
2025-04-30 15:41:43 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 15:41:43 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 15:41:43 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-04-30 15:47:43 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long)), args=1
2025-04-30 15:47:43 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.id,
        c1_0.area,
        c1_0.country_id,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        city c1_0 
    [34mleft[0m [34mjoin[0m
        country c2_0 
            [34mon[0m c2_0.id=c1_0.country_id 
    [34mwhere[0m
        c2_0.id=?
2025-04-30 15:47:43 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.id,
        c1_0.area,
        c1_0.capital,
        c1_0.gdp,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        country c1_0 
    [34mwhere[0m
        c1_0.id=?
2025-04-30 15:47:43 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.country_id,
        c1_0.id,
        c1_0.area,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        city c1_0 
    [34mwhere[0m
        c1_0.country_id=?
2025-04-30 15:47:43 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.country_id,
        c1_0.id,
        c1_0.area,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        city c1_0 
    [34mwhere[0m
        c1_0.country_id=?
2025-04-30 15:47:43 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        n1_0.country_id,
        n1_1.id,
        n1_1.[34mlanguage[0m,
        n1_1.name,
        n1_1.religion 
    [34mfrom[0m
        country_nations n1_0 
    [34mjoin[0m
        nation n1_1 
            [34mon[0m n1_1.id=n1_0.nation_id 
    [34mwhere[0m
        n1_0.country_id=?
2025-04-30 15:47:43 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 15:47:43 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 15:47:43 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 2
2025-04-30 15:47:55 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long)), args=1
2025-04-30 15:47:55 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 15:47:55 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-04-30 15:47:55 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 3
2025-04-30 15:55:48 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountryById(Long)), args=1
2025-04-30 15:55:48 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        [34mdistinct[0m c1_0.id,
        c1_0.area,
        c1_0.capital,
        c2_0.country_id,
        c2_0.id,
        c2_0.area,
        c2_0.name,
        c2_0.population,
        c1_0.gdp,
        c1_0.name,
        n1_0.country_id,
        n1_1.id,
        n1_1.[34mlanguage[0m,
        n1_1.name,
        n1_1.religion,
        c1_0.population 
    [34mfrom[0m
        country c1_0 
    [34mleft[0m [34mjoin[0m
        country_nations n1_0 
            [34mon[0m c1_0.id=n1_0.country_id 
    [34mleft[0m [34mjoin[0m
        nation n1_1 
            [34mon[0m n1_1.id=n1_0.nation_id 
    [34mleft[0m [34mjoin[0m
        city c2_0 
            [34mon[0m c1_0.id=c2_0.country_id 
    [34mwhere[0m
        c1_0.id=?
2025-04-30 15:55:48 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.country_id,
        c1_0.id,
        c1_0.area,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        city c1_0 
    [34mwhere[0m
        c1_0.country_id=?
2025-04-30 15:55:48 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.nation_id,
        c1_1.id,
        c1_1.area,
        c1_1.capital,
        c1_1.gdp,
        c1_1.name,
        c1_1.population 
    [34mfrom[0m
        country_nations c1_0 
    [34mjoin[0m
        country c1_1 
            [34mon[0m c1_1.id=c1_0.country_id 
    [34mwhere[0m
        c1_0.nation_id=?
2025-04-30 15:55:48 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountryById(Long))
2025-04-30 15:55:48 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountryById(Long))
2025-04-30 15:55:48 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 4
2025-04-30 15:55:53 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountryById(Long)), args=1
2025-04-30 15:55:53 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountryById(Long))
2025-04-30 15:55:53 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountryById(Long))
2025-04-30 15:55:53 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 5
2025-04-30 15:55:55 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountryById(Long)), args=1
2025-04-30 15:55:55 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountryById(Long))
2025-04-30 15:55:55 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountryById(Long))
2025-04-30 15:55:55 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 6
2025-04-30 15:56:06 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long)), args=1
2025-04-30 15:56:06 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:56:06 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.id,
        c1_0.area,
        c1_0.capital,
        c1_0.gdp,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        country c1_0 
    [34mwhere[0m
        c1_0.id=?
2025-04-30 15:56:06 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.country_id,
        c1_0.id,
        c1_0.area,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        city c1_0 
    [34mwhere[0m
        c1_0.country_id=?
2025-04-30 15:56:06 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.country_id,
        c1_0.id,
        c1_0.area,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        city c1_0 
    [34mwhere[0m
        c1_0.country_id=?
2025-04-30 15:56:06 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        n1_0.country_id,
        n1_1.id,
        n1_1.[34mlanguage[0m,
        n1_1.name,
        n1_1.religion 
    [34mfrom[0m
        country_nations n1_0 
    [34mjoin[0m
        nation n1_1 
            [34mon[0m n1_1.id=n1_0.nation_id 
    [34mwhere[0m
        n1_0.country_id=?
2025-04-30 15:56:06 | DEBUG | org.hibernate.SQL - 
    [34mdelete[0m 
    [34mfrom[0m
        country_nations 
    [34mwhere[0m
        country_id=?
2025-04-30 15:56:06 | DEBUG | org.hibernate.SQL - 
    [34mdelete[0m 
    [34mfrom[0m
        country 
    [34mwhere[0m
        id=?
2025-04-30 15:56:06 | WARN  | o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 23503
2025-04-30 15:56:06 | ERROR | o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: update or delete on table "country" violates foreign key constraint "fkrpd7j1p7yxr784adkx4pyepba" on table "city"
  Подробности: Key (id)=(1) is still referenced from table "city".
2025-04-30 15:56:06 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long)), exception: could not execute statement [ERROR: update or delete on table "country" violates foreign key constraint "fkrpd7j1p7yxr784adkx4pyepba" on table "city"
  Подробности: Key (id)=(1) is still referenced from table "city".] [delete from country where id=?]; SQL [delete from country where id=?]; constraint [fkrpd7j1p7yxr784adkx4pyepba]
2025-04-30 15:56:06 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long))
2025-04-30 15:56:06 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 7
2025-04-30 15:56:17 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountryById(Long)), args=1
2025-04-30 15:56:17 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        [34mdistinct[0m c1_0.id,
        c1_0.area,
        c1_0.capital,
        c2_0.country_id,
        c2_0.id,
        c2_0.area,
        c2_0.name,
        c2_0.population,
        c1_0.gdp,
        c1_0.name,
        n1_0.country_id,
        n1_1.id,
        n1_1.[34mlanguage[0m,
        n1_1.name,
        n1_1.religion,
        c1_0.population 
    [34mfrom[0m
        country c1_0 
    [34mleft[0m [34mjoin[0m
        country_nations n1_0 
            [34mon[0m c1_0.id=n1_0.country_id 
    [34mleft[0m [34mjoin[0m
        nation n1_1 
            [34mon[0m n1_1.id=n1_0.nation_id 
    [34mleft[0m [34mjoin[0m
        city c2_0 
            [34mon[0m c1_0.id=c2_0.country_id 
    [34mwhere[0m
        c1_0.id=?
2025-04-30 15:56:17 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.country_id,
        c1_0.id,
        c1_0.area,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        city c1_0 
    [34mwhere[0m
        c1_0.country_id=?
2025-04-30 15:56:17 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.nation_id,
        c1_1.id,
        c1_1.area,
        c1_1.capital,
        c1_1.gdp,
        c1_1.name,
        c1_1.population 
    [34mfrom[0m
        country_nations c1_0 
    [34mjoin[0m
        country c1_1 
            [34mon[0m c1_1.id=c1_0.country_id 
    [34mwhere[0m
        c1_0.nation_id=?
2025-04-30 15:56:17 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountryById(Long))
2025-04-30 15:56:17 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountryById(Long))
2025-04-30 15:56:17 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 8
2025-04-30 15:57:01 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long)), args=1
2025-04-30 15:57:01 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 15:57:01 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.id,
        c1_0.area,
        c1_0.capital,
        c1_0.gdp,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        country c1_0 
    [34mwhere[0m
        c1_0.id=?
2025-04-30 15:57:01 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.country_id,
        c1_0.id,
        c1_0.area,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        city c1_0 
    [34mwhere[0m
        c1_0.country_id=?
2025-04-30 15:57:01 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.country_id,
        c1_0.id,
        c1_0.area,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        city c1_0 
    [34mwhere[0m
        c1_0.country_id=?
2025-04-30 15:57:01 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        n1_0.country_id,
        n1_1.id,
        n1_1.[34mlanguage[0m,
        n1_1.name,
        n1_1.religion 
    [34mfrom[0m
        country_nations n1_0 
    [34mjoin[0m
        nation n1_1 
            [34mon[0m n1_1.id=n1_0.nation_id 
    [34mwhere[0m
        n1_0.country_id=?
2025-04-30 15:57:01 | DEBUG | org.hibernate.SQL - 
    [34mdelete[0m 
    [34mfrom[0m
        country_nations 
    [34mwhere[0m
        country_id=?
2025-04-30 15:57:01 | DEBUG | org.hibernate.SQL - 
    [34mdelete[0m 
    [34mfrom[0m
        country 
    [34mwhere[0m
        id=?
2025-04-30 15:57:01 | WARN  | o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 23503
2025-04-30 15:57:01 | ERROR | o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: update or delete on table "country" violates foreign key constraint "fkrpd7j1p7yxr784adkx4pyepba" on table "city"
  Подробности: Key (id)=(1) is still referenced from table "city".
2025-04-30 15:57:01 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long)), exception: could not execute statement [ERROR: update or delete on table "country" violates foreign key constraint "fkrpd7j1p7yxr784adkx4pyepba" on table "city"
  Подробности: Key (id)=(1) is still referenced from table "city".] [delete from country where id=?]; SQL [delete from country where id=?]; constraint [fkrpd7j1p7yxr784adkx4pyepba]
2025-04-30 15:57:01 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long))
2025-04-30 15:57:01 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 9
2025-04-30 15:58:28 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountryById(Long)), args=1
2025-04-30 15:58:28 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        [34mdistinct[0m c1_0.id,
        c1_0.area,
        c1_0.capital,
        c2_0.country_id,
        c2_0.id,
        c2_0.area,
        c2_0.name,
        c2_0.population,
        c1_0.gdp,
        c1_0.name,
        n1_0.country_id,
        n1_1.id,
        n1_1.[34mlanguage[0m,
        n1_1.name,
        n1_1.religion,
        c1_0.population 
    [34mfrom[0m
        country c1_0 
    [34mleft[0m [34mjoin[0m
        country_nations n1_0 
            [34mon[0m c1_0.id=n1_0.country_id 
    [34mleft[0m [34mjoin[0m
        nation n1_1 
            [34mon[0m n1_1.id=n1_0.nation_id 
    [34mleft[0m [34mjoin[0m
        city c2_0 
            [34mon[0m c1_0.id=c2_0.country_id 
    [34mwhere[0m
        c1_0.id=?
2025-04-30 15:58:28 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.country_id,
        c1_0.id,
        c1_0.area,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        city c1_0 
    [34mwhere[0m
        c1_0.country_id=?
2025-04-30 15:58:28 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.nation_id,
        c1_1.id,
        c1_1.area,
        c1_1.capital,
        c1_1.gdp,
        c1_1.name,
        c1_1.population 
    [34mfrom[0m
        country_nations c1_0 
    [34mjoin[0m
        country c1_1 
            [34mon[0m c1_1.id=c1_0.country_id 
    [34mwhere[0m
        c1_0.nation_id=?
2025-04-30 15:58:28 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountryById(Long))
2025-04-30 15:58:28 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountryById(Long))
2025-04-30 15:58:28 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 10
2025-04-30 15:58:31 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountryById(Long)), args=1
2025-04-30 15:58:31 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountryById(Long))
2025-04-30 15:58:31 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountryById(Long))
2025-04-30 15:58:31 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 11
2025-04-30 15:58:47 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-30 15:58:47 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 15:58:47 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-30 15:58:47 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-30 15:58:50 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-04-30 15:58:50 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 22379 (/Users/snrteftelya/Desktop/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountrySearch)
2025-04-30 15:58:50 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-30 15:58:50 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-30 15:58:50 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22 ms. Found 3 JPA repository interfaces.
2025-04-30 15:58:51 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-30 15:58:51 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-30 15:58:51 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-30 15:58:51 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-30 15:58:51 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-30 15:58:51 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 801 ms
2025-04-30 15:58:51 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-30 15:58:51 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-30 15:58:51 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-30 15:58:51 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-30 15:58:51 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-30 15:58:51 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5d3b6585
2025-04-30 15:58:51 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-30 15:58:51 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-30 15:58:51 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 15:58:51 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-30 15:58:52 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-30 15:58:53 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-30 15:58:53 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-30 15:58:53 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.482 seconds (process running for 3.84)
2025-04-30 15:58:54 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-30 15:58:54 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-30 15:58:54 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-30 15:58:54 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountryById(Long)), args=1
2025-04-30 15:58:54 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        [34mdistinct[0m c1_0.id,
        c1_0.area,
        c1_0.capital,
        c2_0.country_id,
        c2_0.id,
        c2_0.area,
        c2_0.name,
        c2_0.population,
        c1_0.gdp,
        c1_0.name,
        n1_0.country_id,
        n1_1.id,
        n1_1.[34mlanguage[0m,
        n1_1.name,
        n1_1.religion,
        c1_0.population 
    [34mfrom[0m
        country c1_0 
    [34mleft[0m [34mjoin[0m
        country_nations n1_0 
            [34mon[0m c1_0.id=n1_0.country_id 
    [34mleft[0m [34mjoin[0m
        nation n1_1 
            [34mon[0m n1_1.id=n1_0.nation_id 
    [34mleft[0m [34mjoin[0m
        city c2_0 
            [34mon[0m c1_0.id=c2_0.country_id 
    [34mwhere[0m
        c1_0.id=?
2025-04-30 15:58:54 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.country_id,
        c1_0.id,
        c1_0.area,
        c1_0.name,
        c1_0.population 
    [34mfrom[0m
        city c1_0 
    [34mwhere[0m
        c1_0.country_id=?
2025-04-30 15:58:54 | DEBUG | org.hibernate.SQL - 
    [34mselect[0m
        c1_0.nation_id,
        c1_1.id,
        c1_1.area,
        c1_1.capital,
        c1_1.gdp,
        c1_1.name,
        c1_1.population 
    [34mfrom[0m
        country_nations c1_0 
    [34mjoin[0m
        country c1_1 
            [34mon[0m c1_1.id=c1_0.country_id 
    [34mwhere[0m
        c1_0.nation_id=?
2025-04-30 15:58:54 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountryById(Long))
2025-04-30 15:58:54 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountryById(Long))
2025-04-30 15:58:54 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-04-30 15:59:03 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountryById(Long)), args=1
2025-04-30 15:59:03 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountryById(Long))
2025-04-30 15:59:03 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountryById(Long))
2025-04-30 15:59:03 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 2
2025-04-30 15:59:24 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-30 15:59:24 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 15:59:24 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-30 15:59:24 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-30 15:59:25 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-04-30 15:59:25 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 22411 (/Users/snrteftelya/Desktop/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountrySearch)
2025-04-30 15:59:25 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-30 15:59:26 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-30 15:59:26 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 3 JPA repository interfaces.
2025-04-30 15:59:26 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-30 15:59:26 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-30 15:59:26 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-30 15:59:26 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-30 15:59:26 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-30 15:59:26 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 716 ms
2025-04-30 15:59:26 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-30 15:59:26 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-30 15:59:26 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-30 15:59:26 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-30 15:59:26 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-30 15:59:26 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@38cb1606
2025-04-30 15:59:26 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-30 15:59:27 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-30 15:59:27 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 15:59:27 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-30 15:59:27 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-30 15:59:28 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-30 15:59:28 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-30 15:59:28 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.117 seconds (process running for 3.493)
2025-04-30 15:59:36 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-30 15:59:36 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-30 15:59:36 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-30 15:59:36 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountryById(Long)), args=1
2025-04-30 15:59:37 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 15:59:37 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountryById(Long))
2025-04-30 15:59:37 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountryById(Long))
2025-04-30 15:59:37 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-04-30 15:59:43 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountryById(Long)), args=1
2025-04-30 15:59:43 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_1
2025-04-30 15:59:43 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountryById(Long))
2025-04-30 15:59:43 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountryById(Long))
2025-04-30 15:59:43 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 2
2025-04-30 16:25:24 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long)), args=1
2025-04-30 16:25:24 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 16:25:24 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_1
2025-04-30 16:25:24 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 16:25:24 | WARN  | o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 23503
2025-04-30 16:25:24 | ERROR | o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: update or delete on table "country" violates foreign key constraint "fkrpd7j1p7yxr784adkx4pyepba" on table "city"
  Подробности: Key (id)=(1) is still referenced from table "city".
2025-04-30 16:25:24 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long)), exception: could not execute statement [ERROR: update or delete on table "country" violates foreign key constraint "fkrpd7j1p7yxr784adkx4pyepba" on table "city"
  Подробности: Key (id)=(1) is still referenced from table "city".] [delete from country where id=?]; SQL [delete from country where id=?]; constraint [fkrpd7j1p7yxr784adkx4pyepba]
2025-04-30 16:25:24 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long))
2025-04-30 16:25:24 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 3
2025-04-30 16:30:37 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-30 16:30:37 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 16:30:37 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-30 16:30:37 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-30 16:30:39 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-04-30 16:30:39 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 23396 (/Users/snrteftelya/Desktop/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountrySearch)
2025-04-30 16:30:39 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-30 16:30:39 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-30 16:30:39 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21 ms. Found 3 JPA repository interfaces.
2025-04-30 16:30:40 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-30 16:30:40 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-30 16:30:40 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-30 16:30:40 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-30 16:30:40 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-30 16:30:40 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 804 ms
2025-04-30 16:30:40 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-30 16:30:40 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-30 16:30:40 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-30 16:30:40 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-30 16:30:40 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-30 16:30:40 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@38cb1606
2025-04-30 16:30:40 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-30 16:30:41 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-30 16:30:41 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 16:30:41 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-30 16:30:41 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-30 16:30:42 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-30 16:30:42 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-30 16:30:42 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.45 seconds (process running for 3.95)
2025-04-30 16:30:43 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-30 16:30:43 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-30 16:30:43 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-30 16:30:43 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long)), args=1
2025-04-30 16:30:43 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 16:30:43 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 1
2025-04-30 16:30:43 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long))
2025-04-30 16:30:43 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long))
2025-04-30 16:30:43 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-04-30 16:30:53 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountryById(Long)), args=1
2025-04-30 16:30:53 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 1
2025-04-30 16:30:53 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CountryController.getCountryById(Long)), exception: Country not found
2025-04-30 16:30:53 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountryById(Long))
2025-04-30 16:30:53 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 2
2025-04-30 16:31:06 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountries()), args=
2025-04-30 16:31:06 | INFO  | org.example.service.CountryService - 🔄 Fetched 4 countries from DB and cached
2025-04-30 16:31:06 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-04-30 16:31:06 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-04-30 16:31:06 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 3
2025-04-30 16:31:18 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountries()), args=
2025-04-30 16:31:18 | INFO  | org.example.service.CountryService - ✅ Retrieved 4 countries from cache
2025-04-30 16:31:18 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-04-30 16:31:18 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-04-30 16:31:18 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 4
2025-04-30 16:31:26 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-04-30 16:31:26 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 16:31:26 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 16:31:26 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 16:31:26 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 5
2025-04-30 16:31:46 | WARN  | o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Failure in @ExceptionHandler org.example.exception.ExceptionManager#objectNotFoundException(ObjectNotFoundException, WebRequest)
java.lang.IllegalStateException: Could not resolve parameter [0] in public org.springframework.http.ResponseEntity<org.example.exception.ErrorMessage> org.example.exception.ExceptionManager.objectNotFoundException(org.example.exception.ObjectNotFoundException,org.springframework.web.context.request.WebRequest): No suitable resolver
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:222)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:178)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:432)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-30 16:31:46 | WARN  | o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.util.ArrayList<org.example.model.City>` from Object value (token `JsonToken.START_OBJECT`)]
2025-04-30 16:33:34 | WARN  | o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Failure in @ExceptionHandler org.example.exception.ExceptionManager#objectNotFoundException(ObjectNotFoundException, WebRequest)
java.lang.IllegalStateException: Could not resolve parameter [0] in public org.springframework.http.ResponseEntity<org.example.exception.ErrorMessage> org.example.exception.ExceptionManager.objectNotFoundException(org.example.exception.ObjectNotFoundException,org.springframework.web.context.request.WebRequest): No suitable resolver
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:222)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:178)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:432)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-30 16:33:34 | WARN  | o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.util.ArrayList<org.example.model.City>` from Object value (token `JsonToken.START_OBJECT`)]
2025-04-30 16:33:39 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addNewCitiesByCountryId(Long,List)), args=2,[City(id=null, name=Minsk, population=2000000.0, areaSquareKm=409.5, country=null), City(id=null, name=Grodno, population=370000.0, areaSquareKm=142.1, country=null)]
2025-04-30 16:33:39 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 44) to country 'Belarus' (ID: 2)
2025-04-30 16:33:39 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'Belarus' (ID: 2). Action: ADD
2025-04-30 16:33:39 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 45) to country 'Belarus' (ID: 2)
2025-04-30 16:33:39 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'Belarus' (ID: 2). Action: ADD
2025-04-30 16:33:39 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.addNewCitiesByCountryId(Long,List))
2025-04-30 16:33:39 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addNewCitiesByCountryId(Long,List))
2025-04-30 16:33:39 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 6
2025-04-30 16:33:49 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-04-30 16:33:49 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-04-30 16:33:49 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 16:33:49 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 16:33:49 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 7
2025-04-30 16:33:54 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountries()), args=
2025-04-30 16:33:54 | INFO  | org.example.service.CountryService - ✅ Retrieved 4 countries from cache
2025-04-30 16:33:54 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-04-30 16:33:54 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-04-30 16:33:54 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 8
2025-04-30 16:34:27 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-04-30 16:34:27 | INFO  | org.example.service.CityService - Getting cities from cache
2025-04-30 16:34:27 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 16:34:27 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-04-30 16:34:27 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 9
2025-04-30 16:35:14 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-30 16:35:14 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 16:35:14 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-30 16:35:14 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-30 16:35:16 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-04-30 16:35:16 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 23525 (/Users/snrteftelya/Desktop/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountrySearch)
2025-04-30 16:35:16 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-30 16:35:16 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-30 16:35:16 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 3 JPA repository interfaces.
2025-04-30 16:35:16 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-30 16:35:16 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-30 16:35:16 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-30 16:35:16 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-30 16:35:16 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-30 16:35:16 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 728 ms
2025-04-30 16:35:16 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-30 16:35:16 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-30 16:35:16 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-30 16:35:17 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-30 16:35:17 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-30 16:35:17 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2b99c937
2025-04-30 16:35:17 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-30 16:35:17 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-30 16:35:17 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 16:35:17 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-30 16:35:17 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-30 16:35:19 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-30 16:35:19 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-30 16:35:19 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.323 seconds (process running for 3.671)
2025-04-30 16:35:23 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-30 16:35:23 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-30 16:35:23 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-30 16:35:23 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long)), args=1
2025-04-30 16:35:23 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 1
2025-04-30 16:35:23 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long)), exception: Country not found with ID: 1
2025-04-30 16:35:23 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long))
2025-04-30 16:35:23 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-04-30 16:35:31 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long)), args=3
2025-04-30 16:35:31 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 3
2025-04-30 16:35:31 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 3
2025-04-30 16:35:31 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long))
2025-04-30 16:35:31 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long))
2025-04-30 16:35:31 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 2
2025-04-30 16:35:40 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountries()), args=
2025-04-30 16:35:40 | INFO  | org.example.service.CountryService - 🔄 Fetched 3 countries from DB and cached
2025-04-30 16:35:40 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-04-30 16:35:40 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-04-30 16:35:40 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 3
2025-04-30 16:40:22 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-04-30 16:40:22 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 16:40:22 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-30 16:40:22 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-30 16:40:24 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-04-30 16:40:24 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 23668 (/Users/snrteftelya/Desktop/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountrySearch)
2025-04-30 16:40:24 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-30 16:40:24 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-30 16:40:24 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 3 JPA repository interfaces.
2025-04-30 16:40:24 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-30 16:40:24 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-30 16:40:24 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-30 16:40:24 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-04-30 16:40:24 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-30 16:40:24 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 771 ms
2025-04-30 16:40:25 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-30 16:40:25 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-04-30 16:40:25 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-30 16:40:25 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-30 16:40:25 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-30 16:40:25 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1029cf9
2025-04-30 16:40:25 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-30 16:40:25 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-30 16:40:25 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-30 16:40:25 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-04-30 16:40:26 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-30 16:40:27 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-04-30 16:40:27 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-04-30 16:40:27 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.277 seconds (process running for 3.668)
2025-04-30 16:55:00 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=6m35s241ms).
2025-04-30 17:27:01 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=32m1s224ms).
2025-04-30 18:49:30 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h22m28s61ms).
2025-04-30 19:52:02 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h2m32s773ms).
2025-04-30 21:07:12 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h15m9s860ms).
2025-04-30 21:48:15 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=41m2s406ms).
2025-04-30 22:53:27 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h5m12s537ms).
2025-05-01 00:19:28 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h26m917ms).
2025-05-01 01:10:32 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=51m3s932ms).
2025-05-01 02:30:19 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h19m47s451ms).
2025-05-01 03:58:30 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h28m10s251ms).
2025-05-01 05:38:18 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h39m48s250ms).
2025-05-01 06:58:54 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h20m35s926ms).
2025-05-01 08:19:00 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h20m6s257ms).
2025-05-01 09:48:45 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h29m45s277ms).
2025-05-01 10:24:15 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=35m29s172ms).
2025-05-01 11:39:57 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h15m42s709ms).
2025-05-01 12:51:55 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h11m57s387ms).
2025-05-01 14:19:24 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h27m29s83ms).
2025-05-01 15:27:16 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h7m52s688ms).
2025-05-01 16:43:04 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h15m47s779ms).
2025-05-01 17:29:35 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=46m30s440ms).
2025-05-01 18:58:05 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h28m30s304ms).
2025-05-01 19:59:11 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h1m5s936ms).
2025-05-01 21:00:22 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h1m10s764ms).
2025-05-01 21:52:17 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=51m55s494ms).
2025-05-01 22:49:07 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=56m49s587ms).
2025-05-02 00:03:21 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h14m14s466ms).
2025-05-02 01:20:15 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h16m53s854ms).
2025-05-02 02:37:00 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h16m44s462ms).
2025-05-02 04:15:04 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h38m4s455ms).
2025-05-02 05:37:29 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h22m24s909ms).
2025-05-02 07:00:11 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h22m41s867ms).
2025-05-02 08:41:41 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h41m30s142ms).
2025-05-02 09:11:44 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=30m3s20ms).
2025-05-02 09:32:47 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m33s385ms).
2025-05-02 09:36:16 | WARN  | javax.management.remote.misc - The server has decided to close this client connection.
2025-05-02 09:52:50 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m32s785ms).
2025-05-02 10:02:08 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=6m17s386ms).
2025-05-02 10:18:11 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m33s572ms).
2025-05-02 11:06:04 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=46m22s687ms).
2025-05-02 11:59:08 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=53m4s410ms).
2025-05-02 12:01:12 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m3s664ms).
2025-05-02 12:31:06 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=10m23s735ms).
2025-05-02 12:48:50 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=17m44s417ms).
2025-05-02 13:04:38 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m47s462ms).
2025-05-02 13:17:24 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=12m45s895ms).
2025-05-02 13:18:56 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-05-02 13:18:56 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-02 13:18:56 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-05-02 13:18:56 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-05-02 13:18:57 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-05-02 13:18:57 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 26235 (/Users/snrteftelya/Desktop/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountrySearch)
2025-05-02 13:18:57 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-02 13:18:58 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-02 13:18:58 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21 ms. Found 3 JPA repository interfaces.
2025-05-02 13:18:58 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-05-02 13:18:58 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-05-02 13:18:58 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-02 13:18:58 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-05-02 13:18:58 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-02 13:18:58 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 771 ms
2025-05-02 13:18:58 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-02 13:18:58 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-05-02 13:18:58 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-02 13:18:59 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-02 13:18:59 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-05-02 13:18:59 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@716ae973
2025-05-02 13:18:59 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-05-02 13:18:59 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-02 13:18:59 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-02 13:18:59 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-05-02 13:18:59 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-05-02 13:19:01 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-05-02 13:19:01 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-05-02 13:19:01 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.27 seconds (process running for 3.743)
2025-05-02 13:23:14 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-02 13:23:14 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-02 13:23:14 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 12 ms
2025-05-02 13:23:14 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountries()), args=
2025-05-02 13:23:14 | INFO  | org.example.service.CountryService - 🔄 Fetched 3 countries from DB and cached
2025-05-02 13:23:14 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 13:23:14 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 13:23:14 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-05-02 13:23:21 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-05-02 13:23:21 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-05-02 13:23:21 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:23:21 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:23:21 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 2
2025-05-02 13:23:44 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long)), args=1
2025-05-02 13:23:44 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-05-02 13:23:44 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-05-02 13:23:44 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 3
2025-05-02 13:23:49 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long)), args=2
2025-05-02 13:23:49 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-05-02 13:23:49 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-05-02 13:23:49 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 4
2025-05-02 13:23:58 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addNewCitiesByCountryId(Long,List)), args=2,[City(id=null, name=Minsk, population=2000000.0, areaSquareKm=409.5, country=null), City(id=null, name=Grodno, population=370000.0, areaSquareKm=142.1, country=null)]
2025-05-02 13:23:58 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 46) to country 'Belarus' (ID: 2)
2025-05-02 13:23:58 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'Belarus' (ID: 2). Action: ADD
2025-05-02 13:23:58 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 47) to country 'Belarus' (ID: 2)
2025-05-02 13:23:58 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'Belarus' (ID: 2). Action: ADD
2025-05-02 13:23:58 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.addNewCitiesByCountryId(Long,List))
2025-05-02 13:23:58 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addNewCitiesByCountryId(Long,List))
2025-05-02 13:23:58 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 5
2025-05-02 13:24:01 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-05-02 13:24:01 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-05-02 13:24:01 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:24:01 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:24:01 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 6
2025-05-02 13:24:12 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long)), args=2
2025-05-02 13:24:12 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 2
2025-05-02 13:24:12 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 2
2025-05-02 13:24:12 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long))
2025-05-02 13:24:12 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long))
2025-05-02 13:24:12 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 7
2025-05-02 13:24:19 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountries()), args=
2025-05-02 13:24:19 | INFO  | org.example.service.CountryService - 🔄 Fetched 2 countries from DB and cached
2025-05-02 13:24:19 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 13:24:19 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 13:24:19 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 8
2025-05-02 13:24:24 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-05-02 13:24:24 | INFO  | org.example.service.CityService - Getting cities from cache
2025-05-02 13:24:24 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:24:24 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:24:24 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 9
2025-05-02 13:24:48 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-05-02 13:24:48 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-02 13:24:48 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-05-02 13:24:48 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-05-02 13:24:50 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-05-02 13:24:50 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 26679 (/Users/snrteftelya/Desktop/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountrySearch)
2025-05-02 13:24:50 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-02 13:24:51 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-02 13:24:51 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 3 JPA repository interfaces.
2025-05-02 13:24:51 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-05-02 13:24:51 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-05-02 13:24:51 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-02 13:24:51 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-05-02 13:24:51 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-02 13:24:51 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 706 ms
2025-05-02 13:24:51 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-02 13:24:51 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-05-02 13:24:51 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-02 13:24:51 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-02 13:24:51 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-05-02 13:24:51 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@655909e2
2025-05-02 13:24:51 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-05-02 13:24:52 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-02 13:24:52 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-02 13:24:52 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-05-02 13:24:52 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-05-02 13:24:53 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-05-02 13:24:53 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-05-02 13:24:53 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.189 seconds (process running for 3.532)
2025-05-02 13:24:54 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-02 13:24:54 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-02 13:24:54 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-05-02 13:24:54 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-05-02 13:24:54 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-05-02 13:24:54 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:24:54 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:24:54 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-05-02 13:25:32 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-05-02 13:25:32 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-02 13:25:32 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-05-02 13:25:32 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-05-02 13:25:33 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-05-02 13:25:34 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 26703 (/Users/snrteftelya/Desktop/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountrySearch)
2025-05-02 13:25:34 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-02 13:25:34 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-02 13:25:34 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 3 JPA repository interfaces.
2025-05-02 13:25:34 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-05-02 13:25:34 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-05-02 13:25:34 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-02 13:25:34 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-05-02 13:25:34 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-02 13:25:34 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 734 ms
2025-05-02 13:25:34 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-02 13:25:34 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-05-02 13:25:34 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-02 13:25:34 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-02 13:25:35 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-05-02 13:25:35 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2b99c937
2025-05-02 13:25:35 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-05-02 13:25:35 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-02 13:25:35 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-02 13:25:35 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-05-02 13:25:35 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-05-02 13:25:37 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-05-02 13:25:37 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-05-02 13:25:37 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.15 seconds (process running for 3.485)
2025-05-02 13:25:54 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-02 13:25:54 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-02 13:25:54 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-05-02 13:25:54 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountries()), args=
2025-05-02 13:25:54 | INFO  | org.example.service.CountryService - 🔄 Fetched 2 countries from DB and cached
2025-05-02 13:25:54 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 13:25:54 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 13:25:54 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-05-02 13:26:10 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addNewCitiesByCountryId(Long,List)), args=4,[City(id=null, name=Minsk, population=2000000.0, areaSquareKm=409.5, country=null), City(id=null, name=Grodno, population=370000.0, areaSquareKm=142.1, country=null)]
2025-05-02 13:26:10 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 48) to country 'Russia' (ID: 4)
2025-05-02 13:26:10 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'Russia' (ID: 4). Action: ADD
2025-05-02 13:26:10 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 49) to country 'Russia' (ID: 4)
2025-05-02 13:26:10 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'Russia' (ID: 4). Action: ADD
2025-05-02 13:26:10 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.addNewCitiesByCountryId(Long,List))
2025-05-02 13:26:10 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addNewCitiesByCountryId(Long,List))
2025-05-02 13:26:10 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 2
2025-05-02 13:26:17 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountries()), args=
2025-05-02 13:26:17 | INFO  | org.example.service.CountryService - ✅ Retrieved 2 countries from cache
2025-05-02 13:26:17 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 13:26:17 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 13:26:17 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 3
2025-05-02 13:26:21 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long)), args=4
2025-05-02 13:26:21 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 4
2025-05-02 13:26:21 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 4
2025-05-02 13:26:21 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long))
2025-05-02 13:26:21 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long))
2025-05-02 13:26:21 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 4
2025-05-02 13:26:24 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountries()), args=
2025-05-02 13:26:24 | INFO  | org.example.service.CountryService - 🔄 Fetched 1 countries from DB and cached
2025-05-02 13:26:24 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 13:26:24 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 13:26:24 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 5
2025-05-02 13:26:28 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-05-02 13:26:28 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-05-02 13:26:28 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:26:28 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:26:28 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 6
2025-05-02 13:26:29 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-05-02 13:26:29 | INFO  | org.example.service.CityService - Getting cities from cache
2025-05-02 13:26:29 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:26:29 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:26:29 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 7
2025-05-02 13:26:30 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-05-02 13:26:30 | INFO  | org.example.service.CityService - Getting cities from cache
2025-05-02 13:26:30 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:26:30 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:26:30 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 8
2025-05-02 13:26:48 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long)), args=4
2025-05-02 13:26:48 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-05-02 13:26:48 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-05-02 13:26:48 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 9
2025-05-02 13:26:51 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-05-02 13:26:51 | INFO  | org.example.service.CityService - Getting cities from cache
2025-05-02 13:26:51 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:26:51 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:26:51 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 10
2025-05-02 13:26:56 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addNewCitiesByCountryId(Long,List)), args=4,[City(id=null, name=Minsk, population=2000000.0, areaSquareKm=409.5, country=null), City(id=null, name=Grodno, population=370000.0, areaSquareKm=142.1, country=null)]
2025-05-02 13:26:56 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CityController.addNewCitiesByCountryId(Long,List)), exception: country, which id 4 does not exist, you can't add new city
2025-05-02 13:26:56 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addNewCitiesByCountryId(Long,List))
2025-05-02 13:26:56 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 11
2025-05-02 13:27:00 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addNewCitiesByCountryId(Long,List)), args=5,[City(id=null, name=Minsk, population=2000000.0, areaSquareKm=409.5, country=null), City(id=null, name=Grodno, population=370000.0, areaSquareKm=142.1, country=null)]
2025-05-02 13:27:00 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 50) to country 'Rossiya' (ID: 5)
2025-05-02 13:27:00 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'Rossiya' (ID: 5). Action: ADD
2025-05-02 13:27:00 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 51) to country 'Rossiya' (ID: 5)
2025-05-02 13:27:00 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'Rossiya' (ID: 5). Action: ADD
2025-05-02 13:27:00 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.addNewCitiesByCountryId(Long,List))
2025-05-02 13:27:00 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addNewCitiesByCountryId(Long,List))
2025-05-02 13:27:00 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 12
2025-05-02 13:27:06 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long)), args=5
2025-05-02 13:27:06 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-05-02 13:27:06 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-05-02 13:27:06 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 13
2025-05-02 13:27:09 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-05-02 13:27:09 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-05-02 13:27:09 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:27:09 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:27:09 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 14
2025-05-02 13:27:16 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-05-02 13:27:16 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-02 13:27:16 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-05-02 13:27:16 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-05-02 13:27:17 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-05-02 13:27:17 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 26743 (/Users/snrteftelya/Desktop/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountrySearch)
2025-05-02 13:27:17 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-02 13:27:17 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-02 13:27:17 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 3 JPA repository interfaces.
2025-05-02 13:27:18 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-05-02 13:27:18 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-05-02 13:27:18 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-02 13:27:18 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-05-02 13:27:18 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-02 13:27:18 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 762 ms
2025-05-02 13:27:18 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-02 13:27:18 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-05-02 13:27:18 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-02 13:27:18 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-02 13:27:18 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-05-02 13:27:18 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@26c59348
2025-05-02 13:27:18 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-05-02 13:27:19 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-02 13:27:19 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-02 13:27:19 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-05-02 13:27:19 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-05-02 13:27:20 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-05-02 13:27:20 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-05-02 13:27:20 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.349 seconds (process running for 3.688)
2025-05-02 13:27:30 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-02 13:27:30 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-02 13:27:30 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-05-02 13:27:30 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-05-02 13:27:30 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-05-02 13:27:30 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:27:30 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:27:30 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-05-02 13:27:37 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long)), args=5
2025-05-02 13:27:37 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 5
2025-05-02 13:27:37 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 5
2025-05-02 13:27:37 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long))
2025-05-02 13:27:37 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long))
2025-05-02 13:27:37 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 2
2025-05-02 13:27:41 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long)), args=5
2025-05-02 13:27:41 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-05-02 13:27:41 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-05-02 13:27:41 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 3
2025-05-02 13:27:44 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-05-02 13:27:44 | INFO  | org.example.service.CityService - Getting cities from cache
2025-05-02 13:27:44 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:27:44 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:27:44 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 4
2025-05-02 13:27:49 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-05-02 13:27:49 | INFO  | org.example.service.CityService - Getting cities from cache
2025-05-02 13:27:49 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:27:49 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:27:49 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 5
2025-05-02 13:27:58 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountries()), args=
2025-05-02 13:27:58 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-05-02 13:27:58 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 13:27:58 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 13:27:58 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 6
2025-05-02 13:28:01 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-05-02 13:28:01 | INFO  | org.example.service.CityService - Getting cities from cache
2025-05-02 13:28:01 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:28:01 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:28:01 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 7
2025-05-02 13:28:04 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-05-02 13:28:04 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-02 13:28:04 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-05-02 13:28:04 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-05-02 13:28:05 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-05-02 13:28:05 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 26767 (/Users/snrteftelya/Desktop/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountrySearch)
2025-05-02 13:28:05 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-02 13:28:06 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-02 13:28:06 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 3 JPA repository interfaces.
2025-05-02 13:28:06 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-05-02 13:28:06 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-05-02 13:28:06 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-02 13:28:06 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-05-02 13:28:06 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-02 13:28:06 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 721 ms
2025-05-02 13:28:06 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-02 13:28:06 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-05-02 13:28:06 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-02 13:28:06 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-02 13:28:06 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-05-02 13:28:06 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@545604a9
2025-05-02 13:28:06 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-05-02 13:28:07 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-02 13:28:07 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-02 13:28:07 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-05-02 13:28:07 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-05-02 13:28:08 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-05-02 13:28:08 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-05-02 13:28:08 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.181 seconds (process running for 3.518)
2025-05-02 13:28:09 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-02 13:28:09 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-02 13:28:09 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-05-02 13:28:09 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-05-02 13:28:09 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-05-02 13:28:09 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:28:09 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:28:09 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-05-02 13:28:21 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-05-02 13:28:21 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-02 13:28:21 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-05-02 13:28:21 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-05-02 13:28:22 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-05-02 13:28:22 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 26792 (/Users/snrteftelya/Desktop/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountrySearch)
2025-05-02 13:28:22 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-02 13:28:23 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-02 13:28:23 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 3 JPA repository interfaces.
2025-05-02 13:28:23 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-05-02 13:28:23 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-05-02 13:28:23 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-02 13:28:23 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-05-02 13:28:23 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-02 13:28:23 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 700 ms
2025-05-02 13:28:23 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-02 13:28:23 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-05-02 13:28:23 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-02 13:28:23 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-02 13:28:23 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-05-02 13:28:24 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@545604a9
2025-05-02 13:28:24 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-05-02 13:28:24 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-02 13:28:24 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-02 13:28:24 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-05-02 13:28:24 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-05-02 13:28:26 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-05-02 13:28:26 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-05-02 13:28:26 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.175 seconds (process running for 3.501)
2025-05-02 13:28:42 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-02 13:28:42 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-02 13:28:42 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-05-02 13:28:42 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.addNewCountry(Country)), args=Country(id=null, name=Germany, capital=Berlin, population=4.5321033E7, areaSquareKm=4130431.0, gdp=60.23, cities=[], nations=null)
2025-05-02 13:28:42 | INFO  | org.example.service.CountryService - ✨ Created country: Germany (ID: 6)
2025-05-02 13:28:42 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.addNewCountry(Country))
2025-05-02 13:28:42 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.addNewCountry(Country))
2025-05-02 13:28:42 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-05-02 13:28:50 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addNewCitiesByCountryId(Long,List)), args=6,[City(id=null, name=Minsk, population=2000000.0, areaSquareKm=409.5, country=null), City(id=null, name=Grodno, population=370000.0, areaSquareKm=142.1, country=null)]
2025-05-02 13:28:50 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 52) to country 'Germany' (ID: 6)
2025-05-02 13:28:50 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'Germany' (ID: 6). Action: ADD
2025-05-02 13:28:50 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 53) to country 'Germany' (ID: 6)
2025-05-02 13:28:50 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'Germany' (ID: 6). Action: ADD
2025-05-02 13:28:50 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.addNewCitiesByCountryId(Long,List))
2025-05-02 13:28:50 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addNewCitiesByCountryId(Long,List))
2025-05-02 13:28:50 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 2
2025-05-02 13:28:54 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-05-02 13:28:54 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-05-02 13:28:54 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:28:54 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:28:54 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 3
2025-05-02 13:29:01 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long)), args=6
2025-05-02 13:29:01 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 6
2025-05-02 13:29:01 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 6
2025-05-02 13:29:01 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long))
2025-05-02 13:29:01 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long))
2025-05-02 13:29:01 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 4
2025-05-02 13:29:04 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-05-02 13:29:04 | INFO  | org.example.service.CityService - Getting cities from cache
2025-05-02 13:29:04 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:29:04 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:29:04 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 5
2025-05-02 13:29:09 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountries()), args=
2025-05-02 13:29:09 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-05-02 13:29:09 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 13:29:09 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 13:29:09 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 6
2025-05-02 13:29:15 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-05-02 13:29:15 | INFO  | org.example.service.CityService - Getting cities from cache
2025-05-02 13:29:15 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:29:15 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:29:15 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 7
2025-05-02 13:29:26 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-05-02 13:29:26 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-02 13:29:26 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-05-02 13:29:26 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-05-02 13:29:27 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-05-02 13:29:27 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 26824 (/Users/snrteftelya/Desktop/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountrySearch)
2025-05-02 13:29:27 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-02 13:29:27 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-02 13:29:27 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 3 JPA repository interfaces.
2025-05-02 13:29:28 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-05-02 13:29:28 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-05-02 13:29:28 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-02 13:29:28 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-05-02 13:29:28 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-02 13:29:28 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 804 ms
2025-05-02 13:29:28 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-02 13:29:28 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-05-02 13:29:28 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-02 13:29:28 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-02 13:29:28 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-05-02 13:29:28 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4aeaff64
2025-05-02 13:29:28 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-05-02 13:29:28 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-02 13:29:29 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-02 13:29:29 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-05-02 13:29:29 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-05-02 13:29:30 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-05-02 13:29:30 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-05-02 13:29:30 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.401 seconds (process running for 3.753)
2025-05-02 13:29:31 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-02 13:29:31 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-02 13:29:31 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-05-02 13:29:31 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-05-02 13:29:31 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-05-02 13:29:31 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:29:31 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:29:31 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-05-02 13:29:32 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-05-02 13:29:32 | INFO  | org.example.service.CityService - Getting cities from cache
2025-05-02 13:29:32 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:29:32 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:29:32 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 2
2025-05-02 13:30:53 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-05-02 13:30:53 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-02 13:30:53 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-05-02 13:30:53 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-05-02 13:30:55 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-05-02 13:30:55 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 26885 (/Users/snrteftelya/Desktop/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountrySearch)
2025-05-02 13:30:55 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-02 13:30:56 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-02 13:30:56 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 3 JPA repository interfaces.
2025-05-02 13:30:56 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-05-02 13:30:56 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-05-02 13:30:56 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-02 13:30:56 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-05-02 13:30:56 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-02 13:30:56 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 744 ms
2025-05-02 13:30:56 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-02 13:30:56 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-05-02 13:30:56 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-02 13:30:56 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-02 13:30:56 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-05-02 13:30:56 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4aeaff64
2025-05-02 13:30:56 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-05-02 13:30:57 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-02 13:30:57 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-02 13:30:57 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-05-02 13:30:57 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-05-02 13:30:58 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-05-02 13:30:58 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-05-02 13:30:59 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.239 seconds (process running for 3.574)
2025-05-02 13:31:19 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-02 13:31:19 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-02 13:31:19 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-05-02 13:31:19 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.addNewCountry(Country)), args=Country(id=null, name=Germany, capital=Berlin, population=4.5321033E7, areaSquareKm=4130431.0, gdp=60.23, cities=[], nations=null)
2025-05-02 13:31:19 | INFO  | org.example.service.CountryService - ✨ Created country: Germany (ID: 7)
2025-05-02 13:31:19 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.addNewCountry(Country))
2025-05-02 13:31:19 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.addNewCountry(Country))
2025-05-02 13:31:19 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-05-02 13:31:22 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountries()), args=
2025-05-02 13:31:22 | INFO  | org.example.service.CountryService - 🔄 Fetched 1 countries from DB and cached
2025-05-02 13:31:22 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 13:31:22 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 13:31:22 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 2
2025-05-02 13:31:39 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountryById(Long)), args=7
2025-05-02 13:31:39 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_7
2025-05-02 13:31:39 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountryById(Long))
2025-05-02 13:31:39 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountryById(Long))
2025-05-02 13:31:39 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 3
2025-05-02 13:31:43 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountryById(Long)), args=7
2025-05-02 13:31:43 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_7
2025-05-02 13:31:43 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountryById(Long))
2025-05-02 13:31:43 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountryById(Long))
2025-05-02 13:31:43 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 4
2025-05-02 13:32:44 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addNewCitiesByCountryId(Long,List)), args=7,[City(id=null, name=Minsk, population=2000000.0, areaSquareKm=409.5, country=null), City(id=null, name=Grodno, population=370000.0, areaSquareKm=142.1, country=null)]
2025-05-02 13:32:44 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 54) to country 'Germany' (ID: 7)
2025-05-02 13:32:44 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'Germany' (ID: 7). Action: ADD
2025-05-02 13:32:44 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 55) to country 'Germany' (ID: 7)
2025-05-02 13:32:44 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'Germany' (ID: 7). Action: ADD
2025-05-02 13:32:44 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.addNewCitiesByCountryId(Long,List))
2025-05-02 13:32:44 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addNewCitiesByCountryId(Long,List))
2025-05-02 13:32:44 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 5
2025-05-02 13:32:47 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountries()), args=
2025-05-02 13:32:47 | INFO  | org.example.service.CountryService - ✅ Retrieved 1 countries from cache
2025-05-02 13:32:47 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 13:32:47 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 13:32:47 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 6
2025-05-02 13:32:51 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-05-02 13:32:51 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-05-02 13:32:51 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:32:51 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:32:51 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 7
2025-05-02 13:32:59 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long)), args=7
2025-05-02 13:32:59 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 7
2025-05-02 13:33:00 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 7
2025-05-02 13:33:00 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long))
2025-05-02 13:33:00 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long))
2025-05-02 13:33:00 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 8
2025-05-02 13:33:02 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountries()), args=
2025-05-02 13:33:02 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-05-02 13:33:02 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 13:33:02 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 13:33:02 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 9
2025-05-02 13:33:14 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-05-02 13:33:14 | INFO  | org.example.service.CityService - Getting cities from cache
2025-05-02 13:33:14 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:33:14 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:33:14 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 10
2025-05-02 13:33:18 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-05-02 13:33:18 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-02 13:33:18 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-05-02 13:33:18 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-05-02 13:33:19 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-05-02 13:33:19 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 26952 (/Users/snrteftelya/Desktop/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountrySearch)
2025-05-02 13:33:19 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-02 13:33:19 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-02 13:33:19 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 3 JPA repository interfaces.
2025-05-02 13:33:20 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-05-02 13:33:20 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-05-02 13:33:20 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-02 13:33:20 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-05-02 13:33:20 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-02 13:33:20 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 743 ms
2025-05-02 13:33:20 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-02 13:33:20 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-05-02 13:33:20 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-02 13:33:20 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-02 13:33:20 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-05-02 13:33:20 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1c0e4262
2025-05-02 13:33:20 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-05-02 13:33:21 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-02 13:33:21 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-02 13:33:21 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-05-02 13:33:21 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-05-02 13:33:22 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-05-02 13:33:22 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-05-02 13:33:22 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.258 seconds (process running for 3.648)
2025-05-02 13:33:23 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-02 13:33:23 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-02 13:33:23 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-05-02 13:33:23 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-05-02 13:33:23 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-05-02 13:33:23 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:33:23 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:33:23 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-05-02 13:33:24 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-05-02 13:33:24 | INFO  | org.example.service.CityService - Getting cities from cache
2025-05-02 13:33:24 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:33:24 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:33:24 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 2
2025-05-02 13:44:14 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-05-02 13:44:14 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-02 13:44:14 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-05-02 13:44:14 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-05-02 13:44:16 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-05-02 13:44:16 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 27311 (/Users/snrteftelya/Desktop/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountrySearch)
2025-05-02 13:44:16 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-02 13:44:16 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-02 13:44:16 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 3 JPA repository interfaces.
2025-05-02 13:44:16 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-05-02 13:44:16 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-05-02 13:44:16 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-02 13:44:16 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-05-02 13:44:16 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-02 13:44:16 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 714 ms
2025-05-02 13:44:16 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-02 13:44:16 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-05-02 13:44:16 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-02 13:44:17 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-02 13:44:17 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-05-02 13:44:17 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@545604a9
2025-05-02 13:44:17 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-05-02 13:44:17 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-02 13:44:17 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-02 13:44:17 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-05-02 13:44:17 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-05-02 13:44:19 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-05-02 13:44:19 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-05-02 13:44:19 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.133 seconds (process running for 3.462)
2025-05-02 13:44:20 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-02 13:44:20 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-02 13:44:20 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-05-02 13:44:20 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-05-02 13:44:20 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-05-02 13:44:20 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:44:20 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:44:20 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-05-02 13:44:23 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.addNewCountry(Country)), args=Country(id=null, name=Germany, capital=Berlin, population=4.5321033E7, areaSquareKm=4130431.0, gdp=60.23, cities=[], nations=null)
2025-05-02 13:44:23 | INFO  | org.example.service.CountryService - ✨ Created country: Germany (ID: 8)
2025-05-02 13:44:23 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.addNewCountry(Country))
2025-05-02 13:44:23 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.addNewCountry(Country))
2025-05-02 13:44:23 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 2
2025-05-02 13:44:26 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountries()), args=
2025-05-02 13:44:26 | INFO  | org.example.service.CountryService - 🔄 Fetched 1 countries from DB and cached
2025-05-02 13:44:26 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 13:44:26 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 13:44:26 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 3
2025-05-02 13:44:30 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addNewCitiesByCountryId(Long,List)), args=8,[City(id=null, name=Minsk, population=2000000.0, areaSquareKm=409.5, country=null), City(id=null, name=Grodno, population=370000.0, areaSquareKm=142.1, country=null)]
2025-05-02 13:44:30 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 56) to country 'Germany' (ID: 8)
2025-05-02 13:44:30 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'Germany' (ID: 8). Action: ADD
2025-05-02 13:44:30 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 57) to country 'Germany' (ID: 8)
2025-05-02 13:44:30 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'Germany' (ID: 8). Action: ADD
2025-05-02 13:44:30 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.addNewCitiesByCountryId(Long,List))
2025-05-02 13:44:30 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addNewCitiesByCountryId(Long,List))
2025-05-02 13:44:30 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 4
2025-05-02 13:44:38 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-05-02 13:44:38 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-05-02 13:44:38 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:44:38 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 13:44:38 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 5
2025-05-02 13:44:42 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long)), args=8
2025-05-02 13:44:42 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 8
2025-05-02 13:44:42 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 8
2025-05-02 13:44:42 | WARN  | o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 23502
2025-05-02 13:44:42 | ERROR | o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: null value in column "country_id" of relation "city" violates not-null constraint
  Подробности: Failing row contains (56, 409.5, Minsk, 2000000, null, null).
2025-05-02 13:44:42 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long)), exception: could not execute statement [ERROR: null value in column "country_id" of relation "city" violates not-null constraint
  Подробности: Failing row contains (56, 409.5, Minsk, 2000000, null, null).] [update city set area=?,country_id=?,name=?,population=? where id=?]; SQL [update city set area=?,country_id=?,name=?,population=? where id=?]; constraint [country_id" of relation "city]
2025-05-02 13:44:42 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long))
2025-05-02 13:44:42 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 6
2025-05-02 14:00:50 | WARN  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m3s176ms).
2025-05-02 14:46:08 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-05-02 14:46:08 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-02 14:46:08 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-05-02 14:46:08 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-05-02 14:47:13 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-05-02 14:47:13 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 29280 (/Users/snrteftelya/Desktop/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountrySearch)
2025-05-02 14:47:13 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-02 14:47:13 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-02 14:47:13 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23 ms. Found 3 JPA repository interfaces.
2025-05-02 14:47:13 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-05-02 14:47:13 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-05-02 14:47:13 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-02 14:47:13 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-05-02 14:47:13 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-02 14:47:13 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 784 ms
2025-05-02 14:47:13 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-02 14:47:13 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-05-02 14:47:13 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-02 14:47:14 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-02 14:47:14 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-05-02 14:47:14 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@716ae973
2025-05-02 14:47:14 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-05-02 14:47:14 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-02 14:47:14 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-02 14:47:14 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-05-02 14:47:15 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-05-02 14:47:16 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-05-02 14:47:16 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-05-02 14:47:16 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.518 seconds (process running for 3.873)
2025-05-02 14:47:57 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-05-02 14:47:57 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-02 14:47:57 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-05-02 14:47:57 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-05-02 14:47:59 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-05-02 14:47:59 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 29303 (/Users/snrteftelya/Desktop/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountrySearch)
2025-05-02 14:47:59 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-02 14:47:59 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-02 14:47:59 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 27 ms. Found 3 JPA repository interfaces.
2025-05-02 14:47:59 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-05-02 14:47:59 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-05-02 14:47:59 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-02 14:47:59 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-05-02 14:47:59 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-02 14:47:59 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 827 ms
2025-05-02 14:48:00 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-02 14:48:00 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-05-02 14:48:00 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-02 14:48:00 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-02 14:48:00 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-05-02 14:48:00 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1171ba7e
2025-05-02 14:48:00 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-05-02 14:48:00 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-02 14:48:00 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-02 14:48:00 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-05-02 14:48:01 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-05-02 14:48:02 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-05-02 14:48:02 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-05-02 14:48:02 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.4 seconds (process running for 3.735)
2025-05-02 14:48:16 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-02 14:48:16 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-02 14:48:16 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-05-02 14:48:16 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.addNewCountry(Country)), args=Country(id=null, name=Germany, capital=Berlin, population=4.5321033E7, areaSquareKm=4130431.0, gdp=60.23, cities=[], nations=null)
2025-05-02 14:48:16 | ERROR | org.example.service.CountryService - 🚫 Country already exists: Germany
2025-05-02 14:48:16 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CountryController.addNewCountry(Country)), exception: Country exists
2025-05-02 14:48:16 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.addNewCountry(Country))
2025-05-02 14:48:16 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-05-02 14:48:23 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountries()), args=
2025-05-02 14:48:23 | INFO  | org.example.service.CountryService - 🔄 Fetched 1 countries from DB and cached
2025-05-02 14:48:23 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 14:48:23 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 14:48:23 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 2
2025-05-02 14:48:33 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-05-02 14:48:33 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-05-02 14:48:33 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 14:48:33 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 14:48:33 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 3
2025-05-02 14:48:36 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long)), args=8
2025-05-02 14:48:36 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 8
2025-05-02 14:48:36 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 8
2025-05-02 14:48:36 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long))
2025-05-02 14:48:36 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long))
2025-05-02 14:48:36 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 4
2025-05-02 14:48:39 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-05-02 14:48:39 | INFO  | org.example.service.CityService - Getting cities from cache
2025-05-02 14:48:39 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 14:48:39 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 14:48:39 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 5
2025-05-02 14:48:45 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountries()), args=
2025-05-02 14:48:46 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-05-02 14:48:46 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 14:48:46 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 14:48:46 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 6
2025-05-02 14:48:48 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-05-02 14:48:48 | INFO  | org.example.service.CityService - Getting cities from cache
2025-05-02 14:48:48 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 14:48:48 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 14:48:48 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 7
2025-05-02 14:48:51 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-05-02 14:48:51 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-02 14:48:51 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-05-02 14:48:51 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-05-02 14:48:52 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-05-02 14:48:52 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 29327 (/Users/snrteftelya/Desktop/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountrySearch)
2025-05-02 14:48:52 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-02 14:48:52 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-02 14:48:52 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22 ms. Found 3 JPA repository interfaces.
2025-05-02 14:48:53 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-05-02 14:48:53 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-05-02 14:48:53 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-02 14:48:53 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-05-02 14:48:53 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-02 14:48:53 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 828 ms
2025-05-02 14:48:53 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-02 14:48:53 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-05-02 14:48:53 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-02 14:48:53 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-02 14:48:53 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-05-02 14:48:53 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@56872fcb
2025-05-02 14:48:53 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-05-02 14:48:54 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-02 14:48:54 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-02 14:48:54 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-05-02 14:48:54 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-05-02 14:48:55 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-05-02 14:48:55 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-05-02 14:48:55 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.501 seconds (process running for 3.888)
2025-05-02 14:48:56 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-02 14:48:56 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-02 14:48:56 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-05-02 14:48:56 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-05-02 14:48:56 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-05-02 14:48:56 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 14:48:56 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 14:48:56 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-05-02 14:48:56 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-05-02 14:48:56 | INFO  | org.example.service.CityService - Getting cities from cache
2025-05-02 14:48:56 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 14:48:56 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 14:48:56 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 2
2025-05-02 14:53:13 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-05-02 14:53:13 | INFO  | org.example.service.CityService - Getting cities from cache
2025-05-02 14:53:13 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 14:53:13 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 14:53:13 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 3
2025-05-02 14:57:10 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-05-02 14:57:10 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-02 14:57:10 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-05-02 14:57:10 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-05-02 14:57:12 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-05-02 14:57:12 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 29626 (/Users/snrteftelya/Desktop/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountrySearch)
2025-05-02 14:57:12 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-02 14:57:12 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-02 14:57:12 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 3 JPA repository interfaces.
2025-05-02 14:57:13 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-05-02 14:57:13 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-05-02 14:57:13 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-02 14:57:13 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-05-02 14:57:13 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-02 14:57:13 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 734 ms
2025-05-02 14:57:13 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-02 14:57:13 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-05-02 14:57:13 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-02 14:57:13 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-02 14:57:13 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-05-02 14:57:13 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@403f7aa2
2025-05-02 14:57:13 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-05-02 14:57:14 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-02 14:57:14 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-02 14:57:14 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-05-02 14:57:14 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-05-02 14:57:15 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-05-02 14:57:15 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-05-02 14:57:15 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.124 seconds (process running for 3.468)
2025-05-02 14:57:17 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-02 14:57:17 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-02 14:57:17 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-05-02 14:57:17 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-05-02 14:57:17 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-05-02 14:57:17 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 14:57:17 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 14:57:17 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-05-02 14:57:19 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountries()), args=
2025-05-02 14:57:19 | INFO  | org.example.service.CountryService - 🔄 Fetched 0 countries from DB and cached
2025-05-02 14:57:19 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 14:57:19 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 14:57:19 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 2
2025-05-02 14:57:22 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.addNewCountry(Country)), args=Country(id=null, name=Germany, capital=Berlin, population=4.5321033E7, areaSquareKm=4130431.0, gdp=60.23, cities=[], nations=null)
2025-05-02 14:57:22 | INFO  | org.example.service.CountryService - ✨ Created country: Germany (ID: 9)
2025-05-02 14:57:22 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.addNewCountry(Country))
2025-05-02 14:57:22 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.addNewCountry(Country))
2025-05-02 14:57:22 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 3
2025-05-02 14:57:24 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountries()), args=
2025-05-02 14:57:24 | INFO  | org.example.service.CountryService - 🔄 Fetched 1 countries from DB and cached
2025-05-02 14:57:24 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 14:57:24 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 14:57:24 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 4
2025-05-02 14:57:33 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addNewCitiesByCountryId(Long,List)), args=9,[City(id=null, name=Minsk, population=2000000.0, areaSquareKm=409.5, country=null), City(id=null, name=Grodno, population=370000.0, areaSquareKm=142.1, country=null)]
2025-05-02 14:57:33 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 58) to country 'Germany' (ID: 9)
2025-05-02 14:57:33 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'Germany' (ID: 9). Action: ADD
2025-05-02 14:57:33 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 59) to country 'Germany' (ID: 9)
2025-05-02 14:57:33 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'Germany' (ID: 9). Action: ADD
2025-05-02 14:57:33 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.addNewCitiesByCountryId(Long,List))
2025-05-02 14:57:33 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addNewCitiesByCountryId(Long,List))
2025-05-02 14:57:33 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 5
2025-05-02 14:57:36 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-05-02 14:57:36 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-05-02 14:57:36 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 14:57:36 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 14:57:36 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 6
2025-05-02 14:57:39 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountries()), args=
2025-05-02 14:57:39 | INFO  | org.example.service.CountryService - ✅ Retrieved 1 countries from cache
2025-05-02 14:57:39 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 14:57:39 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 14:57:39 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 7
2025-05-02 14:57:43 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long)), args=9
2025-05-02 14:57:43 | WARN  | org.example.service.CountryService - Попытка удаления страны с ID: 9
2025-05-02 14:57:43 | INFO  | org.example.service.CountryService - 🗑️ Страна с ID: 9 удалена
2025-05-02 14:57:43 | WARN  | o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 23503
2025-05-02 14:57:43 | ERROR | o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: update or delete on table "country" violates foreign key constraint "fkrpd7j1p7yxr784adkx4pyepba" on table "city"
  Подробности: Key (id)=(9) is still referenced from table "city".
2025-05-02 14:57:43 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long)), exception: could not execute statement [ERROR: update or delete on table "country" violates foreign key constraint "fkrpd7j1p7yxr784adkx4pyepba" on table "city"
  Подробности: Key (id)=(9) is still referenced from table "city".] [delete from country where id=?]; SQL [delete from country where id=?]; constraint [fkrpd7j1p7yxr784adkx4pyepba]
2025-05-02 14:57:43 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long))
2025-05-02 14:57:43 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 8
2025-05-02 15:00:05 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountries()), args=
2025-05-02 15:00:05 | WARN  | com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@403f7aa2 (Соединение уже было закрыто). Possibly consider using a shorter maxLifetime value.
2025-05-02 15:00:05 | WARN  | com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@19bddb01 (Соединение уже было закрыто). Possibly consider using a shorter maxLifetime value.
2025-05-02 15:00:05 | WARN  | com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@27f403fe (Соединение уже было закрыто). Possibly consider using a shorter maxLifetime value.
2025-05-02 15:00:05 | WARN  | com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@1d37d337 (Соединение уже было закрыто). Possibly consider using a shorter maxLifetime value.
2025-05-02 15:00:05 | WARN  | com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@5f91421e (Соединение уже было закрыто). Possibly consider using a shorter maxLifetime value.
2025-05-02 15:00:05 | WARN  | com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@2883ff3e (Соединение уже было закрыто). Possibly consider using a shorter maxLifetime value.
2025-05-02 15:00:05 | WARN  | com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@2f6fe223 (Соединение уже было закрыто). Possibly consider using a shorter maxLifetime value.
2025-05-02 15:00:05 | WARN  | com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@ce22292 (Соединение уже было закрыто). Possibly consider using a shorter maxLifetime value.
2025-05-02 15:00:05 | WARN  | com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@59b610a2 (Соединение уже было закрыто). Possibly consider using a shorter maxLifetime value.
2025-05-02 15:00:05 | WARN  | com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@6efb7ea5 (Соединение уже было закрыто). Possibly consider using a shorter maxLifetime value.
2025-05-02 15:00:05 | INFO  | org.example.service.CountryService - 🔄 Fetched 1 countries from DB and cached
2025-05-02 15:00:05 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 15:00:05 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 15:00:05 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 9
2025-05-02 15:00:13 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-05-02 15:00:13 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-02 15:00:13 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-05-02 15:00:13 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-05-02 15:00:14 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-05-02 15:00:14 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 29824 (/Users/snrteftelya/Desktop/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountrySearch)
2025-05-02 15:00:14 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-02 15:00:14 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-02 15:00:14 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21 ms. Found 3 JPA repository interfaces.
2025-05-02 15:00:15 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-05-02 15:00:15 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-05-02 15:00:15 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-02 15:00:15 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-05-02 15:00:15 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-02 15:00:15 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 776 ms
2025-05-02 15:00:15 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-02 15:00:15 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-05-02 15:00:15 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-02 15:00:15 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-02 15:00:15 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-05-02 15:00:15 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@d949bc4
2025-05-02 15:00:15 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-05-02 15:00:15 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-02 15:00:15 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-02 15:00:15 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-05-02 15:00:16 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-05-02 15:00:17 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-05-02 15:00:17 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-05-02 15:00:17 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.347 seconds (process running for 3.716)
2025-05-02 15:00:17 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-02 15:00:17 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-02 15:00:17 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-05-02 15:00:17 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountries()), args=
2025-05-02 15:00:17 | INFO  | org.example.service.CountryService - 🔄 Fetched 1 countries from DB and cached
2025-05-02 15:00:17 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 15:00:17 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 15:00:17 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-05-02 15:00:18 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountries()), args=
2025-05-02 15:00:18 | INFO  | org.example.service.CountryService - ✅ Retrieved 1 countries from cache
2025-05-02 15:00:18 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 15:00:18 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 15:00:18 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 2
2025-05-02 15:00:25 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountryById(Long)), args=9
2025-05-02 15:00:25 | INFO  | org.example.service.CountryService - 🔄 Country loaded from DB and cached: country_9
2025-05-02 15:00:25 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountryById(Long))
2025-05-02 15:00:25 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountryById(Long))
2025-05-02 15:00:25 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 3
2025-05-02 15:00:36 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long)), args=9
2025-05-02 15:00:36 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-05-02 15:00:36 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-05-02 15:00:36 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 4
2025-05-02 15:00:48 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long)), args=9
2025-05-02 15:00:48 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-05-02 15:00:48 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCitiesByCountryId(Long))
2025-05-02 15:00:48 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 5
2025-05-02 15:00:53 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long)), args=9
2025-05-02 15:00:53 | WARN  | org.example.service.CountryService - Попытка удаления страны с ID: 9
2025-05-02 15:00:53 | INFO  | org.example.service.CountryService - 🗑️ Страна с ID: 9 удалена
2025-05-02 15:00:53 | WARN  | o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 23503
2025-05-02 15:00:53 | ERROR | o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: update or delete on table "country" violates foreign key constraint "fkrpd7j1p7yxr784adkx4pyepba" on table "city"
  Подробности: Key (id)=(9) is still referenced from table "city".
2025-05-02 15:00:53 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long)), exception: could not execute statement [ERROR: update or delete on table "country" violates foreign key constraint "fkrpd7j1p7yxr784adkx4pyepba" on table "city"
  Подробности: Key (id)=(9) is still referenced from table "city".] [delete from country where id=?]; SQL [delete from country where id=?]; constraint [fkrpd7j1p7yxr784adkx4pyepba]
2025-05-02 15:00:53 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long))
2025-05-02 15:00:53 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 6
2025-05-02 15:02:09 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is destroyed
2025-05-02 15:02:09 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-02 15:02:09 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-05-02 15:02:09 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-05-02 15:02:11 | INFO  | o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-05-02 15:02:11 | INFO  | o.example.CountrySearchApplication - Starting CountrySearchApplication using Java 23.0.2 with PID 29907 (/Users/snrteftelya/Desktop/CountrySearch/target/classes started by snrteftelya in /Users/snrteftelya/Desktop/CountrySearch)
2025-05-02 15:02:11 | INFO  | o.example.CountrySearchApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-02 15:02:11 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-02 15:02:11 | INFO  | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 3 JPA repository interfaces.
2025-05-02 15:02:12 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-05-02 15:02:12 | INFO  | o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-05-02 15:02:12 | INFO  | o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-02 15:02:12 | INFO  | o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-05-02 15:02:12 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-02 15:02:12 | INFO  | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 713 ms
2025-05-02 15:02:12 | INFO  | o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-02 15:02:12 | INFO  | org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-05-02 15:02:12 | INFO  | o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-02 15:02:12 | INFO  | o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-02 15:02:12 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-05-02 15:02:12 | INFO  | com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1de12397
2025-05-02 15:02:12 | INFO  | com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-05-02 15:02:12 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-02 15:02:12 | INFO  | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-02 15:02:12 | INFO  | o.example.aspect.CountrySearchAspect - Aspect is initialized
2025-05-02 15:02:13 | INFO  | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-05-02 15:02:14 | INFO  | o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-05-02 15:02:14 | INFO  | o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-05-02 15:02:14 | INFO  | o.example.CountrySearchApplication - Started CountrySearchApplication in 3.231 seconds (process running for 3.585)
2025-05-02 15:02:16 | INFO  | o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-02 15:02:16 | INFO  | o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-02 15:02:16 | INFO  | o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-05-02 15:02:16 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountries()), args=
2025-05-02 15:02:16 | INFO  | org.example.service.CountryService - 🔄 Fetched 1 countries from DB and cached
2025-05-02 15:02:16 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 15:02:16 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 15:02:16 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 1
2025-05-02 15:02:18 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long)), args=9
2025-05-02 15:02:18 | WARN  | org.example.service.CountryService - Attempting to delete country ID: 9
2025-05-02 15:02:19 | INFO  | org.example.service.CountryService - 🗑️ Deleted country ID: 9
2025-05-02 15:02:19 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long))
2025-05-02 15:02:19 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.deleteCountry(Long))
2025-05-02 15:02:19 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 2
2025-05-02 15:02:21 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-05-02 15:02:21 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-05-02 15:02:21 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 15:02:21 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 15:02:21 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 3
2025-05-02 15:02:47 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.addNewCountry(Country)), args=Country(id=null, name=Germany, capital=Berlin, population=4.5321033E7, areaSquareKm=4130431.0, gdp=60.23, cities=[], nations=null)
2025-05-02 15:02:47 | INFO  | org.example.service.CountryService - ✨ Created country: Germany (ID: 10)
2025-05-02 15:02:47 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.addNewCountry(Country))
2025-05-02 15:02:47 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.addNewCountry(Country))
2025-05-02 15:02:47 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 4
2025-05-02 15:02:58 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.addNewCountry(Country)), args=Country(id=null, name=Германия, capital=Berlin, population=4.5321033E7, areaSquareKm=4130431.0, gdp=60.23, cities=[], nations=null)
2025-05-02 15:02:58 | INFO  | org.example.service.CountryService - ✨ Created country: Германия (ID: 11)
2025-05-02 15:02:58 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.addNewCountry(Country))
2025-05-02 15:02:58 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.addNewCountry(Country))
2025-05-02 15:02:58 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 5
2025-05-02 15:03:02 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountries()), args=
2025-05-02 15:03:02 | INFO  | org.example.service.CountryService - 🔄 Fetched 2 countries from DB and cached
2025-05-02 15:03:02 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 15:03:02 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 15:03:02 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 6
2025-05-02 15:03:08 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.addNewCitiesByCountryId(Long,List)), args=10,[City(id=null, name=Minsk, population=2000000.0, areaSquareKm=409.5, country=null), City(id=null, name=Grodno, population=370000.0, areaSquareKm=142.1, country=null)]
2025-05-02 15:03:08 | INFO  | org.example.service.CityService - ➕ Added city 'Minsk' (ID: 60) to country 'Germany' (ID: 10)
2025-05-02 15:03:08 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'Germany' (ID: 10). Action: ADD
2025-05-02 15:03:08 | INFO  | org.example.service.CityService - ➕ Added city 'Grodno' (ID: 61) to country 'Germany' (ID: 10)
2025-05-02 15:03:08 | INFO  | org.example.service.CityService - 🔄 Updating cache for country 'Germany' (ID: 10). Action: ADD
2025-05-02 15:03:08 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.addNewCitiesByCountryId(Long,List))
2025-05-02 15:03:08 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.addNewCitiesByCountryId(Long,List))
2025-05-02 15:03:08 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 7
2025-05-02 15:03:10 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-05-02 15:03:10 | INFO  | org.example.service.CityService - Cities loaded from database and cached
2025-05-02 15:03:10 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 15:03:10 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 15:03:10 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 8
2025-05-02 15:03:40 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountries()), args=
2025-05-02 15:03:40 | INFO  | org.example.service.CountryService - ✅ Retrieved 2 countries from cache
2025-05-02 15:03:40 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 15:03:40 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 15:03:40 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 9
2025-05-02 15:03:45 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CityController.getCities()), args=
2025-05-02 15:03:45 | INFO  | org.example.service.CityService - Getting cities from cache
2025-05-02 15:03:45 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 15:03:45 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CityController.getCities())
2025-05-02 15:03:45 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 10
2025-05-02 15:04:09 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String)), args=Berlin
2025-05-02 15:04:09 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-05-02 15:04:09 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-05-02 15:04:09 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 11
2025-05-02 15:04:15 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String)), args=Minsk
2025-05-02 15:04:15 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-05-02 15:04:15 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.SearchController.searchCountriesByCity(String))
2025-05-02 15:04:15 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 12
2025-05-02 15:08:51 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.updateCountry(Long,String,String,Double,Double,Double)), args=11
2025-05-02 15:08:51 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_11
2025-05-02 15:08:51 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 11
2025-05-02 15:08:51 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.updateCountry(Long,String,String,Double,Double,Double))
2025-05-02 15:08:51 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.updateCountry(Long,String,String,Double,Double,Double))
2025-05-02 15:08:51 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 13
2025-05-02 15:08:55 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountries()), args=
2025-05-02 15:08:55 | INFO  | org.example.service.CountryService - 🔄 Fetched 2 countries from DB and cached
2025-05-02 15:08:55 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 15:08:55 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 15:08:55 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 14
2025-05-02 15:09:14 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.updateCountry(Long,String,String,Double,Double,Double)), args=11,Germany,Berlin,3.31002651E8,9833517.0,21.45
2025-05-02 15:09:14 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_11
2025-05-02 15:09:14 | ERROR | org.example.service.CountryService - 🚫 Country name conflict: Germany
2025-05-02 15:09:14 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CountryController.updateCountry(Long,String,String,Double,Double,Double)), exception: Name exists
2025-05-02 15:09:14 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.updateCountry(Long,String,String,Double,Double,Double))
2025-05-02 15:09:14 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 15
2025-05-02 15:09:25 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.updateCountry(Long,String,String,Double,Double,Double)), args=11,United States,Berlin,3.31002651E8,9833517.0,21.45
2025-05-02 15:09:25 | INFO  | org.example.service.CountryService - ✅ Country found in cache: country_11
2025-05-02 15:09:25 | INFO  | org.example.service.CountryService - 🔄 Updated country ID: 11
2025-05-02 15:09:25 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.updateCountry(Long,String,String,Double,Double,Double))
2025-05-02 15:09:25 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.updateCountry(Long,String,String,Double,Double,Double))
2025-05-02 15:09:25 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 16
2025-05-02 15:09:29 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountries()), args=
2025-05-02 15:09:29 | INFO  | org.example.service.CountryService - 🔄 Fetched 2 countries from DB and cached
2025-05-02 15:09:29 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 15:09:29 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 15:09:29 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 17
2025-05-02 15:09:37 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.updateCountry(Long,String,String,Double,Double,Double)), args=12,United States,Berlin,3.31002651E8,9833517.0,21.45
2025-05-02 15:09:37 | ERROR | org.example.service.CountryService - 🚫 Country not found with ID: 12
2025-05-02 15:09:37 | ERROR | o.example.aspect.CountrySearchAspect - After throwing execution(ResponseEntity org.example.controller.CountryController.updateCountry(Long,String,String,Double,Double,Double)), exception: Country not found
2025-05-02 15:09:37 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.updateCountry(Long,String,String,Double,Double,Double))
2025-05-02 15:09:37 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 18
2025-05-02 15:10:05 | INFO  | o.example.aspect.CountrySearchAspect - Before execution(ResponseEntity org.example.controller.CountryController.getCountries()), args=
2025-05-02 15:10:05 | INFO  | org.example.service.CountryService - ✅ Retrieved 2 countries from cache
2025-05-02 15:10:05 | INFO  | o.example.aspect.CountrySearchAspect - After returning execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 15:10:05 | INFO  | o.example.aspect.CountrySearchAspect - After execution(ResponseEntity org.example.controller.CountryController.getCountries())
2025-05-02 15:10:05 | INFO  | o.example.aspect.CountrySearchAspect - Count of your accessing the service: 19
